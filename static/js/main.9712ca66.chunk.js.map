{"version":3,"sources":["components/common/doubleRange/DoubleRange.module.scss","components/common/buttonSmall/ButtonSmall.module.scss","components/common/mainTitle/MainTitle.module.scss","components/common/searchInput/SearchInput.module.scss","components/common/itemsFilterSpan/ItemsFilterSpan.module.scss","components/common/modalWindow/ModalWindow.module.scss","components/packsList/packsTableMUI/PacksListTableMUI.module.scss","components/cardsList/cardsTableMUI/CardsListTableMUI.module.scss","App.module.scss","redux/reducers/login-reducer.ts","api/api.ts","redux/reducers/app-reducer.ts","redux/reducers/packsList-reducer.ts","redux/reducers/cardsList-reducer.ts","redux/reducers/registration-reducer.ts","redux/reducers/restorePassword-reducer.ts","redux/reducers/updatePassword-reducer.ts","redux/reducers/learnPack-reducer.ts","redux/store.ts","components/common/mainTitle/MainTitle.tsx","components/common/button/Button.tsx","components/common/headerMenu/HeaderMenuTabsStyles.ts","components/common/headerMenu/HeaderMenu.tsx","components/packsList/tabsShowPacks/TabsStylesShowPacks.ts","components/packsList/tabsShowPacks/TabsShowPacks.tsx","components/common/searchInput/SearchInputStyles.ts","components/common/searchInput/SearchInput.tsx","components/common/doubleRange/DoubleRangeStyles.ts","components/common/doubleRange/DoubleRange.tsx","components/common/itemsFilterSpan/ItemsFilterSpan.tsx","components/common/buttonSmall/ButtonSmall.tsx","components/common/inputText/InputTextMUIStyles.ts","components/common/inputText/InputTextMUI.tsx","components/common/modalWindow/modalEdit/ModalEdit.tsx","components/common/modalWindow/modalEdit/ModalEditPack.tsx","components/common/modalWindow/modalDelete/ModalDelete.tsx","components/common/modalWindow/ModalWindow.tsx","components/packsList/packsTableMUI/PacksListTableMUIStyles.ts","components/packsList/packsTableMUI/PacksListTableMUI.tsx","components/common/paginationTable/PaginationTableStyles.ts","components/common/paginationTable/PaginationTable.tsx","components/common/modalWindow/modalAdd/ModalAdd.tsx","components/common/modalWindow/modalAdd/ModalAddPack.tsx","components/packsList/PacksList.tsx","components/common/rating/RatingMUI.ts","components/common/rating/Rating.tsx","components/common/modalWindow/modalCardInfo/CardInfo.tsx","components/common/modalWindow/modalCardInfo/ModalCardInfo.tsx","components/cardsList/cardsTableMUI/CardsListTableMUIStyles.ts","components/cardsList/cardsTableMUI/CardsListTableMUI.tsx","components/cardsList/CardsList.tsx","components/learnElement/learnQuestion/LearnQuestion.tsx","components/learnElement/learnAnswer/LearnAnswer.tsx","components/learnElement/LearnElement.tsx","assets/images/defaultUserAvatar.png","components/common/profileAvatar/ProfileAvatar.tsx","components/profile/Profile.tsx","components/common/profileAvatarBtn/ProfileAvatarBtn.tsx","components/personalInfo/PersonalInfo.tsx","components/login/LoginStyles.ts","components/login/Login.tsx","components/registration/Registration.tsx","components/restorePassword/RestorePassword.tsx","components/updatePassword/UpdatePassword.tsx","assets/images/search.svg","components/pageNotFound/PageNotFound.tsx","assets/images/email.svg","components/checkEmail/CheckEmail.tsx","components/common/ErrorSnackbar/ErrorSnackbar.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/learnElement/learnAnswer/LearnAnswer.module.scss","components/packsList/tabsShowPacks/TabsShowPacks.module.scss","components/common/modalWindow/modalDelete/ModalDelete.module.scss","components/login/Login.module.scss","components/packsList/PacksList.module.scss","components/cardsList/CardsList.module.scss","components/common/profileAvatar/ProfileAvatar.module.scss","components/profile/Profile.module.scss","components/registration/Registration.module.scss","components/common/headerMenu/HeaderMenu.module.scss","components/common/modalWindow/modalEdit/ModalEdit.module.scss","components/common/modalWindow/modalAdd/ModalAdd.module.scss","components/common/modalWindow/modalCardInfo/CardInfo.module.scss","components/learnElement/learnQuestion/LearnQuestion.module.scss","components/personalInfo/Personal.module.scss","components/common/profileAvatarBtn/ProfileAvatarBtn.module.scss","components/restorePassword/RestorePassword.module.scss","components/pageNotFound/PageNotFound.module.scss","components/checkEmail/CheckEmail.module.scss","components/updatePassword/UpdatePassword.module.scss","components/common/paginationTable/PaginationTable.module.scss","components/common/button/Button.module.scss"],"names":["module","exports","LOGIN_ACTIONS_TYPES","instance","axios","create","baseURL","withCredentials","authAPI","email","password","rememberMe","post","delete","from","message","newPassword","resetPasswordToken","name","avatar","put","packsListAPI","packName","min","max","sortPacksOrder","sortPacksFilter","page","pageCount","user_id","get","cardsPack","packId","_id","cardsAPI","question","sortCardsOrder","sortCardsFilter","answer","card","cardsPack_id","cardId","learnPackAPI","card_id","grade","APP_ACTIONS_TYPES","initialState","isLoggedIn","setIsLoggedInAC","type","SET_IS_LOGGED_IN","PACKS_LIST_ACTIONS_TYPES","navMenuStatus","status","error","userData","publicCardPacksCount","created","updated","isAdmin","verified","setAppStatusAC","SET_APP_STATUS","setAppErrorAC","SET_ERROR","updateUserDataAC","UPDATE_USER_DATA","initializeAppTC","dispatch","a","res","data","SET_USER_DATA_TYPE","console","log","response","CARDS_LIST_ACTIONS_TYPES","cardPacks","cardPacksTotalCount","minCardsCount","maxCardsCount","token","tokenDeathTime","isShowMyPacks","minCardsDoubleRangeValue","maxCardsDoubleRangeValue","searchPacksValue","sortPacksNameOrder","sortPacksCardsCountOrder","sortPacksUpdateOrder","sortPacksCreatedByOrder","changeShowAllOrMyPacksAC","userId","CHANGE_TABS_SHOW_PACKS_STATUS","setDoubleRangesValuesAC","SET_DOUBLE_RANGE_VALUES","setSearchPacksValueAC","SET_NEW_SEARCH_PACKS_VALUE","setSortPacksNameOrderAC","SET_SORT_NAME_PACKS","setSortPacksCardsCountOrderAC","SET_SORT_CARDS_COUNT_PACKS","setSortPacksUpdateOrderAC","SET_SORT_UPDATE_PACKS","setSortPacksCreatedByOrderAC","SET_SORT_CREATED_BY_PACKS","setNewCurrentPageAC","SET_NEW_CURRENT_PAGE","setNewPageCountAC","SET_NEW_PAGE_COUNT","fetchPacksTC","packsState","SET_PACKS_LIST_STATE","addNewPackTC","updatePackTC","newPackName","deletePackTC","REGISTRATION_ACTIONS_TYPES","cards","cardsTotalCount","maxGrade","minGrade","packUserId","searchCardsValue","sortCardsQuestionOrder","sortCardsAnswerOrder","sortCardsUpdateOrder","sortCardsGradeOrder","getCardsTC","cardsState","SET_CARDS","SET_CARD_TOTAL_COUNT","RESTORE_PASSWORD_ACTIONS_TYPES","isSignUp","UPDATE_PASSWORD_ACTIONS_TYPES","errorMessage","LEARN_PACK_ACTIONS_TYPES","isSuccess","rootReducer","combineReducers","appReducer","state","action","packsListReducer","cardsListReducer","SET_CARDS_NEW_CURRENT_PAGE","newCurrentPage","SET_CARDS_NEW_PAGE_COUNT","newPageCount","SET_SEARCH_CARDS_VALUE","SET_SORT_QUESTION_CARDS","SET_SORT_ANSWER_CARDS","SET_SORT_UPDATE_CARDS","SET_SORT_GRADE_CARDS","learnPackReducer","TEMPLATE_ACTION_TYPE","loginReducer","registrationReducer","SET_IS_SIGN_UP","value","restorePasswordReducer","SET_ERROR_MESSAGE","updatePasswordReducer","IS_SUCCESS","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","window","MainTitle","React","memo","props","className","s","mainTitle","textStyle","title","Button","restProps","finalClassName","default","useStyles","makeStyles","theme","root","backgroundColor","color","boxShadow","width","height","paddingLeft","textTransform","fontFamily","fontWeight","fontSize","lineHeight","letterSpacing","HeaderMenu","classes","useSelector","useDispatch","useState","setValue","headerMenu","container","inner","titleWrap","tabsWrap","AppBar","position","Tabs","onChange","event","newValue","aria-label","Tab","label","tabPack","component","Link","to","tabProfile","onClick","disabled","logoutButton","flexGrow","minHeight","minWidth","TabsShowPacks","onAllButtonClick","changeShowMyPacks","onMyButtonClick","tabsShowPacks","showPacksStatus","tabItemsContainer","tabItem","activeTabItem","createStyles","grow","borderRadius","border","search","shape","alpha","palette","common","white","marginRight","spacing","marginLeft","searchIcon","padding","pointerEvents","display","alignItems","justifyContent","opacity","inputInput","transition","transitions","input","inputRoot","SearchInput","searchValue","setSearchValue","InputBase","e","currentTarget","onKeyPressEnter","trim","placeholder","inputProps","transform","top","DoubleRange","numberCards","Slider","setDoubleRangeValues","valueLabelDisplay","aria-labelledby","ItemsFilterSpan","setSetStatusValue","spanTitle","ButtonSmall","buttonSmallDisabled","text","buttonSmall","style","InputTextMUI","FormControl","fullWidth","TextField","onChangeHandler","ModalEdit","setTitle","modalAdd","modalTop","caption","onCancelHandler","btnCross","inputWrap","autoComplete","btns","button","onEditNewPackHandler","rand","Math","round","random","getModalStyle","left","paper","background","shadows","ModalEditPack","modalStyle","ModalDelete","modalDelete","accent","onDeleteHandler","ModalWindow","modalWindow","StyledTableCell","withStyles","head","textAlign","cursor","body","TableCell","StyledTableRow","TableRow","PacksListTableMUI","openDeleteModal","setOpenDeleteModal","openEditModal","setOpenEditModal","id","setId","setPackName","onCancelClickHandler","TableContainer","Paper","Table","TableHead","setNewSortPacksNameOrder","align","setNewSortPacksCardsCountOrder","setNewSortPacksUpdateOrder","setNewSortPacksCreatedByOrder","TableBody","deletePack","updatePack","packs","map","pack","scope","cardsCount","slice","user_name","buttonsContainer","onRemoveClickHandler","onUpdatePackHandler","marginTop","margin","PaginationTable","pagination","paginationMUI","Typography","currentPage","Pagination","count","pagesCount","setNewCurrentPage","size","siblingCount","hidePrevButton","hideNextButton","show","defaultValue","itemsPerPageCount","setNewPageCount","Number","ModalAdd","onAddNewPackHandler","ModalAddPack","PacksList","openModal","setOpenModal","ceil","useEffect","setTimer","setTimeout","clearTimeout","changeShowAllOrMyPacks","useCallback","newSearchPacksValue","addNewPack","packsList","aside","rangeWrap","content","tableTitle","topWrap","RatingMUI","Rating","readOnly","CardInfo","setQuestion","setAnswer","cardInfo","inputBox","onCloseModalHandler","onAddNewHandler","ModalCardInfo","CardsListTableMUI","setNewSortQuestionOrder","setNewSortAnswerOrder","setNewSortUpdateOrder","setNewSortGradeOrder","tableState","deleteCard","updateCard","onRemoveHanlder","CardsList","useParams","history","useHistory","setCardsSearchValue","newSearchCardsValue","setSearchCardsValueAC","setSortQuestionCardsAC","setSortAnswerCardsAC","setSortUpdateCardsAC","setSortGradeCardsAC","addNewCard","cardQuestion","cardAnswer","getState","addCardTC","newCardQuestion","newCardAnswer","updateCardTC","deleteCardTC","setCardsNewCurrentPage","setCardsNewCurrentPageAC","setCardsNewPageCount","setCardsNewCardsPageCountAC","openNewCardModal","setOpenNewCardModal","cardsList","push","btn","searchWrap","length","empty","LearnQuestion","learnQuestion","block","setShowAnswer","LearnAnswer","mappedOptions","grades","option","index","radioLabel","checked","radioInput","learnAnswer","radioWrap","onNextCard","getRandomCard","sum","reduce","acc","i","newSum","LearnElement","questionId","firstCard","setFirstCard","showAnswer","setCard","gradeCardTC","ProfileAvatar","profileAvatar","avatarWrap","src","alt","defaultAvatar","career","profileAvatarButtonContainer","profileAvatarButton","Profile","ProfileAvatarBtn","photoIcon","PersonalInfo","formik","useFormik","initialValues","nickName","validate","values","errors","test","onSubmit","userName","userAvatar","updatedUser","resetForm","handleSubmit","personalInfo","getFieldProps","touched","Login","showPassword","setShowPassword","login","InputProps","endAdornment","InputAdornment","IconButton","onMouseDown","preventDefault","Visibility","VisibilityOff","infoWrap","FormControlLabel","control","Checkbox","forgotLink","account","singUp","Registration","showConfirmPassword","setShowConfirmPassword","handleMouseDownPassword","repeatPassword","registration","RestorePassword","forgot","try","UpdatePassword","updatePasswordTC","PageNotFound","pageNotFoundBlock","number","wrapIcon","linkHome","CheckEmail","checkEmailBlock","checkEmail","iconBg","icon","Alert","elevation","variant","ErrorSnackbar","setOpen","handleClose","reason","Snackbar","open","autoHideDuration","onClose","severity","App","pathname","useLocation","CircularProgress","pagesContainer","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9712ca66.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"DoubleRange_title__r2Q4e\",\"numberCards\":\"DoubleRange_numberCards__1R0Ur\",\"none\":\"DoubleRange_none__3lhRK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonSmall\":\"ButtonSmall_buttonSmall__Rmnsq\",\"buttonSmallDisabled\":\"ButtonSmall_buttonSmallDisabled__1lDR0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainTitle\":\"MainTitle_mainTitle__1SCLu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SearchInput_input__-5Ell\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spanTitle\":\"ItemsFilterSpan_spanTitle__BX_Xe\",\"buttonBlock\":\"ItemsFilterSpan_buttonBlock__2Y1B0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalWindow\":\"ModalWindow_modalWindow__1ICMb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsContainer\":\"PacksListTableMUI_buttonsContainer__2uU4v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsContainer\":\"CardsListTableMUI_buttonsContainer__3S7Vj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagesContainer\":\"App_pagesContainer__m7a1s\"};","import {ThunkAction} from \"redux-thunk\"\r\nimport {authAPI} from \"../../api/api\"\r\nimport {AppActionsType, AppRootStateType} from \"../store\"\r\nimport {initializeAppTC, setAppErrorAC, setAppStatusAC} from \"./app-reducer\"\r\n\r\nenum LOGIN_ACTIONS_TYPES {\r\n    SET_IS_LOGGED_IN = \"SET_IS_LOGGED_IN\",\r\n}\r\n\r\ntype InitialStateType = {\r\n    isLoggedIn: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    isLoggedIn: false\r\n}\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case LOGIN_ACTIONS_TYPES.SET_IS_LOGGED_IN:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: action.isLoggedIn\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setIsLoggedInAC = (isLoggedIn: boolean) => {\r\n    return {type: LOGIN_ACTIONS_TYPES.SET_IS_LOGGED_IN, isLoggedIn} as const\r\n}\r\n\r\n// thunks\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean): ThunkAction<void, AppRootStateType, unknown, AppActionsType> =>\r\n    async (dispatch) => {\r\n        try {\r\n            dispatch(setAppStatusAC(\"loading\"))\r\n            const res = await authAPI.login(email, password, rememberMe)\r\n            dispatch(initializeAppTC())\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (`Login failed: ${e.message}.`)\r\n            console.log(error)\r\n            dispatch(setAppErrorAC(error))\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n        } finally {\r\n            // ...some code\r\n        }\r\n    }\r\n\r\nexport const logoutTC = (): ThunkAction<void, AppRootStateType, unknown, AppActionsType> =>\r\n    async (dispatch) => {\r\n        try {\r\n            dispatch(setAppStatusAC(\"loading\"))\r\n            const res = await authAPI.logout()\r\n            dispatch(setIsLoggedInAC(false))\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (`Logout failed: ${e.message}.`)\r\n            console.log(error)\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n        } finally {\r\n            // ...some code\r\n        }\r\n    }\r\n\r\n// types\r\nexport type LoginReducerActionsType = ReturnType<typeof setIsLoggedInAC>\r\n","import axios from \"axios\"\r\nimport {SortPacksAndCardsOrderType} from \"../redux/reducers/packsList-reducer\"\r\n\r\nconst instance = axios.create({\r\n     baseURL: \"https://neko-back.herokuapp.com/2.0\",\r\n    // baseURL: \"http://localhost:7542/2.0/\",\r\n    withCredentials: true\r\n})\r\n\r\n// api\r\nexport const authAPI = {\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post<LoginUserResponseType>(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete<LogoutResponseType>(`auth/me`, {})\r\n    },\r\n    restorePassword(email: string) {\r\n        return instance.post<RestorePasswordResponseType>(`auth/forgot`, {\r\n            email: email,\r\n            from: `test-front-admin <ai73a@yandex.by>`,\r\n            message: `<div style=\"background-color: lime; padding: 15px\">\r\n                            Click <a href='http://localhost:3000/it-incubator-friday-project#/updatePassword/$token$'>here</a> to restore your password\r\n                      </div>`\r\n        })\r\n    },\r\n    signUp(email: string, password: string) {\r\n        return instance.post<SignUpResponseType>(`auth/register`, {email, password})\r\n    },\r\n    setNewPassword(newPassword: string, resetPasswordToken: string) {\r\n        return instance.post(`/auth/set-new-password`, {\r\n            password: newPassword,\r\n            resetPasswordToken\r\n        })\r\n    },\r\n    me() {\r\n        return instance.post<UserDataType>(`auth/me`, {})\r\n    },\r\n    updateUserData(name: string, avatar: string | undefined | null) {\r\n        return instance.put<UpdateUserDataResponseType>(`auth/me`, {name, avatar})\r\n    }\r\n}\r\n\r\nexport const packsListAPI = {\r\n    getPacks(packName: string, min: number, max: number, sortPacksOrder: SortPacksAndCardsOrderType, sortPacksFilter: string, page: number, pageCount: number, user_id: string) {\r\n        return instance.get<GetPacksResponseType>(`/cards/pack?packName=${packName}&min=${min}&max=${max}&sortPacks=${sortPacksOrder}${sortPacksFilter}&page=${page}&pageCount=${pageCount}&user_id=${user_id}`)\r\n    },\r\n    addPack(packName: string) {\r\n        return instance.post<AddPackResponseType>(`cards/pack`, {cardsPack: {name: packName}})\r\n    },\r\n    updatePack(packName: string, packId: string) {\r\n        return instance.put<UpdatePackResponseType>(`cards/pack`, {cardsPack: {_id: packId, name: packName}})\r\n    },\r\n    deletePack(packId: string) {\r\n        return instance.delete<DeletePackResponseType>(`cards/pack?id=${packId}`)\r\n    }\r\n}\r\n\r\nexport const cardsAPI = {\r\n    getCards(packId: string, page?: number, pageCount?: number, question?: string, sortCardsOrder?: SortPacksAndCardsOrderType, sortCardsFilter?: string, answer?: string, min?: number, max?: number) {\r\n        return instance.get<GetCardsResponseType>(`/cards/card?cardQuestion=${question ? question : \"\"}&cardsPack_id=${packId}&page=${page}&pageCount=${pageCount}&sortCards=${sortCardsOrder}${sortCardsFilter}`)\r\n    },\r\n    addCard(packId: string, question?: string, answer?: string) {\r\n        return instance.post<AddCardResponseType>(`/cards/card`, {card: {cardsPack_id: packId, question, answer,}})\r\n    },\r\n    updateCard(cardId: string, question: string, answer: string) {\r\n        return instance.put<UpdateCardResponseType>(`/cards/card`, {card: {_id: cardId, question, answer}})\r\n    },\r\n    deleteCard(cardId: string) {\r\n        return instance.delete<DeleteCardResponseType>(`/cards/card?id=${cardId}`)\r\n    }\r\n}\r\n\r\nexport const learnPackAPI = {\r\n    gradeCard(card_id: string, grade: number) {\r\n        return instance.put(`/cards/grade`, {card_id, grade})\r\n    }\r\n}\r\n\r\n// types\r\nexport type UserDataType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar: string | undefined\r\n    publicCardPacksCount: number\r\n\r\n    created: string\r\n    updated: string\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n\r\n    error?: string\r\n}\r\n\r\nexport type LoginUserResponseType = UserDataType\r\n\r\nexport type LogoutResponseType = {\r\n    info: string\r\n}\r\n\r\nexport type SignUpResponseType = {\r\n    addedUser: UserDataType\r\n}\r\n\r\ntype RestorePasswordResponseType = {\r\n    answer: boolean\r\n    html: boolean\r\n    info: string\r\n    success: boolean\r\n}\r\n\r\nexport type PackResponseType = {\r\n    cardsCount: number\r\n    created: string\r\n    grade: number\r\n    more_id: string\r\n    name: string\r\n    path: string\r\n    private: false\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    updated: string\r\n    user_id: string\r\n    user_name: string\r\n    __v: number\r\n    _id: string\r\n}\r\n\r\nexport type GetPacksResponseType = {\r\n    cardPacks: Array<PackResponseType>\r\n    cardPacksTotalCount: number\r\n    minCardsCount: number\r\n    maxCardsCount: number\r\n    page: number\r\n    pageCount: number\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\nexport type AddPackResponseType = {\r\n    newCardsPack: PackResponseType\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\nexport type UpdatePackResponseType = {\r\n    updatedCardsPack: PackResponseType\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\nexport type DeletePackResponseType = {\r\n    deletedCardsPack: PackResponseType\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\nexport type CardType = {\r\n    answer: string\r\n    cardsPack_id: string\r\n    comments: string\r\n    created: string\r\n    grade: number\r\n    more_id: string\r\n    question: string\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    updated: string\r\n    user_id: string\r\n    __v: number\r\n    _id: string\r\n}\r\n\r\nexport type GetCardsResponseType = {\r\n    cards: Array<CardType>\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    packUserId: string\r\n    page: number\r\n    pageCount: number\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\nexport type AddCardResponseType = {\r\n    newCard: CardType\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\nexport type UpdateCardResponseType = {\r\n    updatedCard: CardType\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\nexport type DeleteCardResponseType = {\r\n    deletedCard: CardType\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\nexport type UpdateUserDataResponseType = {\r\n    token: string\r\n    tokenDeathTime: number\r\n    updatedUser: UserDataType\r\n}\r\n","import {ThunkAction} from \"redux-thunk\"\r\nimport {authAPI, UserDataType} from \"../../api/api\"\r\nimport {AppActionsType, AppRootStateType} from \"../store\"\r\nimport {setIsLoggedInAC} from \"./login-reducer\"\r\n\r\nenum APP_ACTIONS_TYPES {\r\n    SET_APP_STATUS = \"SET_APP_STATUS\",\r\n    SET_ERROR = \"SET_ERROR\",\r\n    SET_USER_DATA_TYPE = \"USER_DATA_TYPE\",\r\n    UPDATE_USER_DATA = \"UPDATE_USER_DATA\"\r\n}\r\n\r\nconst initialState = {\r\n    navMenuStatus: \"packsList\" as NavMenuStatusType,\r\n    status: \"idle\" as RequestStatusType,\r\n    error: null as string | null,\r\n    userData: {\r\n        _id: \"\",\r\n        email: \"\",\r\n        name: \"\",\r\n        avatar: \"\" as string | undefined,\r\n        publicCardPacksCount: 0,\r\n\r\n        created: \"\",\r\n        updated: \"\",\r\n        isAdmin: false,\r\n        verified: false,\r\n        rememberMe: false,\r\n    } as UserDataType\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case APP_ACTIONS_TYPES.SET_APP_STATUS:\r\n            return {...state, status: action.status}\r\n        case APP_ACTIONS_TYPES.SET_USER_DATA_TYPE:\r\n            return {...state, userData: action.userData}\r\n        case APP_ACTIONS_TYPES.UPDATE_USER_DATA:\r\n            return {...state, ...action.userData}\r\n        case APP_ACTIONS_TYPES.SET_ERROR:\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setAppStatusAC = (status: RequestStatusType) => (\r\n    {type: APP_ACTIONS_TYPES.SET_APP_STATUS, status} as const)\r\n\r\nexport const setAppErrorAC = (error: string | null) => (\r\n    {type: APP_ACTIONS_TYPES.SET_ERROR, error} as const)\r\n\r\nexport const setUserDataAC = (userData: UserDataType) => (\r\n    {type: APP_ACTIONS_TYPES.SET_USER_DATA_TYPE, userData} as const)\r\n\r\nexport const updateUserDataAC = (email: string, name: string, avatar: string | undefined) => (\r\n    {type: APP_ACTIONS_TYPES.UPDATE_USER_DATA, userData: {email, name, avatar}} as const)\r\n\r\n// thunks\r\nexport const initializeAppTC = (): ThunkAction<void, AppRootStateType, unknown, AppActionsType> =>\r\n    async (dispatch) => {\r\n        try {\r\n            dispatch(setAppStatusAC(\"loading\"))\r\n            const res = await authAPI.me()\r\n            if (res.data._id) {\r\n                dispatch(setIsLoggedInAC(true))\r\n                dispatch(setUserDataAC(res.data))\r\n                console.log(\"AuthMe success!!!\")\r\n            }\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (`AuthMe failed: ${e.message}.`)\r\n            console.log(error)\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n        } finally {\r\n            // ...some code\r\n        }\r\n    }\r\n\r\nexport const updateUserDataTC = (userName: string, userEmail: string, userAvatar: string | undefined): ThunkAction<void, AppRootStateType, unknown, AppActionsType> =>\r\n    async (dispatch) => {\r\n        try {\r\n            dispatch(setAppStatusAC(\"loading\"))\r\n            const res = await authAPI.updateUserData(userName, userAvatar)\r\n            const {name, email, avatar} = res.data.updatedUser\r\n            dispatch(updateUserDataAC(name, email, avatar))\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (`Update userData failed: ${e.message}.`)\r\n            console.log(error)\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n        } finally {\r\n            // some code...\r\n        }\r\n    }\r\n\r\n// types\r\nexport type NavMenuStatusType = \"packsList\" | \"profile\"\r\nexport type RequestStatusType = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\r\nexport type AppReducerActionsType = ReturnType<typeof setAppStatusAC>\r\n    | ReturnType<typeof setUserDataAC>\r\n    | ReturnType<typeof updateUserDataAC>\r\n    | ReturnType<typeof setAppErrorAC>","import {ThunkAction} from \"redux-thunk\"\r\nimport {PackResponseType, GetPacksResponseType, packsListAPI} from \"../../api/api\"\r\nimport {AppActionsType, AppRootStateType} from \"../store\"\r\nimport {setAppErrorAC, setAppStatusAC} from \"./app-reducer\"\r\n\r\nenum PACKS_LIST_ACTIONS_TYPES {\r\n    SET_PACKS_LIST_STATE = \"SET_PACKS_LIST_STATE\",\r\n    CHANGE_TABS_SHOW_PACKS_STATUS = \"CHANGE_TABS_SHOW_PACKS_STATUS\",\r\n    SET_DOUBLE_RANGE_VALUES = \"SET_DOUBLE_RANGE_VALUES\",\r\n    SET_NEW_SEARCH_PACKS_VALUE = \"SET_NEW_SEARCH_PACKS_VALUE\",\r\n    SET_SORT_NAME_PACKS = \"SET_SORT_NAME_PACKS\",\r\n    SET_SORT_CARDS_COUNT_PACKS = \"SET_SORT_CARDS_COUNT_PACKS\",\r\n    SET_SORT_UPDATE_PACKS = \"SET_SORT_UPDATE_PACKS\",\r\n    SET_SORT_CREATED_BY_PACKS = \"SET_SORT_CREATED_BY_PACKS\",\r\n    SET_NEW_CURRENT_PAGE = \"SET_NEW_CURRENT_PAGE\",\r\n    SET_NEW_PAGE_COUNT = \"SET_NEW_PAGE_COUNT\"\r\n}\r\n\r\nconst initialState = {\r\n    cardPacks: [] as Array<PackResponseType>,\r\n    cardPacksTotalCount: 0,\r\n    minCardsCount: 0,\r\n    maxCardsCount: 0,\r\n    page: 1,\r\n    pageCount: 10,\r\n    token: \"\",\r\n    tokenDeathTime: 0,\r\n\r\n    user_id: \"\",\r\n\r\n    isShowMyPacks: false,\r\n    minCardsDoubleRangeValue: 0,\r\n    maxCardsDoubleRangeValue: 0,\r\n    searchPacksValue: \"\",\r\n    sortPacksNameOrder: \"default\" as SortPacksAndCardsOrderType,\r\n    sortPacksCardsCountOrder: \"default\" as SortPacksAndCardsOrderType,\r\n    sortPacksUpdateOrder: 0 as SortPacksAndCardsOrderType,\r\n    sortPacksCreatedByOrder: \"default\" as SortPacksAndCardsOrderType,\r\n    sortPacksFilter: \"\",\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const packsListReducer = (state = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case PACKS_LIST_ACTIONS_TYPES.SET_PACKS_LIST_STATE:\r\n            return {...state, ...action.packsState}\r\n        case PACKS_LIST_ACTIONS_TYPES.CHANGE_TABS_SHOW_PACKS_STATUS:\r\n            return {...state, isShowMyPacks: action.isShowMyPacks, user_id: action.userId}\r\n        case PACKS_LIST_ACTIONS_TYPES.SET_DOUBLE_RANGE_VALUES:\r\n            return {\r\n                ...state,\r\n                minCardsDoubleRangeValue: action.minCardsDoubleRangeValue,\r\n                maxCardsDoubleRangeValue: action.maxCardsDoubleRangeValue\r\n            }\r\n        case PACKS_LIST_ACTIONS_TYPES.SET_NEW_SEARCH_PACKS_VALUE:\r\n            return {...state, searchPacksValue: action.searchPacksValue}\r\n        case PACKS_LIST_ACTIONS_TYPES.SET_SORT_NAME_PACKS:\r\n            return {\r\n                ...state,\r\n                sortPacksNameOrder: action.sortPacksNameOrder,\r\n                sortPacksCardsCountOrder: \"default\",\r\n                sortPacksUpdateOrder: \"default\",\r\n                sortPacksCreatedByOrder: \"default\",\r\n                sortPacksFilter: action.sortPacksFilter\r\n            }\r\n        case PACKS_LIST_ACTIONS_TYPES.SET_SORT_CARDS_COUNT_PACKS:\r\n            return {\r\n                ...state,\r\n                sortPacksNameOrder: \"default\",\r\n                sortPacksCardsCountOrder: action.sortPacksCardsCountOrder,\r\n                sortPacksUpdateOrder: \"default\",\r\n                sortPacksCreatedByOrder: \"default\",\r\n                sortPacksFilter: action.sortPacksFilter,\r\n            }\r\n        case PACKS_LIST_ACTIONS_TYPES.SET_SORT_UPDATE_PACKS:\r\n            return {\r\n                ...state,\r\n                sortPacksNameOrder: \"default\",\r\n                sortPacksCardsCountOrder: \"default\",\r\n                sortPacksUpdateOrder: action.sortPacksUpdateOrder,\r\n                sortPacksCreatedByOrder: \"default\",\r\n                sortPacksFilter: action.sortPacksFilter\r\n            }\r\n        case PACKS_LIST_ACTIONS_TYPES.SET_SORT_CREATED_BY_PACKS:\r\n            return {\r\n                ...state,\r\n                sortPacksNameOrder: \"default\",\r\n                sortPacksCardsCountOrder: \"default\",\r\n                sortPacksUpdateOrder: \"default\",\r\n                sortPacksCreatedByOrder: action.sortPacksCreatedByOrder,\r\n                sortPacksFilter: action.sortPacksFilter\r\n            }\r\n        case PACKS_LIST_ACTIONS_TYPES.SET_NEW_CURRENT_PAGE:\r\n            return {...state, page: action.page}\r\n        case PACKS_LIST_ACTIONS_TYPES.SET_NEW_PAGE_COUNT:\r\n            return {...state, pageCount: action.pageCount}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// AC\r\nexport const setPacksListStateAC = (packsState: GetPacksResponseType) => (\r\n    {type: PACKS_LIST_ACTIONS_TYPES.SET_PACKS_LIST_STATE, packsState} as const)\r\n\r\nexport const changeShowAllOrMyPacksAC = (isShowMyPacks: boolean, userId: string) => (\r\n    {type: PACKS_LIST_ACTIONS_TYPES.CHANGE_TABS_SHOW_PACKS_STATUS, isShowMyPacks, userId} as const)\r\n\r\nexport const setDoubleRangesValuesAC = (minCardsDoubleRangeValue: number, maxCardsDoubleRangeValue: number) => (\r\n    {\r\n        type: PACKS_LIST_ACTIONS_TYPES.SET_DOUBLE_RANGE_VALUES,\r\n        minCardsDoubleRangeValue,\r\n        maxCardsDoubleRangeValue\r\n    } as const)\r\n\r\nexport const setSearchPacksValueAC = (searchPacksValue: string) => (\r\n    {type: PACKS_LIST_ACTIONS_TYPES.SET_NEW_SEARCH_PACKS_VALUE, searchPacksValue} as const)\r\n\r\nexport const setSortPacksNameOrderAC = (sortPacksNameOrder: SortPacksAndCardsOrderType, sortPacksFilter: string) => (\r\n    {type: PACKS_LIST_ACTIONS_TYPES.SET_SORT_NAME_PACKS, sortPacksNameOrder, sortPacksFilter} as const)\r\n\r\nexport const setSortPacksCardsCountOrderAC = (sortPacksCardsCountOrder: SortPacksAndCardsOrderType, sortPacksFilter: string) => (\r\n    {type: PACKS_LIST_ACTIONS_TYPES.SET_SORT_CARDS_COUNT_PACKS, sortPacksCardsCountOrder, sortPacksFilter} as const)\r\n\r\nexport const setSortPacksUpdateOrderAC = (sortPacksUpdateOrder: SortPacksAndCardsOrderType, sortPacksFilter: string) => (\r\n    {type: PACKS_LIST_ACTIONS_TYPES.SET_SORT_UPDATE_PACKS, sortPacksUpdateOrder, sortPacksFilter} as const)\r\n\r\nexport const setSortPacksCreatedByOrderAC = (sortPacksCreatedByOrder: SortPacksAndCardsOrderType, sortPacksFilter: string) => (\r\n    {type: PACKS_LIST_ACTIONS_TYPES.SET_SORT_CREATED_BY_PACKS, sortPacksCreatedByOrder, sortPacksFilter} as const)\r\n\r\nexport const setNewCurrentPageAC = (page: number) => (\r\n    {type: PACKS_LIST_ACTIONS_TYPES.SET_NEW_CURRENT_PAGE, page} as const)\r\n\r\nexport const setNewPageCountAC = (pageCount: number) => (\r\n    {type: PACKS_LIST_ACTIONS_TYPES.SET_NEW_PAGE_COUNT, pageCount} as const)\r\n\r\n// TC\r\nexport const fetchPacksTC = (searchPacksValue: string, min: number, max: number, sortPacksOrder: SortPacksAndCardsOrderType, sortPacksFilter: string, page: number, pageCount: number, user_id: string): ThunkAction<void, AppRootStateType, unknown, AppActionsType> =>\r\n    async (dispatch) => {\r\n        try {\r\n            const res = await packsListAPI.getPacks(searchPacksValue, min, max, sortPacksOrder, sortPacksFilter, page, pageCount, user_id)\r\n            dispatch(setPacksListStateAC(res.data))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (`Get packs failed: ${e.message}.`)\r\n            console.log(error)\r\n        } finally {\r\n            // some code...\r\n        }\r\n    }\r\n\r\nexport const addNewPackTC = (packName: string, searchPacksValue: string, min: number, max: number, sortPacksOrder: SortPacksAndCardsOrderType, sortPacksFilter: string, page: number, pageCount: number, user_id: string): ThunkAction<void, AppRootStateType, unknown, AppActionsType> =>\r\n    async (dispatch) => {\r\n        try {\r\n            dispatch(setAppStatusAC(\"loading\"))\r\n            const res = await packsListAPI.addPack(packName)\r\n            dispatch(fetchPacksTC(searchPacksValue, min, max, sortPacksOrder, sortPacksFilter, page, pageCount, user_id))\r\n            dispatch(changeShowAllOrMyPacksAC(true, user_id))\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n        } catch (e) {\r\n\r\n            const error = e.response ? e.response.data.error : (`Add pack failed: ${e.message}.`)\r\n            dispatch(setAppErrorAC(error))\r\n            console.log(error)\r\n\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n        } finally {\r\n            // some code...\r\n        }\r\n    }\r\n\r\nexport const updatePackTC = (newPackName: string, packId: string, searchPacksValue: string, min: number, max: number, sortPacksOrder: SortPacksAndCardsOrderType, sortPacksFilter: string, page: number, pageCount: number, user_id: string): ThunkAction<void, AppRootStateType, unknown, AppActionsType> =>\r\n    async (dispatch) => {\r\n        try {\r\n            dispatch(setAppStatusAC(\"loading\"))\r\n            const res = await packsListAPI.updatePack(newPackName, packId)\r\n            dispatch(fetchPacksTC(searchPacksValue, min, max, sortPacksOrder, sortPacksFilter, page, pageCount, user_id))\r\n            dispatch(changeShowAllOrMyPacksAC(true, user_id))\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (`Update pack failed: ${e.message}.`)\r\n            console.log(error)\r\n            dispatch(setAppErrorAC(error))\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n        } finally {\r\n            // some code...\r\n        }\r\n    }\r\n\r\nexport const deletePackTC = (packId: string, packName: string, min: number, max: number, sortPacksOrder: SortPacksAndCardsOrderType, sortPacksFilter: string, page: number, pageCount: number, user_id: string): ThunkAction<void, AppRootStateType, unknown, AppActionsType> =>\r\n    async (dispatch) => {\r\n        try {\r\n            dispatch(setAppStatusAC(\"loading\"))\r\n            const res = await packsListAPI.deletePack(packId)\r\n            dispatch(fetchPacksTC(packName, min, max, sortPacksOrder, sortPacksFilter, page, pageCount, user_id))\r\n            dispatch(changeShowAllOrMyPacksAC(true, user_id))\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (`Delete pack failed: ${e.message}.`)\r\n            console.log(error)\r\n            dispatch(setAppErrorAC(error))\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n        } finally {\r\n            // some code...\r\n        }\r\n    }\r\n\r\nexport type SortPacksAndCardsOrderType = 0 | 1 | \"default\"\r\nexport type PacksListReducerActionsType = ReturnType<typeof setPacksListStateAC>\r\n    | ReturnType<typeof changeShowAllOrMyPacksAC>\r\n    | ReturnType<typeof setDoubleRangesValuesAC>\r\n    | ReturnType<typeof setSearchPacksValueAC>\r\n    | ReturnType<typeof setSortPacksNameOrderAC>\r\n    | ReturnType<typeof setSortPacksCardsCountOrderAC>\r\n    | ReturnType<typeof setSortPacksUpdateOrderAC>\r\n    | ReturnType<typeof setSortPacksCreatedByOrderAC>\r\n    | ReturnType<typeof setNewCurrentPageAC>\r\n    | ReturnType<typeof setNewPageCountAC>","import {ThunkAction} from \"redux-thunk\"\r\nimport {cardsAPI, CardType, GetCardsResponseType} from \"../../api/api\"\r\nimport {AppActionsType, AppRootStateType} from \"../store\"\r\nimport {setAppErrorAC, setAppStatusAC} from \"./app-reducer\"\r\nimport {SortPacksAndCardsOrderType} from \"./packsList-reducer\"\r\n\r\nenum CARDS_LIST_ACTIONS_TYPES {\r\n    SET_CARDS = \"SET-CARDS\",\r\n    SET_CARD_TOTAL_COUNT = \"SET_CARD_TOTAL_COUNT\",\r\n    SET_CARDS_NEW_CURRENT_PAGE = \"SET_CARDS_NEW_CURRENT_PAGE\",\r\n    SET_CARDS_NEW_PAGE_COUNT = \"SET_CARDS_NEW_PAGE_COUNT\",\r\n    SET_SEARCH_CARDS_VALUE = \"SET_SEARCH_CARDS_VALUE\",\r\n    SET_SORT_QUESTION_CARDS = \"SET_SORT_QUESTION_CARDS\",\r\n    SET_SORT_ANSWER_CARDS = \"SET_SORT_ANSWER_CARDS\",\r\n    SET_SORT_UPDATE_CARDS = \"SET_SORT_UPDATE_CARDS\",\r\n    SET_SORT_GRADE_CARDS = \"SET_SORT_GRADE_CARDS\"\r\n}\r\n\r\nconst initialState = {\r\n    cards: [] as Array<CardType>,\r\n    cardsTotalCount: 0,\r\n    pageCount: 10,\r\n    page: 1,\r\n    maxGrade: 0,\r\n    minGrade: 0,\r\n    packUserId: \"\",\r\n    token: \"\",\r\n    tokenDeathTime: 0,\r\n    searchCardsValue: \"\",\r\n\r\n    sortCardsQuestionOrder: \"default\" as SortPacksAndCardsOrderType,\r\n    sortCardsAnswerOrder: \"default\" as SortPacksAndCardsOrderType,\r\n    sortCardsUpdateOrder: 0 as SortPacksAndCardsOrderType,\r\n    sortCardsGradeOrder: \"default\" as SortPacksAndCardsOrderType,\r\n    sortCardsFilter: \"\"\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const cardsListReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case CARDS_LIST_ACTIONS_TYPES.SET_CARDS:\r\n            return {...state, ...action.cardsState}\r\n        case CARDS_LIST_ACTIONS_TYPES.SET_CARD_TOTAL_COUNT:\r\n            return {...state, cardsTotalCount: action.cardsTotalCount}\r\n        case CARDS_LIST_ACTIONS_TYPES.SET_CARDS_NEW_CURRENT_PAGE:\r\n            return {...state, page: action.newCurrentPage}\r\n        case CARDS_LIST_ACTIONS_TYPES.SET_CARDS_NEW_PAGE_COUNT:\r\n            return {...state, pageCount: action.newPageCount}\r\n        case CARDS_LIST_ACTIONS_TYPES.SET_SEARCH_CARDS_VALUE:\r\n            return {...state, searchCardsValue: action.searchCardsValue}\r\n        case CARDS_LIST_ACTIONS_TYPES.SET_SORT_QUESTION_CARDS:\r\n            return {\r\n                ...state,\r\n                sortCardsQuestionOrder: action.sortCardsQuestionOrder,\r\n                sortCardsAnswerOrder: \"default\",\r\n                sortCardsUpdateOrder: \"default\",\r\n                sortCardsGradeOrder: \"default\",\r\n                sortCardsFilter: action.sortCardsFilter\r\n            }\r\n        case CARDS_LIST_ACTIONS_TYPES.SET_SORT_ANSWER_CARDS:\r\n            return {\r\n                ...state,\r\n                sortCardsQuestionOrder: \"default\",\r\n                sortCardsAnswerOrder: action.sortCardsAnswerOrder,\r\n                sortCardsUpdateOrder: \"default\",\r\n                sortCardsGradeOrder: \"default\",\r\n                sortCardsFilter: action.sortCardsFilter\r\n            }\r\n        case CARDS_LIST_ACTIONS_TYPES.SET_SORT_UPDATE_CARDS:\r\n            return {\r\n                ...state,\r\n                sortCardsQuestionOrder: \"default\",\r\n                sortCardsAnswerOrder: \"default\",\r\n                sortCardsUpdateOrder: action.sortCardsUpdateOrder,\r\n                sortCardsGradeOrder: \"default\",\r\n                sortCardsFilter: action.sortCardsFilter\r\n            }\r\n        case CARDS_LIST_ACTIONS_TYPES.SET_SORT_GRADE_CARDS:\r\n            return {\r\n                ...state,\r\n                sortCardsQuestionOrder: \"default\",\r\n                sortCardsAnswerOrder: \"default\",\r\n                sortCardsUpdateOrder: \"default\",\r\n                sortCardsGradeOrder: action.sortCardsGradeOrder,\r\n                sortCardsFilter: action.sortCardsFilter\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setCardsAC = (cardsState: GetCardsResponseType) => (\r\n    {type: CARDS_LIST_ACTIONS_TYPES.SET_CARDS, cardsState} as const)\r\n\r\nexport const setCardTotalCountAC = (cardsTotalCount: number) => (\r\n    {type: CARDS_LIST_ACTIONS_TYPES.SET_CARD_TOTAL_COUNT, cardsTotalCount} as const)\r\n\r\nexport const setCardsNewCurrentPageAC = (newCurrentPage: number) => (\r\n    {type: CARDS_LIST_ACTIONS_TYPES.SET_CARDS_NEW_CURRENT_PAGE, newCurrentPage} as const)\r\n\r\nexport const setCardsNewCardsPageCountAC = (newPageCount: number) => (\r\n    {type: CARDS_LIST_ACTIONS_TYPES.SET_CARDS_NEW_PAGE_COUNT, newPageCount} as const)\r\n\r\nexport const setSearchCardsValueAC = (searchCardsValue: string) => (\r\n    {type: CARDS_LIST_ACTIONS_TYPES.SET_SEARCH_CARDS_VALUE, searchCardsValue} as const)\r\n\r\nexport const setSortQuestionCardsAC = (sortCardsQuestionOrder: SortPacksAndCardsOrderType, sortCardsFilter: string) => (\r\n    {type: CARDS_LIST_ACTIONS_TYPES.SET_SORT_QUESTION_CARDS, sortCardsQuestionOrder, sortCardsFilter} as const)\r\n\r\nexport const setSortAnswerCardsAC = (sortCardsAnswerOrder: SortPacksAndCardsOrderType, sortCardsFilter: string) => (\r\n    {type: CARDS_LIST_ACTIONS_TYPES.SET_SORT_ANSWER_CARDS, sortCardsAnswerOrder, sortCardsFilter} as const)\r\n\r\nexport const setSortUpdateCardsAC = (sortCardsUpdateOrder: SortPacksAndCardsOrderType, sortCardsFilter: string) => (\r\n    {type: CARDS_LIST_ACTIONS_TYPES.SET_SORT_UPDATE_CARDS, sortCardsUpdateOrder, sortCardsFilter} as const)\r\n\r\nexport const setSortGradeCardsAC = (sortCardsGradeOrder: SortPacksAndCardsOrderType, sortCardsFilter: string) => (\r\n    {type: CARDS_LIST_ACTIONS_TYPES.SET_SORT_GRADE_CARDS, sortCardsGradeOrder, sortCardsFilter} as const)\r\n\r\n// thunks\r\nexport const getCardsTC = (packId: string, page?: number, pageCount?: number, searchCardsValue?: string, sortCardsOrder?: SortPacksAndCardsOrderType, sortCardsFilter?: string): ThunkAction<void, AppRootStateType, unknown, AppActionsType> =>\r\n    async (dispatch) => {\r\n        try {\r\n            const res = await cardsAPI.getCards(packId, page, pageCount, searchCardsValue, sortCardsOrder, sortCardsFilter)\r\n            dispatch(setCardsAC(res.data))\r\n            dispatch(setCardTotalCountAC(res.data.cardsTotalCount))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (`Get cards failed: ${e.message}.`)\r\n            console.log(error)\r\n        } finally {\r\n            // some code...\r\n        }\r\n    }\r\n\r\nexport const addCardTC = (packId: string, cardQuestion: string, cardAnswer: string): ThunkAction<void, AppRootStateType, unknown, AppActionsType> =>\r\n    async (dispatch, getState) => {\r\n        try {\r\n            dispatch(setAppStatusAC(\"loading\"))\r\n            const {page, pageCount, searchCardsValue, sortCardsUpdateOrder, sortCardsFilter} = getState().cardsListReducer\r\n            const res = await cardsAPI.addCard(packId, cardQuestion, cardAnswer)\r\n            dispatch(getCardsTC(packId, page, pageCount, searchCardsValue, sortCardsUpdateOrder, sortCardsFilter))\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (`Add card failed: ${e.message}.`)\r\n            console.log(error)\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n            dispatch(setAppErrorAC(error))\r\n        } finally {\r\n            // some code...\r\n        }\r\n    }\r\n\r\nexport const updateCardTC = (packId: string, cardId: string, newCardQuestion: string, newCardAnswer: string): ThunkAction<void, AppRootStateType, unknown, AppActionsType> =>\r\n    async (dispatch, getState) => {\r\n        try {\r\n            dispatch(setAppStatusAC(\"loading\"))\r\n            const {page, pageCount, searchCardsValue, sortCardsUpdateOrder, sortCardsFilter} = getState().cardsListReducer\r\n            const rest = await cardsAPI.updateCard(cardId, newCardQuestion, newCardAnswer)\r\n            dispatch(getCardsTC(packId, page, pageCount, searchCardsValue, sortCardsUpdateOrder, sortCardsFilter))\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (`Update card failed: ${e.message}.`)\r\n            console.log(error)\r\n            dispatch(setAppErrorAC(error))\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n        } finally {\r\n            // some code...\r\n        }\r\n    }\r\n\r\nexport const deleteCardTC = (packId: string, cardId: string): ThunkAction<void, AppRootStateType, unknown, AppActionsType> =>\r\n    async (dispatch, getState) => {\r\n        try {\r\n            dispatch(setAppStatusAC(\"loading\"))\r\n            const {page, pageCount, searchCardsValue, sortCardsUpdateOrder, sortCardsFilter} = getState().cardsListReducer\r\n            const res = await cardsAPI.deleteCard(cardId)\r\n            dispatch(getCardsTC(packId, page, pageCount, searchCardsValue, sortCardsUpdateOrder, sortCardsFilter))\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (`Delete card failed: ${e.message}.`)\r\n            console.log(error)\r\n            dispatch(setAppErrorAC(error))\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n        } finally {\r\n            // some code...\r\n        }\r\n    }\r\n\r\n// types\r\nexport type CardsListReducerActionsType = ReturnType<typeof setCardsAC>\r\n    | ReturnType<typeof setCardTotalCountAC>\r\n    | ReturnType<typeof setCardsNewCardsPageCountAC>\r\n    | ReturnType<typeof setCardsNewCurrentPageAC>\r\n    | ReturnType<typeof setSearchCardsValueAC>\r\n    | ReturnType<typeof setSortQuestionCardsAC>\r\n    | ReturnType<typeof setSortAnswerCardsAC>\r\n    | ReturnType<typeof setSortUpdateCardsAC>\r\n    | ReturnType<typeof setSortGradeCardsAC>","import {ThunkAction} from \"redux-thunk\"\r\nimport {authAPI} from \"../../api/api\"\r\nimport {AppActionsType, AppRootStateType} from \"../store\"\r\nimport {setAppErrorAC, setAppStatusAC} from \"./app-reducer\"\r\n\r\nenum REGISTRATION_ACTIONS_TYPES {\r\n    SET_IS_SIGN_UP = \"registration/SET_IS_SIGN_UP\"\r\n}\r\n\r\ntype InitialStateType = {\r\n    isSignUp: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    isSignUp: false\r\n}\r\n\r\nexport const registrationReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case REGISTRATION_ACTIONS_TYPES.SET_IS_SIGN_UP:\r\n            return {...state, isSignUp: action.value}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setIsSignUpAC = (value: boolean) => {\r\n    return {type: REGISTRATION_ACTIONS_TYPES.SET_IS_SIGN_UP, value} as const\r\n}\r\n\r\n// thunks\r\nexport const signUpTC = (email: string, password: string): ThunkAction<void, AppRootStateType, unknown, AppActionsType> =>\r\n    async (dispatch) => {\r\n        try {\r\n            dispatch(setAppStatusAC(\"loading\"))\r\n            const res = await authAPI.signUp(email, password)\r\n            dispatch(setIsSignUpAC(true))\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (`Registration failed: ${e.message}.`)\r\n            console.log(error)\r\n            dispatch(setAppErrorAC(error))\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n        } finally {\r\n            // some code...\r\n        }\r\n    }\r\n\r\n// types\r\nexport type RegistrationReducerActionsType = ReturnType<typeof setIsSignUpAC>","import {ThunkAction} from \"redux-thunk\"\r\nimport {authAPI} from \"../../api/api\"\r\nimport {AppActionsType, AppRootStateType} from \"../store\"\r\nimport {setAppStatusAC} from \"./app-reducer\"\r\n\r\nenum RESTORE_PASSWORD_ACTIONS_TYPES {\r\n    SET_ERROR_MESSAGE = \"SET-ERROR-MESSAGE\"\r\n}\r\n\r\nconst initialState = {\r\n    errorMessage: null\r\n}\r\n\r\ntype InitialStateType = {\r\n    errorMessage: string | null\r\n}\r\n\r\nexport const restorePasswordReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case RESTORE_PASSWORD_ACTIONS_TYPES.SET_ERROR_MESSAGE:\r\n            return {...state, errorMessage: action.errorMessage}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setErrorMessageAC = (errorMessage: string) => (\r\n    {type: RESTORE_PASSWORD_ACTIONS_TYPES.SET_ERROR_MESSAGE, errorMessage: errorMessage})\r\n\r\n// thunks\r\nexport const restorePasswordTC = (email: string): ThunkAction<void, AppRootStateType, unknown, AppActionsType> =>\r\n    async (dispatch) => {\r\n        try {\r\n            dispatch(setAppStatusAC(\"loading\"))\r\n            const res = await authAPI.restorePassword(email)\r\n            dispatch(setErrorMessageAC(`Recovery instructions was sent to email: ${email}`))\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (`Restore password failed: ${e.message}.`)\r\n            console.log(error)\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n        } finally {\r\n            // some code...\r\n        }\r\n    }\r\n\r\n// types\r\nexport type RestorePasswordReducerActionsType = ReturnType<typeof setErrorMessageAC>","import {ThunkAction} from \"redux-thunk\"\r\nimport {authAPI} from \"../../api/api\"\r\nimport {AppActionsType, AppRootStateType} from \"../store\"\r\nimport {setAppStatusAC} from \"./app-reducer\"\r\n\r\nenum UPDATE_PASSWORD_ACTIONS_TYPES {\r\n    IS_SUCCESS = \"IS_SUCCESS\"\r\n}\r\n\r\ntype InitialStateType = {\r\n    isSuccess: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    isSuccess: false\r\n}\r\n\r\nexport const updatePasswordReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case UPDATE_PASSWORD_ACTIONS_TYPES.IS_SUCCESS:\r\n            return {...state, isSuccess: action.isSuccess}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const isSuccessAC = (isSuccess: boolean) => (\r\n    {type: UPDATE_PASSWORD_ACTIONS_TYPES.IS_SUCCESS, isSuccess} as const)\r\n\r\n// thunks\r\nexport const updatePasswordTC = (newPassword: string, token: string): ThunkAction<void, AppRootStateType, unknown, AppActionsType> =>\r\n    async (dispatch) => {\r\n        try {\r\n            dispatch(setAppStatusAC(\"loading\"))\r\n            const res = await authAPI.setNewPassword(newPassword, token)\r\n            dispatch(isSuccessAC(true))\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (`Update password failed: ${e.message}.`)\r\n            console.log(error)\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n        } finally {\r\n            // some code...\r\n        }\r\n    }\r\n\r\n// types\r\nexport type UpdatePasswordReducerActionsType = ReturnType<typeof isSuccessAC>\r\n","import {ThunkAction} from \"redux-thunk\"\r\nimport {learnPackAPI} from \"../../api/api\"\r\nimport {AppActionsType, AppRootStateType} from \"../store\"\r\nimport {setAppStatusAC} from \"./app-reducer\"\r\n\r\nenum LEARN_PACK_ACTIONS_TYPES {\r\n    TEMPLATE_ACTION_TYPE = \"TEMPLATE_ACTION_TYPE\"\r\n}\r\n\r\nconst initialState: InitialStateType = {}\r\n\r\ntype InitialStateType = {}\r\n\r\nexport const learnPackReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case LEARN_PACK_ACTIONS_TYPES.TEMPLATE_ACTION_TYPE:\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const templateAC = () => {\r\n    return {type: LEARN_PACK_ACTIONS_TYPES.TEMPLATE_ACTION_TYPE} as const\r\n}\r\n\r\n// thunks\r\nexport const gradeCardTC = (card_id: string, grade: number): ThunkAction<void, AppRootStateType, unknown, AppActionsType> =>\r\n    async (dispatch, getState) => {\r\n        try {\r\n            dispatch(setAppStatusAC(\"loading\"))\r\n            const res = await learnPackAPI.gradeCard(card_id, grade)\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (`Delete card failed: ${e.message}.`)\r\n            console.log(error)\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n        } finally {\r\n            // some code...\r\n        }\r\n    }\r\n\r\n// types\r\nexport type LearnPackReducerActionsType = ReturnType<typeof templateAC>","import {applyMiddleware, combineReducers, createStore} from \"redux\"\r\nimport {composeWithDevTools} from \"redux-devtools-extension\"\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {appReducer, AppReducerActionsType} from \"./reducers/app-reducer\"\r\nimport {packsListReducer, PacksListReducerActionsType} from \"./reducers/packsList-reducer\"\r\nimport {cardsListReducer, CardsListReducerActionsType} from \"./reducers/cardsList-reducer\"\r\nimport {loginReducer, LoginReducerActionsType} from \"./reducers/login-reducer\"\r\nimport {registrationReducer, RegistrationReducerActionsType} from \"./reducers/registration-reducer\"\r\nimport {restorePasswordReducer, RestorePasswordReducerActionsType} from \"./reducers/restorePassword-reducer\"\r\nimport {updatePasswordReducer, UpdatePasswordReducerActionsType} from \"./reducers/updatePassword-reducer\"\r\nimport {learnPackReducer, LearnPackReducerActionsType} from \"./reducers/learnPack-reducer\"\r\n\r\nconst rootReducer = combineReducers({\r\n    appReducer: appReducer,\r\n    packsListReducer: packsListReducer,\r\n    cardsListReducer: cardsListReducer,\r\n    learnPackReducer: learnPackReducer,\r\n    loginReducer: loginReducer,\r\n    registrationReducer: registrationReducer,\r\n    restorePasswordReducer: restorePasswordReducer,\r\n    updatePasswordReducer: updatePasswordReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunkMiddleware)))\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\nexport type AppActionsType = AppReducerActionsType\r\n    | PacksListReducerActionsType\r\n    | CardsListReducerActionsType\r\n    | LearnPackReducerActionsType\r\n    | LoginReducerActionsType\r\n    | RegistrationReducerActionsType\r\n    | RestorePasswordReducerActionsType\r\n    | UpdatePasswordReducerActionsType\r\n\r\n// @ts-ignore\r\nwindow.store = store","import React from \"react\"\r\nimport s from \"./MainTitle.module.scss\"\r\n\r\ntype MainTitlePropsType = {\r\n    title: string\r\n    textStyle?: string\r\n}\r\n\r\nexport const MainTitle = React.memo((props: MainTitlePropsType) => {\r\n    return (\r\n        <h2 className={`${s.mainTitle} ${props.textStyle}`}>\r\n            {props.title}\r\n        </h2>\r\n    )\r\n})","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\"\r\nimport s from \"./Button.module.scss\"\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype ButtonPropsType = DefaultButtonPropsType & {\r\n    error?: string | null\r\n}\r\n\r\nexport const Button: React.FC<ButtonPropsType> = React.memo(({\r\n     error, className,\r\n     ...restProps\r\n}) => {\r\n\r\n    const finalClassName = `${error ? s.error : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            {...restProps}\r\n            className={finalClassName}\r\n        />\r\n    )\r\n})","import {makeStyles, Theme} from \"@material-ui/core/styles\"\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n\r\n        '& .MuiAppBar-colorPrimary': {\r\n            backgroundColor: \"#EBE0E9\",\r\n            color: \"#2D2E46\"\r\n        },\r\n\r\n        '& .MuiPaper-elevation4': {\r\n            boxShadow: \"none\",\r\n        },\r\n\r\n        '& .MuiTabs-indicator': {\r\n            backgroundColor: \"#21268F\",\r\n            width: \"175px\",\r\n            height: \"3px\",\r\n        },\r\n\r\n        '& .MuiTab-textColorInherit.Mui-selected': {\r\n            backgroundColor: \"#DCCCDB\",\r\n        },\r\n\r\n        '& .MuiButtonBase-root': {\r\n            height: \"60px\",\r\n            width: \"175px\",\r\n\r\n            \"@media (max-width: 766.8px)\": {\r\n                height: \"45px\",\r\n            },\r\n\r\n            \"@media (max-width: 574.8px)\": {\r\n                width: \"135px\",\r\n            }\r\n        },\r\n\r\n        '& .MuiTab-wrapper': {\r\n            paddingLeft: \"40px\",\r\n            textTransform: \"none\",\r\n            fontFamily: \"SFUIDisplay, sans-serif\",\r\n            fontWeight: 400,\r\n            fontSize: \"14px\",\r\n            lineHeight: \"1.05\",\r\n            letterSpacing: \".4px\",\r\n        }\r\n    }\r\n}))","import React from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {AppRootStateType} from \"../../../redux/store\"\r\nimport {logoutTC} from \"../../../redux/reducers/login-reducer\"\r\nimport {RequestStatusType} from \"../../../redux/reducers/app-reducer\"\r\nimport {MainTitle} from \"../mainTitle/MainTitle\"\r\nimport {Button} from \"../button/Button\"\r\nimport AppBar from \"@material-ui/core/AppBar\"\r\nimport Tabs from \"@material-ui/core/Tabs\"\r\nimport Tab from \"@material-ui/core/Tab\"\r\nimport {useStyles} from \"./HeaderMenuTabsStyles\"\r\nimport s from \"./HeaderMenu.module.scss\"\r\n\r\ntype HeaderMenuPropsType = {}\r\n\r\nexport const HeaderMenu = React.memo((props: HeaderMenuPropsType) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.appReducer.status)\r\n    const dispatch = useDispatch()\r\n\r\n    const [value, setValue] = React.useState(0)\r\n\r\n    const onLogoutClickHandler = () => {\r\n        dispatch(logoutTC())\r\n    }\r\n\r\n    const onTabClickChangeHandler = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        setValue(newValue)\r\n    }\r\n\r\n    return (\r\n        <div className={s.headerMenu}>\r\n            <div className={s.container}>\r\n                <div className={s.inner}>\r\n                    <div className={s.titleWrap}>\r\n                        <MainTitle title={\"It-Incubator\"}/>\r\n                    </div>\r\n                    <div className={s.tabsWrap}>\r\n                        <div className={classes.root}>\r\n                            <AppBar position=\"static\">\r\n                                <Tabs value={value} onChange={onTabClickChangeHandler} aria-label=\"simple tabs example\">\r\n                                    <Tab label=\"Packs list\" className={s.tabPack} component={Link} to=\"/\"/>\r\n                                    <Tab label=\"Profile\" className={s.tabProfile} component={Link} to=\"/profile\"/>\r\n                                </Tabs>\r\n                            </AppBar>\r\n                        </div>\r\n                    </div>\r\n                    <Button\r\n                        onClick={onLogoutClickHandler}\r\n                        disabled={status === \"loading\"}\r\n                        className={s.logoutButton}>\r\n                        Log out\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import {makeStyles, Theme} from \"@material-ui/core/styles\"\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        '& .MuiTabs-root': {\r\n            backgroundColor: \"#ffffff;\",\r\n            color: \"#2D2E46\",\r\n            width: \"196px\",\r\n            minHeight: \"36px\",\r\n            height: \"36px\",\r\n        },\r\n        '& .MuiTab-root': {\r\n            width: \"98px\",\r\n            height: \"36px\",\r\n            minHeight: \"36px\",\r\n\r\n            \"@media (min-width: 600px)\": {\r\n                minWidth: \"98px\",\r\n            }\r\n        },\r\n        '& .MuiTab-textColorInherit': {\r\n            backgroundColor: \"#ffffff;\",\r\n            color: \"#2D2E46\",\r\n        },\r\n        '& .MuiTab-textColorInherit.Mui-selected': {\r\n            backgroundColor: \"#9A91C8;\",\r\n            color: \"#ffffff\",\r\n        },\r\n        '& .MuiTabs-indicator': {\r\n            backgroundColor: \"transparent\",\r\n        },\r\n        '& .MuiTab-wrapper': {\r\n            textTransform: \"none\",\r\n            fontFamily: \"SFUIDisplay, sans-serif\",\r\n            fontWeight: 400,\r\n            fontSize: \"14px\",\r\n            lineHeight: \"1.05\",\r\n            letterSpacing: \".4px\",\r\n        },\r\n    }\r\n}))","import React from \"react\"\r\nimport {useStyles} from \"./TabsStylesShowPacks\"\r\nimport s from \"./TabsShowPacks.module.scss\"\r\n\r\ntype TabsShowPacksPropsType = {\r\n    userId: string\r\n    showPacksStatus: boolean\r\n    changeShowMyPacks: (isShowMyPacks: boolean, userId: string) => void\r\n}\r\n\r\nexport const TabsShowPacks = React.memo((props: TabsShowPacksPropsType) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const onAllButtonClick = () => {\r\n        props.changeShowMyPacks(false, \"\")\r\n    }\r\n\r\n    const onMyButtonClick = () => {\r\n        props.changeShowMyPacks(true, props.userId)\r\n    }\r\n\r\n    return (\r\n        <div className={s.tabsShowPacks}>\r\n            <h2 className={s.title}>Show packs cards:</h2>\r\n            <div className={classes.root}>\r\n                {!props.showPacksStatus\r\n                    ? <div className={s.tabItemsContainer}>\r\n                        <button onClick={onAllButtonClick} className={`${s.tabItem} ${s.activeTabItem}`}>All</button>\r\n                        <button onClick={onMyButtonClick} className={s.tabItem}>My</button>\r\n                    </div>\r\n                    : <div className={s.tabItemsContainer}>\r\n                        <button onClick={onAllButtonClick} className={s.tabItem}>All</button>\r\n                        <button onClick={onMyButtonClick} className={`${s.tabItem} ${s.activeTabItem}`}>My</button>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n})","import {makeStyles, Theme} from \"@material-ui/core/styles\"\r\nimport {alpha, createStyles} from \"@material-ui/core\"\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        grow: {\r\n            flexGrow: 1,\r\n            borderRadius: \"2px\",\r\n            backgroundColor: \"#ECECF9\",\r\n            border: \"1px solid lightGray\",\r\n        },\r\n\r\n        search: {\r\n            position: \"relative\",\r\n            borderRadius: theme.shape.borderRadius,\r\n            backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n            '&:hover': {\r\n                backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n            },\r\n            marginRight: theme.spacing(2),\r\n            marginLeft: 0,\r\n            width: \"100%\",\r\n\r\n        },\r\n\r\n        searchIcon: {\r\n            padding: theme.spacing(0, 2),\r\n            height: \"100%\",\r\n            position: \"absolute\",\r\n            pointerEvents: \"none\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            opacity: \".5\",\r\n\r\n        },\r\n\r\n        inputInput: {\r\n            padding: theme.spacing(1, 1, 1, 0),\r\n            paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n            transition: theme.transitions.create(\"width\"),\r\n            width: \"100%\",\r\n        },\r\n\r\n        input: {\r\n            display: \"flex\",\r\n            fontFamily: \"SFUIDisplay, sans-serif\",\r\n            fontWeight: 400,\r\n            fontSize: \"14px\",\r\n            lineHeight: \"1.6\",\r\n            color: \"#2D2E46\",\r\n            letterSpacing: \".7px\",\r\n            borderRadius: \"2px\",\r\n            opacity: \".5\",\r\n        },\r\n\r\n        inputRoot: {\r\n            color: \"#2D2E46\",\r\n\r\n            opacity: 1,\r\n        }\r\n    })\r\n)","import React, {ChangeEvent, useState} from \"react\"\r\nimport SearchIcon from \"@material-ui/icons/Search\"\r\nimport {InputBase} from \"@material-ui/core\"\r\nimport {useStyles} from \"./SearchInputStyles\"\r\nimport s from \"./SearchInput.module.scss\"\r\n\r\ntype SearchInputPropsType = {\r\n    onKeyPressEnter: (value: string) => void\r\n}\r\n\r\nexport const SearchInput = React.memo((props: SearchInputPropsType) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [searchValue, setSearchValue] = useState<string>(\"\")\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setSearchValue(e.currentTarget.value)\r\n        props.onKeyPressEnter(searchValue.trim())\r\n    }\r\n\r\n    return (\r\n        <div className={s.input}>\r\n            <div className={classes.grow}>\r\n                <div className={classes.search}>\r\n                    <div className={classes.searchIcon}>\r\n                        <SearchIcon/>\r\n                    </div>\r\n                    <InputBase\r\n                        type={\"text\"}\r\n                        value={searchValue}\r\n                        onChange={onChangeHandler}\r\n                        placeholder=\"Search…\"\r\n                        classes={{\r\n                            root: classes.inputRoot,\r\n                            input: classes.inputInput,\r\n                        }}\r\n                        inputProps={{'aria-label': \"search\"}}\r\n                        className={classes.input}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import {makeStyles, Theme} from \"@material-ui/core/styles\"\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        padding: \"0 15px\",\r\n\r\n        '& .MuiSlider-rail': {\r\n            backgroundColor: \"#21268F\",\r\n            opacity: \".5\",\r\n            height: \"5px\",\r\n            borderRadius: \"10px\",\r\n        },\r\n\r\n        '& .MuiSlider-track': {\r\n            backgroundColor: \"#21268F\",\r\n            height: \"5px\",\r\n            borderRadius: \"10px\",\r\n        },\r\n\r\n        '& .MuiSlider-thumb ': {\r\n            backgroundColor: \"#ffffff\",\r\n            height: \"16px\",\r\n            width: \"16px\",\r\n            border: \"4px solid #21268F\",\r\n\r\n            '& span': {\r\n                width: \"32px\",\r\n                height: \"24px\",\r\n                transform: \"none\",\r\n                borderRadius: \"3px\",\r\n                backgroundColor: \"#21268F\",\r\n                top: \"-22px\",\r\n\r\n                '& span': {\r\n                    transform: \"none\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                },\r\n\r\n            },\r\n        },\r\n    }\r\n}))\r\n\r\n\r\n","import React, {useState} from \"react\"\r\nimport {Slider} from \"@material-ui/core\"\r\nimport {useStyles} from \"./DoubleRangeStyles\"\r\nimport s from \"./DoubleRange.module.scss\"\r\n\r\ntype DoubleRangePropsType = {\r\n    minCardsCount: number\r\n    maxCardsCount: number\r\n    setDoubleRangeValues: (minValue: number, maxValue: number) => void\r\n}\r\n\r\nexport const DoubleRange = React.memo((props: DoubleRangePropsType) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [value, setValue] = useState<number[]>([0, props.maxCardsCount])\r\n\r\n    const onDoubleRangeHandleChange = (event: any, newValue: number | number[]) => {\r\n        setValue(newValue as number[])\r\n        props.setDoubleRangeValues(value[0], value[1])\r\n    }\r\n\r\n    return (\r\n        <div className={s.numberCards}>\r\n            <h2 className={s.title}>Number of cards:</h2>\r\n            <div className={classes.root}>\r\n                <Slider\r\n                    value={value}\r\n                    onChange={onDoubleRangeHandleChange}\r\n                    valueLabelDisplay=\"on\"\r\n                    aria-labelledby=\"range-slider\"\r\n                    min={props.minCardsCount}\r\n                    max={props.maxCardsCount}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React from \"react\"\r\nimport {SortPacksAndCardsOrderType} from \"../../../redux/reducers/packsList-reducer\"\r\nimport s from \"./ItemsFilterSpan.module.scss\"\r\n\r\ntype ItemsFilterSpanPropsType = {\r\n    title: string\r\n    status?: SortPacksAndCardsOrderType\r\n    setSetStatusValue: (sortPacksOrder: SortPacksAndCardsOrderType, sortPacksFilter: string) => void\r\n}\r\n\r\nexport const ItemsFilterSpan = React.memo((props: ItemsFilterSpanPropsType) => {\r\n\r\n    const onStatusClickHandler = () => {\r\n        switch (props.title) {\r\n            case \"Name\":\r\n                props.status === 1\r\n                    ? props.setSetStatusValue(0, \"name\")\r\n                    : props.setSetStatusValue(1, \"name\")\r\n                break\r\n            case \"Cards\":\r\n                props.status === 1\r\n                    ? props.setSetStatusValue(0, \"cardsCount\")\r\n                    : props.setSetStatusValue(1, \"cardsCount\")\r\n                break\r\n            case \"Last Updated\":\r\n                props.status === 1\r\n                    ? props.setSetStatusValue(0, \"updated\")\r\n                    : props.setSetStatusValue(1, \"updated\")\r\n                break\r\n            case \"Created by\":\r\n                props.status === 1\r\n                    ? props.setSetStatusValue(0, \"user_name\")\r\n                    : props.setSetStatusValue(1, \"user_name\")\r\n                break\r\n            case \"Question\":\r\n                props.status === 1\r\n                    ? props.setSetStatusValue(0, \"question\")\r\n                    : props.setSetStatusValue(1, \"question\")\r\n                break\r\n            case \"Answer\":\r\n                props.status === 1\r\n                    ? props.setSetStatusValue(0, \"answer\")\r\n                    : props.setSetStatusValue(1, \"answer\")\r\n                break\r\n            case \"Grade\":\r\n                props.status === 1\r\n                    ? props.setSetStatusValue(0, \"grade\")\r\n                    : props.setSetStatusValue(1, \"grade\")\r\n                break\r\n        }\r\n    }\r\n    return (\r\n        <span onClick={onStatusClickHandler} className={s.spanTitle}>\r\n            {props.title}\r\n            {props.status === 0 ? \"▼\": props.status === 1 ? \"▲\" : \"\"}\r\n        </span>\r\n    )\r\n})","import React from \"react\"\r\nimport s from \"./ButtonSmall.module.scss\"\r\n\r\ntype ButtonSmallPropsType = {\r\n    text: string\r\n    onClick?: any\r\n    disabled?: boolean\r\n    style?: any\r\n}\r\n\r\nexport const ButtonSmall = React.memo((props: ButtonSmallPropsType) => {\r\n    return (\r\n        <>\r\n            {props.disabled\r\n            ? <button onClick={props.onClick} disabled={props.disabled} className={s.buttonSmallDisabled}>\r\n                    {props.text}\r\n                </button>\r\n            : <button onClick={props.onClick} className={s.buttonSmall} style={props.style}>\r\n                    {props.text}\r\n                </button>\r\n            }\r\n        </>\r\n    )\r\n})\r\n","import {makeStyles, Theme} from \"@material-ui/core/styles\"\r\nimport {createStyles} from \"@material-ui/core\"\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => createStyles({\r\n    root: {\r\n        '& .MuiInputBase-input': {\r\n            fontFamily: \"SFUIDisplay, sans-serif\",\r\n            fontWeight: 500,\r\n            fontSize: \"16px\",\r\n            lineHeight: \"1.5\",\r\n            color: \"#2D2E46\",\r\n        },\r\n\r\n        '& .MuiFormLabel-root': {\r\n            fontFamily: \"SFUIDisplay, sans-serif\",\r\n            fontWeight: 400,\r\n            fontSize: \"13px\",\r\n            lineHeight: \"1.5\",\r\n            color: \"#24254A\",\r\n            opacity: \".5\"\r\n        },\r\n\r\n        '& .MuiInput-underline:before': {\r\n            height: \"1.6px\",\r\n            color: \"#24254A\",\r\n            opacity: \".2\"\r\n        },\r\n\r\n        '& .MuiInput-underline:after': {\r\n            color: \"#21268F\",\r\n            opacity: \".2\"\r\n        },\r\n\r\n        '& .MuiSvgIcon-root': {\r\n            color: \"#2D2E46\",\r\n        }\r\n    }\r\n}))","import React, {ChangeEvent} from \"react\"\r\nimport FormControl from \"@material-ui/core/FormControl\"\r\nimport {TextField} from \"@material-ui/core\"\r\nimport {TextFieldProps} from \"@material-ui/core/TextField/TextField\"\r\nimport {useStyles} from \"./InputTextMUIStyles\"\r\nimport s from \"./InputTextMUI.module.scss\"\r\n\r\ntype InputTextMUIPropsType = {\r\n    title?: string\r\n    onChangeHandler?: (e: ChangeEvent<HTMLInputElement>) => void\r\n} & TextFieldProps\r\n\r\nexport const InputTextMUI = React.memo((props: InputTextMUIPropsType) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const {...restProps} = props\r\n\r\n    return (\r\n        <FormControl fullWidth className={classes.root}>\r\n            <TextField\r\n                value={props.title}\r\n                onChange={props.onChangeHandler}\r\n                {...restProps}\r\n            />\r\n        </FormControl>\r\n    )\r\n})","import React, {ChangeEvent, useState} from \"react\"\r\nimport {InputTextMUI} from \"../../inputText/InputTextMUI\"\r\nimport {Button} from \"../../button/Button\"\r\nimport s from \"./ModalEdit.module.scss\"\r\n\r\ntype ModalEdit = {\r\n    packName: string\r\n    onEditNewPackHandler: (newValue: string) => void\r\n    onCancelHandler?: () => void\r\n}\r\n\r\nexport const ModalEdit = React.memo((props: ModalEdit) => {\r\n\r\n    const [title, setTitle] = useState(props.packName)\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const addSaveHandler = () => {\r\n        if (title.trim() !== \"\") {\r\n            props.onEditNewPackHandler(title)\r\n            setTitle(\"\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.modalAdd}>\r\n            <div className={s.modalTop}>\r\n                <h2 className={s.caption}>Edit pack</h2>\r\n                <button onClick={props.onCancelHandler} className={s.btnCross}/>\r\n            </div>\r\n            <div className={s.inputWrap}>\r\n                <InputTextMUI\r\n                    type={\"text\"}\r\n                    value={title}\r\n                    onChangeHandler={onChangeHandler}\r\n                    label={\"Name Pack\"}\r\n                    autoComplete=\"off\"\r\n                />\r\n            </div>\r\n            <div className={s.btns}>\r\n                <Button\r\n                    onClick={props.onCancelHandler}\r\n                    className={s.button}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    onClick={addSaveHandler}\r\n                    className={s.button}>\r\n                    Save\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React from \"react\"\r\nimport {ModalEdit} from \"./ModalEdit\"\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\"\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand()\r\n    const left = 50 + rand()\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        paper: {\r\n            position: \"absolute\",\r\n            width: 400,\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: \"2px solid #000\",\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n        },\r\n    })\r\n)\r\n\r\ntype ModalEditPackPropsType = {\r\n    packName: string\r\n    onEditNewPackHandler: (newValue: string) => void\r\n    onCancelHandler?: () => void\r\n}\r\n\r\nexport const ModalEditPack = React.memo((props: ModalEditPackPropsType) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [modalStyle] = React.useState(getModalStyle)\r\n\r\n    return (\r\n        <div className={classes.paper} style={modalStyle}>\r\n            <ModalEdit\r\n                packName={props.packName}\r\n                onEditNewPackHandler={props.onEditNewPackHandler}\r\n                onCancelHandler={props.onCancelHandler}\r\n            />\r\n        </div>\r\n    )\r\n})","import React from \"react\"\r\nimport {Button} from \"../../button/Button\"\r\nimport s from \"./ModalDelete.module.scss\"\r\n\r\ntype ModalDelete = {\r\n    name: string\r\n    packName: string\r\n    onDeleteHandler: any\r\n    onCancelHandler: any\r\n}\r\n\r\nexport const ModalDelete = React.memo((props: ModalDelete) => {\r\n    return (\r\n        <div className={s.modalDelete}>\r\n            <div className={s.modalTop}>\r\n                <h2 className={s.caption}>Delete {props.name}</h2>\r\n                <button onClick={props.onCancelHandler} className={s.btnCross}/>\r\n            </div>\r\n            <div className={s.inputWrap}>\r\n                <span className={s.text}>Do you really want to remove\r\n                    <span className={s.accent}>{props.name} Name - {props.packName}?</span>\r\n                    All cards will be excluded from this course.\r\n                </span>\r\n            </div>\r\n            <div className={s.btns}>\r\n                <Button\r\n                    onClick={props.onCancelHandler}\r\n                    className={s.button}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    onClick={props.onDeleteHandler}\r\n                    className={s.button}>\r\n                    Delete\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React from \"react\"\r\nimport {ModalDelete} from \"./modalDelete/ModalDelete\"\r\nimport s from \"./ModalWindow.module.scss\"\r\n\r\ntype ModalWindow = {\r\n    name: string\r\n    packName: string\r\n    onDeleteHandler: any\r\n    onCancelHandler: any\r\n}\r\n\r\nexport const ModalWindow = React.memo((props: ModalWindow) => {\r\n    return (\r\n        <div className={s.modalWindow}>\r\n            <ModalDelete\r\n                name={props.name}\r\n                packName={props.packName}\r\n                onDeleteHandler={props.onDeleteHandler}\r\n                onCancelHandler={props.onCancelHandler}\r\n            />\r\n        </div>\r\n    )\r\n})","import {createStyles, Theme, withStyles} from \"@material-ui/core/styles\"\r\nimport TableCell from \"@material-ui/core/TableCell\"\r\nimport TableRow from \"@material-ui/core/TableRow\"\r\n\r\nexport const StyledTableCell = withStyles((theme: Theme) =>\r\n    createStyles({\r\n        head: {\r\n            backgroundColor: \"#ECECF9;\",\r\n            color: \"#2D2E46\",\r\n            fontFamily: \"SFUIDisplay, sans-serif\",\r\n            fontWeight: 600,\r\n            lineHeight: \"1.05\",\r\n            fontSize: 13,\r\n            textAlign: \"left\",\r\n            padding: \"10px\",\r\n\r\n            '& span': {\r\n                cursor: \"pointer\",\r\n            },\r\n        },\r\n        body: {\r\n            fontSize: 13,\r\n            padding: \"10px\",\r\n        },\r\n    })\r\n)(TableCell)\r\n\r\nexport const StyledTableRow = withStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            '& a': {\r\n                color: \"#2D2E46\",\r\n            },\r\n            '& .MuiTable-root': {\r\n                boxShadow: \"0px 4px 14px rgba(45, 46, 70, 0.15\",\r\n                color: \"#2D2E46\",\r\n                fontFamily: \"SFUIDisplay, sans-serif\",\r\n                fontWeight: 400,\r\n                lineHeight: \"1.1\",\r\n            },\r\n            '&:nth-of-type(even)': {\r\n                backgroundColor: \"#F8F7FD\",\r\n            },\r\n            '& .MuiTableCell-root': {\r\n                padding: \"10px\",\r\n            },\r\n        },\r\n    })\r\n)(TableRow)","import React, {useState} from \"react\"\r\nimport {NavLink} from \"react-router-dom\"\r\nimport {useSelector} from \"react-redux\"\r\nimport {PackResponseType} from \"../../../api/api\"\r\nimport {AppRootStateType} from \"../../../redux/store\"\r\nimport {SortPacksAndCardsOrderType} from \"../../../redux/reducers/packsList-reducer\"\r\nimport {ItemsFilterSpan} from \"../../common/itemsFilterSpan/ItemsFilterSpan\"\r\nimport {ButtonSmall} from \"../../common/buttonSmall/ButtonSmall\"\r\nimport {ModalEditPack} from \"../../common/modalWindow/modalEdit/ModalEditPack\"\r\nimport {ModalWindow} from \"../../common/modalWindow/ModalWindow\"\r\nimport TableRow from \"@material-ui/core/TableRow\"\r\nimport TableContainer from \"@material-ui/core/TableContainer\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport Table from \"@material-ui/core/Table\"\r\nimport TableHead from \"@material-ui/core/TableHead\"\r\nimport TableBody from \"@material-ui/core/TableBody\"\r\nimport {StyledTableCell, StyledTableRow} from \"./PacksListTableMUIStyles\"\r\nimport s from \"./PacksListTableMUI.module.scss\"\r\n\r\ntype PacksListTableMUIPropsType = {\r\n    user_id: string\r\n    packs: Array<PackResponseType>\r\n    setNewSortPacksNameOrder: (sortPacksNameOrder: SortPacksAndCardsOrderType, sortPacksFilter: string) => void\r\n    setNewSortPacksCardsCountOrder: (sortPacksOrder: SortPacksAndCardsOrderType, sortPacksFilter: string) => void\r\n    setNewSortPacksUpdateOrder: (sortPacksOrder: SortPacksAndCardsOrderType, sortPacksFilter: string) => void\r\n    setNewSortPacksCreatedByOrder: (sortPacksOrder: SortPacksAndCardsOrderType, sortPacksFilter: string) => void\r\n    updatePack: (newPackName: string, packId: string) => void\r\n    deletePack: (packId: string) => void\r\n}\r\n\r\nexport const PacksListTableMUI = React.memo((props: PacksListTableMUIPropsType) => {\r\n\r\n    const {sortPacksNameOrder, sortPacksCardsCountOrder, sortPacksUpdateOrder, sortPacksCreatedByOrder} = useSelector((state: AppRootStateType) => state.packsListReducer)\r\n\r\n    const [openDeleteModal, setOpenDeleteModal] = useState(false)\r\n    const [openEditModal, setOpenEditModal] = useState(false)\r\n    const [id, setId] = useState(\"\")\r\n    const [packName, setPackName] = useState(\"\")\r\n\r\n    const onDeletePackHandler = () => {\r\n        props.deletePack(id)\r\n        setOpenDeleteModal(false)\r\n    }\r\n\r\n    const onRemoveClickHandler = (id: string, name: string) => {\r\n        setOpenDeleteModal(true)\r\n        setId(id)\r\n        setPackName(name)\r\n    }\r\n\r\n    const onUpdatePackHandler = (packId: string, packName: string) => {\r\n        setOpenEditModal(true)\r\n        setId(packId)\r\n        setPackName(packName)\r\n    }\r\n\r\n    const onEditNewPackHandler = (newValue: string) => {\r\n        props.updatePack(newValue, id)\r\n    }\r\n\r\n    const onCancelClickHandler = () => {\r\n        setOpenDeleteModal(false)\r\n        setOpenEditModal(false)\r\n    }\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table\r\n                // className={classes.table}\r\n                aria-label=\"customized table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <StyledTableCell>\r\n                            <ItemsFilterSpan\r\n                                title={\"Name\"}\r\n                                status={sortPacksNameOrder}\r\n                                setSetStatusValue={props.setNewSortPacksNameOrder}\r\n                            />\r\n                        </StyledTableCell>\r\n                        <StyledTableCell align=\"right\">\r\n                            <ItemsFilterSpan\r\n                                title={\"Cards\"}\r\n                                status={sortPacksCardsCountOrder}\r\n                                setSetStatusValue={props.setNewSortPacksCardsCountOrder}\r\n                            />\r\n                        </StyledTableCell>\r\n                        <StyledTableCell align=\"right\">\r\n                            <ItemsFilterSpan\r\n                                title={\"Last Updated\"}\r\n                                status={sortPacksUpdateOrder}\r\n                                setSetStatusValue={props.setNewSortPacksUpdateOrder}\r\n                            />\r\n                        </StyledTableCell>\r\n                        <StyledTableCell align=\"right\">\r\n                            <ItemsFilterSpan\r\n                                title={\"Created by\"}\r\n                                status={sortPacksCreatedByOrder}\r\n                                setSetStatusValue={props.setNewSortPacksCreatedByOrder}\r\n                            />\r\n                        </StyledTableCell>\r\n                        <StyledTableCell align=\"right\">Actions</StyledTableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {openDeleteModal &&\r\n                    <ModalWindow\r\n                        onDeleteHandler={onDeletePackHandler}\r\n                        onCancelHandler={onCancelClickHandler}\r\n                        packName={packName}\r\n                        name={\"Pack\"}\r\n                    />}\r\n                    {openEditModal &&\r\n                    <ModalEditPack\r\n                        onEditNewPackHandler={onEditNewPackHandler}\r\n                        onCancelHandler={onCancelClickHandler}\r\n                        packName={packName}\r\n                    />}\r\n                    {props.packs.map((pack) => (<StyledTableRow key={pack._id}>\r\n                            <StyledTableCell component=\"th\" scope=\"row\">\r\n                                <NavLink to={`/cardsList/${pack._id}`}>{pack.name}</NavLink>\r\n                            </StyledTableCell>\r\n                            <StyledTableCell>{pack.cardsCount}</StyledTableCell>\r\n                            <StyledTableCell>{pack.updated.slice(0, 10)}</StyledTableCell>\r\n                            <StyledTableCell>{pack.user_name}</StyledTableCell>\r\n                            <StyledTableCell>\r\n                                <div className={s.buttonsContainer}>\r\n                                    {props.user_id === pack.user_id\r\n                                        ? <>\r\n                                            <ButtonSmall\r\n                                                text={\"delete\"}\r\n                                                onClick={() => onRemoveClickHandler(pack._id, pack.name)}\r\n                                                style={{backgroundColor: \"#F1453D\", color: \"#ffffff\"}}\r\n                                            />\r\n                                            <ButtonSmall\r\n                                                text={\"edit\"}\r\n                                                onClick={() => onUpdatePackHandler(pack._id, pack.name)}\r\n                                                style={{backgroundColor: \"#D7D8EF\", color: \"#21268F\"}}\r\n                                            />\r\n                                            <NavLink to={`/learnCard/:${pack._id}`}>\r\n                                                <ButtonSmall\r\n                                                    text={\"learn\"}\r\n                                                    style={{backgroundColor: \"#D7D8EF\", color: \"#21268F\"}}\r\n                                                    disabled={pack.cardsCount === 0}\r\n                                                />\r\n                                            </NavLink>\r\n                                        </>\r\n                                        : <>\r\n                                            <NavLink to={`/learnCard/:${pack._id}`}>\r\n                                                <ButtonSmall\r\n                                                    text={\"learn\"}\r\n                                                    style={{backgroundColor: \"#D7D8EF\", color: \"#21268F\"}}\r\n                                                    disabled={pack.cardsCount === 0}\r\n                                                />\r\n                                            </NavLink>\r\n                                        </>\r\n                                    }\r\n                                </div>\r\n                            </StyledTableCell>\r\n                        </StyledTableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n})","import {createStyles, makeStyles} from \"@material-ui/core/styles\"\r\n\r\nexport const useStyles = makeStyles((theme) =>\r\n        createStyles({\r\n            root: {\r\n                '& > * + *': {\r\n                    marginTop: theme.spacing(2),\r\n                },\r\n\r\n                '& .MuiTypography-body1': {\r\n                    display: \"none\",\r\n                },\r\n\r\n                '& .MuiPaginationItem-page.Mui-selected': {\r\n                    color: \"#F2F5F7\",\r\n                    backgroundColor: \"#21268F;\",\r\n                    borderRadius: \"2px\",\r\n                    opacity: \"1\",\r\n                },\r\n\r\n                '& .MuiPagination-root': {\r\n                    marginTop: \"20px\",\r\n                },\r\n\r\n                '& .MuiPaginationItem-sizeSmall': {\r\n                    margin: \"0 5px\",\r\n                },\r\n\r\n                \"@media (max-width: 359.8px)\": {\r\n                    '& .MuiPagination-ul li:nth-child(3)': {\r\n                        display: \"none\",\r\n                    },\r\n\r\n                    '& .MuiPagination-ul li:nth-child(4)': {\r\n                        display: \"none\",\r\n                    },\r\n\r\n                    '& .MuiPagination-ul li:nth-child(5)': {\r\n                        display: \"none\",\r\n                    }\r\n                },\r\n            }\r\n        })\r\n)","import React, {ChangeEvent} from \"react\"\r\nimport {Pagination} from \"@material-ui/lab\"\r\nimport {Typography} from \"@material-ui/core\"\r\nimport {useStyles} from \"./PaginationTableStyles\"\r\nimport s from \"./PaginationTable.module.scss\"\r\n\r\nexport type ShowValueType = 5 | 10 | 15\r\n\r\ntype PaginationTablePropsType = {\r\n    currentPage: number\r\n    pagesCount: number\r\n    itemsPerPageCount: number\r\n    setNewCurrentPage: (value: number) => void\r\n    setNewPageCount: (value: ShowValueType) => void\r\n}\r\n\r\nexport const PaginationTable = React.memo((props: PaginationTablePropsType) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const onCurrentPageChangeHandler = (event: ChangeEvent<unknown>, value: number) => {\r\n        props.setNewCurrentPage(value)\r\n    }\r\n\r\n    const onPageCountChangeHandler = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        props.setNewPageCount(Number(e.currentTarget.value) as ShowValueType)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={s.pagination}>\r\n                <div className={s.paginationMUI}>\r\n                    <Typography>Page: {props.currentPage}</Typography>\r\n                    <Pagination\r\n                        page={props.currentPage}\r\n                        count={props.pagesCount ? props.pagesCount : 10}\r\n                        onChange={onCurrentPageChangeHandler}\r\n                        size={\"small\"}\r\n                        siblingCount={1}\r\n                        hidePrevButton\r\n                        hideNextButton\r\n                    />\r\n                </div>\r\n                <div className={s.show}>\r\n                    <span>Show</span>\r\n                    <select defaultValue={props.itemsPerPageCount} onChange={onPageCountChangeHandler}>\r\n                        <option value={5}>5</option>\r\n                        <option value={10}>10</option>\r\n                        <option value={15}>15</option>\r\n                    </select>\r\n                    <span>Cards per Page</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React, {ChangeEvent, useState} from \"react\"\r\nimport {InputTextMUI} from \"../../inputText/InputTextMUI\"\r\nimport {Button} from \"../../button/Button\"\r\nimport s from \"./ModalAdd.module.scss\"\r\n\r\ntype ModalAdd = {\r\n    onAddNewPackHandler: (newValue: string) => void\r\n    onCancelHandler?: () => void\r\n}\r\n\r\nexport const ModalAdd = React.memo((props: ModalAdd) => {\r\n\r\n    const [title, setTitle] = useState(\"\")\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const addSaveHandler = () => {\r\n        if (title.trim() !== \"\") {\r\n            props.onAddNewPackHandler(title)\r\n            setTitle(\"\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.modalAdd}>\r\n            <div className={s.modalTop}>\r\n                <h2 className={s.caption}>Add new pack</h2>\r\n                <button onClick={props.onCancelHandler} className={s.btnCross}/>\r\n            </div>\r\n            <div className={s.inputWrap}>\r\n                <InputTextMUI\r\n                    type={\"text\"}\r\n                    value={title}\r\n                    onChangeHandler={onChangeHandler}\r\n                    label={\"Name Pack\"}\r\n                    autoComplete=\"off\"\r\n                />\r\n            </div>\r\n            <div className={s.btns}>\r\n                <Button\r\n                    onClick={props.onCancelHandler}\r\n                    className={s.button}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    onClick={addSaveHandler}\r\n                    className={s.button}>\r\n                    Save\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React from \"react\"\r\nimport {ModalAdd} from \"./ModalAdd\"\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\"\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand()\r\n    const left = 50 + rand()\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        paper: {\r\n            position: \"absolute\",\r\n            width: 400,\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: \"2px solid #000\",\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n        },\r\n    })\r\n)\r\n\r\ntype ModalAddPackPropsType = {\r\n    onAddNewPackHandler: (newValue: string) => void\r\n    onCancelHandler: () => void\r\n}\r\n\r\nexport const ModalAddPack = React.memo((props: ModalAddPackPropsType) => {\r\n\r\n    const classes = useStyles()\r\n    const [modalStyle] = React.useState(getModalStyle)\r\n\r\n    return (\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <ModalAdd\r\n                onAddNewPackHandler={props.onAddNewPackHandler}\r\n                onCancelHandler={props.onCancelHandler}\r\n            />\r\n        </div>\r\n    )\r\n})","import React, {useCallback, useEffect, useState} from \"react\"\r\nimport {Redirect} from \"react-router-dom\"\r\nimport {PackResponseType} from \"../../api/api\"\r\nimport {AppRootStateType} from \"../../redux/store\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {\r\n    fetchPacksTC,\r\n    changeShowAllOrMyPacksAC,\r\n    setDoubleRangesValuesAC,\r\n    setSortPacksUpdateOrderAC,\r\n    setSearchPacksValueAC,\r\n    setSortPacksNameOrderAC,\r\n    setSortPacksCardsCountOrderAC,\r\n    setSortPacksCreatedByOrderAC,\r\n    addNewPackTC,\r\n    deletePackTC,\r\n    updatePackTC,\r\n    setNewCurrentPageAC,\r\n    setNewPageCountAC,\r\n    SortPacksAndCardsOrderType\r\n} from \"../../redux/reducers/packsList-reducer\"\r\nimport {MainTitle} from \"../common/mainTitle/MainTitle\"\r\nimport {TabsShowPacks} from \"./tabsShowPacks/TabsShowPacks\"\r\nimport {SearchInput} from \"../common/searchInput/SearchInput\"\r\nimport {DoubleRange} from \"../common/doubleRange/DoubleRange\"\r\nimport {PacksListTableMUI} from \"./packsTableMUI/PacksListTableMUI\"\r\nimport {PaginationTable} from \"../common/paginationTable/PaginationTable\"\r\nimport {Button} from \"../common/button/Button\"\r\nimport {ModalAddPack} from \"../common/modalWindow/modalAdd/ModalAddPack\"\r\nimport s from \"./PacksList.module.scss\"\r\n\r\ntype PacksListPropsType = {}\r\n\r\nexport const PacksList = React.memo((props: PacksListPropsType) => {\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.loginReducer.isLoggedIn)\r\n    const user_id = useSelector<AppRootStateType, string>(state => state.appReducer.userData._id)\r\n    const userId = useSelector<AppRootStateType, string>(state => state.packsListReducer.user_id)\r\n    const {searchPacksValue, minCardsCount, maxCardsCount, sortPacksNameOrder, sortPacksCardsCountOrder, sortPacksUpdateOrder, sortPacksCreatedByOrder, sortPacksFilter, page, pageCount} = useSelector((state: AppRootStateType) => state.packsListReducer)\r\n    const {isShowMyPacks, minCardsDoubleRangeValue, maxCardsDoubleRangeValue, cardPacksTotalCount} = useSelector((state: AppRootStateType) => state.packsListReducer)\r\n    const packs = useSelector<AppRootStateType, Array<PackResponseType>>((state) => state.packsListReducer.cardPacks)\r\n    const dispatch = useDispatch()\r\n\r\n    const [openModal, setOpenModal] = useState(false)\r\n    const pagesCount = Math.ceil(cardPacksTotalCount / pageCount)\r\n\r\n    useEffect(() => {\r\n        switch (sortPacksFilter) {\r\n            case \"name\":\r\n                dispatch(fetchPacksTC(searchPacksValue, minCardsDoubleRangeValue, maxCardsDoubleRangeValue, sortPacksNameOrder, sortPacksFilter, page, pageCount, userId))\r\n                break\r\n            case \"cardsCount\":\r\n                dispatch(fetchPacksTC(searchPacksValue, minCardsDoubleRangeValue, maxCardsDoubleRangeValue, sortPacksCardsCountOrder, sortPacksFilter, page, pageCount, userId))\r\n                break\r\n            case \"updated\":\r\n                dispatch(fetchPacksTC(searchPacksValue, minCardsDoubleRangeValue, maxCardsDoubleRangeValue, sortPacksUpdateOrder, sortPacksFilter, page, pageCount, userId))\r\n                break\r\n            case \"user_name\":\r\n                dispatch(fetchPacksTC(searchPacksValue, minCardsDoubleRangeValue, maxCardsDoubleRangeValue, sortPacksCreatedByOrder, sortPacksFilter, page, pageCount, userId))\r\n                break\r\n            default: {\r\n                const setTimer = setTimeout(() => {\r\n                    dispatch(fetchPacksTC(searchPacksValue, minCardsDoubleRangeValue, maxCardsDoubleRangeValue, sortPacksUpdateOrder, sortPacksFilter, page, pageCount, userId))\r\n                }, 300)\r\n                return () => {\r\n                    clearTimeout(setTimer)\r\n                }\r\n            }\r\n        }\r\n\r\n    }, [dispatch, searchPacksValue, minCardsDoubleRangeValue, maxCardsDoubleRangeValue, sortPacksNameOrder, sortPacksCardsCountOrder, sortPacksUpdateOrder, sortPacksCreatedByOrder, sortPacksFilter, page, pageCount, userId])\r\n\r\n    const changeShowAllOrMyPacks = useCallback((isShowMyPacks: boolean, userId: string) => {\r\n        dispatch(changeShowAllOrMyPacksAC(isShowMyPacks, userId))\r\n    }, [dispatch])\r\n\r\n    const setDoubleRangeValues = useCallback((minCardsDoubleRangeValue: number, maxCardsDoubleRangeValue: number) => {\r\n        dispatch(setDoubleRangesValuesAC(minCardsDoubleRangeValue, maxCardsDoubleRangeValue))\r\n    }, [dispatch])\r\n\r\n    const setSearchValue = useCallback((newSearchPacksValue: string) => {\r\n        dispatch(setSearchPacksValueAC(newSearchPacksValue))\r\n    }, [dispatch])\r\n\r\n    const setNewSortPacksNameOrder = useCallback((sortPacksOrder: SortPacksAndCardsOrderType, sortPacksFilter: string) => {\r\n        dispatch(setSortPacksNameOrderAC(sortPacksOrder, sortPacksFilter))\r\n    }, [dispatch])\r\n\r\n    const setNewSortPacksCardsCountOrder = useCallback((sortPacksOrder: SortPacksAndCardsOrderType, sortPacksFilter: string) => {\r\n        dispatch(setSortPacksCardsCountOrderAC(sortPacksOrder, sortPacksFilter))\r\n    }, [dispatch])\r\n\r\n    const setNewSortPacksUpdateOrder = useCallback((sortPacksOrder: SortPacksAndCardsOrderType, sortPacksFilter: string) => {\r\n        dispatch(setSortPacksUpdateOrderAC(sortPacksOrder, sortPacksFilter))\r\n    }, [dispatch])\r\n\r\n    const setNewSortPacksCreatedByOrder = useCallback((sortPacksOrder: SortPacksAndCardsOrderType, sortPacksFilter: string) => {\r\n        dispatch(setSortPacksCreatedByOrderAC(sortPacksOrder, sortPacksFilter))\r\n    }, [dispatch])\r\n\r\n    const addNewPack = useCallback((packName: string) => {\r\n        dispatch(addNewPackTC(packName, searchPacksValue, minCardsCount, maxCardsCount, sortPacksUpdateOrder, sortPacksFilter, page, pageCount, user_id))\r\n    }, [dispatch, searchPacksValue, minCardsCount, maxCardsCount, sortPacksUpdateOrder, sortPacksFilter, page, pageCount, user_id])\r\n\r\n    const updatePack = useCallback((newPackName: string, packId: string) => {\r\n        dispatch(updatePackTC(newPackName, packId, searchPacksValue, minCardsCount, maxCardsCount, sortPacksUpdateOrder, sortPacksFilter, page, pageCount, user_id))\r\n    }, [dispatch, searchPacksValue, minCardsCount, maxCardsCount, sortPacksUpdateOrder, sortPacksFilter, page, pageCount, user_id])\r\n\r\n    const deletePack = useCallback((packId: string) => {\r\n        dispatch(deletePackTC(packId, searchPacksValue, minCardsCount, maxCardsCount, sortPacksUpdateOrder, sortPacksFilter, page, pageCount, user_id))\r\n    }, [dispatch, searchPacksValue, minCardsCount, maxCardsCount, sortPacksUpdateOrder, sortPacksFilter, page, pageCount, user_id])\r\n\r\n    const setNewCurrentPage = useCallback((newCurrentPage: number) => {\r\n        dispatch(setNewCurrentPageAC(newCurrentPage))\r\n    }, [dispatch])\r\n\r\n    const setNewPageCount = useCallback((newPageCount: number) => {\r\n        dispatch(setNewPageCountAC(newPageCount))\r\n    }, [dispatch])\r\n\r\n    const onAddNewPackHandler = (newValue: string) => {\r\n        addNewPack(newValue)\r\n        setOpenModal(false)\r\n    }\r\n\r\n    const onCancelHandler = () => {\r\n        setOpenModal(false)\r\n    }\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={\"/login\"}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.packsList}>\r\n            <div className={s.container}>\r\n                <div className={s.inner}>\r\n                    <div className={s.aside}>\r\n                        <TabsShowPacks\r\n                            userId={user_id}\r\n                            showPacksStatus={isShowMyPacks}\r\n                            changeShowMyPacks={changeShowAllOrMyPacks}\r\n                        />\r\n                        <div className={s.rangeWrap}>\r\n                            <DoubleRange\r\n                                minCardsCount={minCardsCount}\r\n                                maxCardsCount={maxCardsCount}\r\n                                setDoubleRangeValues={setDoubleRangeValues}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.content}>\r\n                        <MainTitle title={\"Packs list\"} textStyle={s.tableTitle}/>\r\n                        <div className={s.topWrap}>\r\n                            <SearchInput onKeyPressEnter={setSearchValue}/>\r\n                            <Button\r\n                                onClick={() => setOpenModal(true)}\r\n                                className={s.button}>\r\n                                Add new pack\r\n                            </Button>\r\n                        </div>\r\n                        <PacksListTableMUI\r\n                            user_id={user_id}\r\n                            packs={packs}\r\n                            setNewSortPacksNameOrder={setNewSortPacksNameOrder}\r\n                            setNewSortPacksCardsCountOrder={setNewSortPacksCardsCountOrder}\r\n                            setNewSortPacksUpdateOrder={setNewSortPacksUpdateOrder}\r\n                            setNewSortPacksCreatedByOrder={setNewSortPacksCreatedByOrder}\r\n                            updatePack={updatePack}\r\n                            deletePack={deletePack}\r\n                        />\r\n                        {openModal &&\r\n                        <ModalAddPack onCancelHandler={onCancelHandler} onAddNewPackHandler={onAddNewPackHandler}/>}\r\n                        <PaginationTable\r\n                            currentPage={page}\r\n                            pagesCount={pagesCount}\r\n                            itemsPerPageCount={pageCount}\r\n                            setNewCurrentPage={setNewCurrentPage}\r\n                            setNewPageCount={setNewPageCount}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import {makeStyles, Theme} from \"@material-ui/core/styles\"\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: \"#ffffff\",\r\n        color: \"#21268F\",\r\n        fontSize: \"12px\",\r\n\r\n        '& span ': {\r\n            padding: \"1px\",\r\n        },\r\n    }\r\n}))","import React from \"react\"\r\nimport Rating from \"@material-ui/lab/Rating\"\r\nimport {RatingProps} from \"@material-ui/lab/Rating/Rating\"\r\nimport {useStyles} from \"./RatingMUI\"\r\n\r\nexport const RatingMUI = React.memo((props: RatingProps) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div>\r\n            <Rating  {...props} readOnly className={classes.root}/>\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\n\r\n","import React, {ChangeEvent, useState} from \"react\"\r\nimport {InputTextMUI} from \"../../inputText/InputTextMUI\"\r\nimport {Button} from \"../../button/Button\"\r\nimport s from \"./CardInfo.module.scss\"\r\n\r\ntype CardInfoPropsType = {\r\n    name: string\r\n    question?: string\r\n    answer?: string\r\n    onAddNewHandler: (question: string, answer: string) => void\r\n    onCloseModalHandler: () => void\r\n}\r\n\r\nexport const CardInfo = React.memo((props: CardInfoPropsType) => {\r\n\r\n    const [question, setQuestion] = useState(props.question ? props.question : \"\")\r\n    const [answer, setAnswer] = useState(props.answer ? props.answer : \"\")\r\n\r\n    const onChangeHandlerQuestion = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setQuestion(e.currentTarget.value)\r\n    }\r\n\r\n    const onChangeHandlerAnswer = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setAnswer(e.currentTarget.value)\r\n    }\r\n\r\n    const addSaveHandler = () => {\r\n        if (question.trim() !== \"\") {\r\n            props.onAddNewHandler(question, answer)\r\n            setQuestion(\"\")\r\n            setAnswer(\"\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.cardInfo}>\r\n            <h2 className={s.caption}>{props.name}</h2>\r\n            <div className={s.inputBox}>\r\n                <div className={s.inputWrap}>\r\n                    <InputTextMUI\r\n                        type={\"text\"}\r\n                        value={question}\r\n                        onChangeHandler={onChangeHandlerQuestion}\r\n                        label={\"Question\"}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </div>\r\n                <div className={s.inputWrap}>\r\n                    <InputTextMUI\r\n                        type={\"text\"}\r\n                        value={answer}\r\n                        onChangeHandler={onChangeHandlerAnswer}\r\n                        label={\"Answer\"}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={s.btns}>\r\n                <Button\r\n                    onClick={props.onCloseModalHandler}\r\n                    className={s.button}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    onClick={addSaveHandler}\r\n                    className={s.button}>\r\n                    Save\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React from \"react\"\r\nimport {CardInfo} from \"./CardInfo\"\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\"\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand()\r\n    const left = 50 + rand()\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        paper: {\r\n            position: \"absolute\",\r\n            width: 400,\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: \"2px solid #000\",\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n        },\r\n    })\r\n)\r\n\r\ntype ModalCardInfoPropsType = {\r\n    name: string\r\n    question?: string\r\n    answer?: string\r\n    onAddNewHandler: (question: string, answer: string) => void\r\n    onCloseModalHandler: () => void\r\n}\r\n\r\nexport const ModalCardInfo = React.memo((props: ModalCardInfoPropsType) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [modalStyle] = React.useState(getModalStyle)\r\n\r\n    return (\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <CardInfo\r\n                name={props.name}\r\n                answer={props.answer}\r\n                question={props.question}\r\n                onAddNewHandler={props.onAddNewHandler}\r\n                onCloseModalHandler={props.onCloseModalHandler}\r\n            />\r\n        </div>\r\n    )\r\n})","import {createStyles, Theme, withStyles} from \"@material-ui/core/styles\"\r\nimport TableCell from \"@material-ui/core/TableCell\"\r\nimport TableRow from \"@material-ui/core/TableRow\"\r\n\r\nexport const StyledTableCell = withStyles((theme: Theme) =>\r\n    createStyles({\r\n        head: {\r\n            backgroundColor: \"#ECECF9\",\r\n            color: \"#2D2E46\",\r\n            fontFamily: \"SFUIDisplay, sans-serif\",\r\n            fontWeight: 600,\r\n            lineHeight: \"1.05\",\r\n            '& span': {\r\n                cursor: \"pointer\",\r\n            },\r\n        },\r\n        body: {\r\n            fontSize: 13,\r\n            boxShadow: \"0px 4px 14px rgba(45, 46, 70, 0.15\",\r\n        },\r\n    })\r\n)(TableCell)\r\n\r\nexport const StyledTableRow = withStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            '&:nth-of-type(even)': {\r\n                backgroundColor: \"#F8F7FD\",\r\n            },\r\n        },\r\n    })\r\n)(TableRow)","import React, {useState} from \"react\"\r\nimport {useSelector} from \"react-redux\"\r\nimport {CardType} from \"../../../api/api\"\r\nimport {AppRootStateType} from \"../../../redux/store\"\r\nimport {SortPacksAndCardsOrderType} from \"../../../redux/reducers/packsList-reducer\"\r\nimport {RatingMUI} from \"../../common/rating/Rating\"\r\nimport {ItemsFilterSpan} from \"../../common/itemsFilterSpan/ItemsFilterSpan\"\r\nimport {ButtonSmall} from \"../../common/buttonSmall/ButtonSmall\"\r\nimport {ModalCardInfo} from \"../../common/modalWindow/modalCardInfo/ModalCardInfo\"\r\nimport {ModalWindow} from \"../../common/modalWindow/ModalWindow\"\r\nimport TableRow from \"@material-ui/core/TableRow\"\r\nimport TableContainer from \"@material-ui/core/TableContainer\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport Table from \"@material-ui/core/Table\"\r\nimport TableHead from \"@material-ui/core/TableHead\"\r\nimport TableBody from \"@material-ui/core/TableBody\"\r\nimport {StyledTableCell, StyledTableRow} from \"./CardsListTableMUIStyles\"\r\nimport s from \"./CardsListTableMUI.module.scss\"\r\n\r\ntype CardsListTableMUIPropsType = {\r\n    user_id: string\r\n    tableState: Array<CardType>\r\n    setNewSortQuestionOrder: (sortCardsQuestionOrder: SortPacksAndCardsOrderType, sortCardsFilter: string) => void\r\n    setNewSortAnswerOrder: (sortCardsAnswerOrder: SortPacksAndCardsOrderType, sortCardsFilter: string) => void\r\n    setNewSortUpdateOrder: (sortCardsUpdateOrder: SortPacksAndCardsOrderType, sortCardsFilter: string) => void\r\n    setNewSortGradeOrder: (sortCardsGradeOrder: SortPacksAndCardsOrderType, sortCardsFilter: string) => void\r\n    updateCard: (cardId: string, newCardQuestion: string, newCardAnswer: string) => void\r\n    deleteCard: (cardId: string) => void\r\n}\r\n\r\nexport const CardsListTableMUI = React.memo((props: CardsListTableMUIPropsType) => {\r\n\r\n    const {sortCardsQuestionOrder, sortCardsUpdateOrder, sortCardsAnswerOrder, sortCardsGradeOrder} = useSelector((state: AppRootStateType) => state.cardsListReducer)\r\n\r\n    const [openDeleteModal, setOpenDeleteModal] = useState(false)\r\n    const [openEditModal, setOpenEditModal] = useState(false)\r\n    const [id, setId] = useState(\"\")\r\n    const [question, setQuestion] = useState(\"\")\r\n    const [answer, setAnswer] = useState(\"\")\r\n\r\n    const onDeleteCardHandler = () => {\r\n        props.deleteCard(id)\r\n        setOpenDeleteModal(false)\r\n    }\r\n\r\n    const onRemoveHanlder = (id: string, question: string) => {\r\n        setOpenDeleteModal(true)\r\n        setId(id)\r\n        setQuestion(question)\r\n    }\r\n\r\n    const onUpdatePackHandler = (packId: string, question: string, answer: string) => {\r\n        setOpenEditModal(true)\r\n        setId(packId)\r\n        setQuestion(question)\r\n        setAnswer(answer)\r\n    }\r\n\r\n    const onEditNewPackHandler = (question: string, answer: string) => {\r\n        props.updateCard(id, question, answer)\r\n    }\r\n\r\n    const onCancelHandler = () => {\r\n        setOpenDeleteModal(false)\r\n        setOpenEditModal(false)\r\n    }\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table\r\n                // className={classes.table}\r\n                aria-label=\"customized table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <StyledTableCell>\r\n                            <ItemsFilterSpan\r\n                                title={\"Question\"}\r\n                                status={sortCardsQuestionOrder}\r\n                                setSetStatusValue={props.setNewSortQuestionOrder}\r\n                            />\r\n                        </StyledTableCell>\r\n                        <StyledTableCell>\r\n                            <ItemsFilterSpan\r\n                                title={\"Answer\"}\r\n                                status={sortCardsAnswerOrder}\r\n                                setSetStatusValue={props.setNewSortAnswerOrder}\r\n                            />\r\n                        </StyledTableCell>\r\n                        <StyledTableCell>\r\n                            <ItemsFilterSpan\r\n                                title={\"Last Updated\"}\r\n                                status={sortCardsUpdateOrder}\r\n                                setSetStatusValue={props.setNewSortUpdateOrder}\r\n                            />\r\n                        </StyledTableCell>\r\n                        <StyledTableCell>\r\n                            <ItemsFilterSpan\r\n                                title={\"Grade\"}\r\n                                status={sortCardsGradeOrder}\r\n                                setSetStatusValue={props.setNewSortGradeOrder}\r\n                            />\r\n                        </StyledTableCell>\r\n                        {props.user_id === props.tableState[0].user_id\r\n                        && <StyledTableCell>Actions</StyledTableCell>}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {openDeleteModal\r\n                    && <ModalWindow\r\n                        onDeleteHandler={onDeleteCardHandler}\r\n                        onCancelHandler={onCancelHandler}\r\n                        packName={question}\r\n                        name={\"Card\"}\r\n                    />}\r\n                    {openEditModal\r\n                    && <ModalCardInfo\r\n                        onAddNewHandler={onEditNewPackHandler}\r\n                        onCloseModalHandler={onCancelHandler}\r\n                        question={question}\r\n                        answer={answer}\r\n                        name={\"Edit card\"}\r\n                    />}\r\n                    {props.tableState.map((card) => (\r\n                        <StyledTableRow key={card._id}>\r\n                            <StyledTableCell>{card.question}</StyledTableCell>\r\n                            <StyledTableCell>{card.answer}</StyledTableCell>\r\n                            <StyledTableCell>{card.updated.slice(0, 10)}</StyledTableCell>\r\n                            <StyledTableCell><RatingMUI value={card.grade}/></StyledTableCell>\r\n                            {props.user_id === card.user_id\r\n                            && <StyledTableCell>\r\n                                <div className={s.buttonsContainer}>\r\n                                    <ButtonSmall\r\n                                        text={\"delete\"}\r\n                                        onClick={() => onRemoveHanlder(card._id, card.question)}\r\n                                        style={{backgroundColor: \"#F1453D\", color: \"#ffffff\"}}\r\n                                    />\r\n                                    <ButtonSmall\r\n                                        text={\"edit\"}\r\n                                        onClick={() => onUpdatePackHandler(card._id, card.question, card.answer)}\r\n                                        style={{backgroundColor: \"#D7D8EF\", color: \"#21268F\"}}\r\n                                    />\r\n                                </div>\r\n                            </StyledTableCell>}\r\n                        </StyledTableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n})","import React, {useCallback, useEffect, useState} from \"react\"\r\nimport {Redirect, useHistory, useParams} from \"react-router-dom\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {AppRootStateType} from \"../../redux/store\"\r\nimport {\r\n    getCardsTC,\r\n    setSearchCardsValueAC,\r\n    setSortQuestionCardsAC,\r\n    setSortAnswerCardsAC,\r\n    setSortUpdateCardsAC,\r\n    setSortGradeCardsAC,\r\n    addCardTC,\r\n    updateCardTC,\r\n    deleteCardTC,\r\n    setCardsNewCurrentPageAC,\r\n    setCardsNewCardsPageCountAC\r\n} from \"../../redux/reducers/cardsList-reducer\"\r\nimport {SortPacksAndCardsOrderType} from \"../../redux/reducers/packsList-reducer\"\r\nimport {CardsListTableMUI} from \"./cardsTableMUI/CardsListTableMUI\"\r\nimport {MainTitle} from \"../common/mainTitle/MainTitle\"\r\nimport {SearchInput} from \"../common/searchInput/SearchInput\"\r\nimport {Button} from \"../common/button/Button\"\r\nimport {PaginationTable} from \"../common/paginationTable/PaginationTable\"\r\nimport {ModalCardInfo} from \"../common/modalWindow/modalCardInfo/ModalCardInfo\"\r\nimport s from \"./CardsList.module.scss\"\r\n\r\ntype CardsListPropsType = {}\r\n\r\nexport const CardsList = React.memo((props: CardsListPropsType) => {\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.loginReducer.isLoggedIn)\r\n    const user_id = useSelector<AppRootStateType, string>(state => state.appReducer.userData._id)\r\n    const packUserId = useSelector<AppRootStateType, string>(state => state.cardsListReducer.packUserId)\r\n    const {\r\n        cards, cardsTotalCount,\r\n        searchCardsValue,\r\n        sortCardsQuestionOrder, sortCardsAnswerOrder, sortCardsUpdateOrder, sortCardsGradeOrder, sortCardsFilter,\r\n        pageCount, page\r\n    } = useSelector((state: AppRootStateType) => state.cardsListReducer)\r\n    const dispatch = useDispatch()\r\n\r\n    const {packId} = useParams<{ packId: string }>()\r\n    const history = useHistory()\r\n    const pagesCount = Math.ceil(cardsTotalCount / pageCount)\r\n\r\n    useEffect(() => {\r\n        switch (sortCardsFilter) {\r\n            case \"question\":\r\n                dispatch(getCardsTC(packId, page, pageCount, searchCardsValue, sortCardsQuestionOrder, sortCardsFilter))\r\n                break\r\n            case \"answer\":\r\n                dispatch(getCardsTC(packId, page, pageCount, searchCardsValue, sortCardsAnswerOrder, sortCardsFilter))\r\n                break\r\n            case \"updated\":\r\n                dispatch(getCardsTC(packId, page, pageCount, searchCardsValue, sortCardsUpdateOrder, sortCardsFilter))\r\n                break\r\n            case \"grade\":\r\n                dispatch(getCardsTC(packId, page, pageCount, searchCardsValue, sortCardsGradeOrder, sortCardsFilter))\r\n                break\r\n            default:\r\n                dispatch(getCardsTC(packId, page, pageCount, searchCardsValue, sortCardsUpdateOrder, sortCardsFilter))\r\n        }\r\n    }, [dispatch, packId, page, pageCount, searchCardsValue, sortCardsQuestionOrder, sortCardsUpdateOrder, sortCardsFilter, sortCardsGradeOrder, sortCardsAnswerOrder])\r\n\r\n    const RedirectToPacksListHandler = () => {\r\n        history.push(\"/\")\r\n    }\r\n\r\n    const setCardsSearchValue = useCallback((newSearchCardsValue: string) => {\r\n        dispatch(setSearchCardsValueAC(newSearchCardsValue))\r\n    }, [dispatch])\r\n\r\n    const setNewSortQuestionOrder = useCallback((sortCardsQuestionOrder: SortPacksAndCardsOrderType, sortCardsFilter: string) => {\r\n        dispatch(setSortQuestionCardsAC(sortCardsQuestionOrder, sortCardsFilter))\r\n    }, [dispatch])\r\n\r\n    const setNewSortAnswerOrder = useCallback((sortCardsAnswerOrder: SortPacksAndCardsOrderType, sortCardsFilter: string) => {\r\n        dispatch(setSortAnswerCardsAC(sortCardsAnswerOrder, sortCardsFilter))\r\n    }, [dispatch])\r\n\r\n    const setNewSortUpdateOrder = useCallback((sortCardsOrder: SortPacksAndCardsOrderType, sortCardsFilter: string) => {\r\n        dispatch(setSortUpdateCardsAC(sortCardsOrder, sortCardsFilter))\r\n    }, [dispatch])\r\n\r\n    const setNewSortGradeOrder = useCallback((sortCardsGradeOrder: SortPacksAndCardsOrderType, sortCardsFilter: string) => {\r\n        dispatch(setSortGradeCardsAC(sortCardsGradeOrder, sortCardsFilter))\r\n    }, [dispatch])\r\n\r\n    const addNewCard = useCallback((cardQuestion: string, cardAnswer: string) => {\r\n        dispatch(addCardTC(packId, cardQuestion, cardAnswer))\r\n    }, [dispatch, packId])\r\n\r\n    const updateCard = useCallback((cardId: string, newCardQuestion: string, newCardAnswer: string) => {\r\n        dispatch(updateCardTC(packId, cardId, newCardQuestion, newCardAnswer))\r\n    }, [dispatch, packId])\r\n\r\n    const deleteCard = useCallback((cardId: string) => {\r\n        dispatch(deleteCardTC(packId, cardId))\r\n    }, [dispatch, packId])\r\n\r\n    const setCardsNewCurrentPage = useCallback((newCurrentPage: number) => {\r\n        dispatch(setCardsNewCurrentPageAC(newCurrentPage))\r\n    }, [dispatch])\r\n\r\n    const setCardsNewPageCount = useCallback((newPageCount: number) => {\r\n        dispatch(setCardsNewCardsPageCountAC(newPageCount))\r\n    }, [dispatch])\r\n\r\n    const [openNewCardModal, setOpenNewCardModal] = useState(false)\r\n\r\n    const onAddNewHandler = (question: string, answer: string) => {\r\n        addNewCard(question, answer)\r\n        setOpenNewCardModal(false)\r\n    }\r\n    const onOpenModalHandler = () => {\r\n        setOpenNewCardModal(true)\r\n    }\r\n    const onCloseModalHandler = () => {\r\n        setOpenNewCardModal(false)\r\n    }\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={\"/login\"}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.cardsList}>\r\n            <div className={s.container}>\r\n                <div className={s.inner}>\r\n                    <div className={s.topWrap}>\r\n                        <button onClick={RedirectToPacksListHandler} className={s.btn}/>\r\n                        <MainTitle title={\"Pack Name\"} textStyle={s.tableTitle}/>\r\n                    </div>\r\n                    <div className={s.searchWrap}>\r\n                        <SearchInput onKeyPressEnter={setCardsSearchValue}/>\r\n                        {packUserId === user_id\r\n                        && <Button\r\n                            onClick={() => onOpenModalHandler()}\r\n                            className={s.button}>\r\n                            Add new card\r\n                        </Button>}\r\n                    </div>\r\n                    {cards.length === 0\r\n                        ? <span className={s.empty}>This pack is empty. Click add new card to fill this pack</span>\r\n                        : <>\r\n                            <CardsListTableMUI\r\n                                user_id={user_id}\r\n                                tableState={cards}\r\n                                setNewSortQuestionOrder={setNewSortQuestionOrder}\r\n                                setNewSortAnswerOrder={setNewSortAnswerOrder}\r\n                                setNewSortUpdateOrder={setNewSortUpdateOrder}\r\n                                setNewSortGradeOrder={setNewSortGradeOrder}\r\n                                updateCard={updateCard}\r\n                                deleteCard={deleteCard}\r\n                            />\r\n                            <PaginationTable\r\n                                currentPage={page}\r\n                                pagesCount={pagesCount}\r\n                                itemsPerPageCount={pageCount}\r\n                                setNewCurrentPage={setCardsNewCurrentPage}\r\n                                setNewPageCount={setCardsNewPageCount}\r\n                            />\r\n                        </>}\r\n                    {openNewCardModal\r\n                    && <ModalCardInfo\r\n                        name={\"Card info\"}\r\n                        onAddNewHandler={onAddNewHandler}\r\n                        onCloseModalHandler={onCloseModalHandler}\r\n                    />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React from \"react\"\r\nimport {useHistory} from \"react-router-dom\"\r\nimport {CardType} from \"../../../api/api\"\r\nimport {Button} from \"../../common/button/Button\"\r\nimport s from \"./LearnQuestion.module.scss\"\r\n\r\ntype learnQuestionPropsType = {\r\n    card: CardType\r\n    setShowAnswer: (value: boolean) => void\r\n}\r\n\r\nexport const LearnQuestion = React.memo((props: learnQuestionPropsType) => {\r\n\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <div className={s.learnQuestion}>\r\n            <h2 className={s.caption}>Learn card: </h2>\r\n            <div className={s.block}>\r\n                <span className={s.action}>Question:</span>\r\n                <span className={s.text}>{props.card.question}</span>\r\n            </div>\r\n            <div className={s.btns}>\r\n                <Button\r\n                    onClick={() => history.push(\"/\")}\r\n                    className={s.button}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    onClick={() => props.setShowAnswer(true)}\r\n                    className={s.button}>\r\n                    Show answer\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React from \"react\"\r\nimport {CardType} from \"../../../api/api\"\r\nimport {Button} from \"../../common/button/Button\"\r\nimport {AnswerType} from \"../LearnElement\"\r\nimport s from \"./LearnAnswer.module.scss\"\r\n\r\ntype LearnAnswerPropsType = {\r\n    card: CardType\r\n    grades: string[]\r\n    setShowAnswer: (value: boolean) => void\r\n    onNextCard: (grade: number) => void\r\n}\r\n\r\nexport const LearnAnswer = React.memo((props: LearnAnswerPropsType) => {\r\n\r\n    const [value, setValue] = React.useState<AnswerType>(-1)\r\n\r\n    const onChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setValue(Number(e.currentTarget.value) as AnswerType)\r\n    }\r\n\r\n    const mappedOptions = props.grades ? props.grades.map((option, index) => (\r\n        <label key={index} className={s.radioLabel}>\r\n            <input\r\n                type={\"radio\"}\r\n                value={index}\r\n                checked={value === index}\r\n                onChange={onChangeHandler}\r\n                className={s.radioInput}\r\n            />\r\n            {option}\r\n        </label>\r\n    )) : []\r\n\r\n    return (\r\n        <div className={s.learnAnswer}>\r\n            <h2 className={s.caption}>Learn “Pack Name”</h2>\r\n            <div className={s.block}>\r\n                <span className={s.action}>Question:</span>\r\n                <span className={s.text}>{props.card.question}</span>\r\n            </div>\r\n            <div className={s.block}>\r\n                <span className={s.action}>Answer:</span>\r\n                <span className={s.text}>{props.card.answer}</span>\r\n            </div>\r\n            <div className={s.radioWrap}>\r\n                <span className={s.action}>Rate yourself:</span>\r\n                {mappedOptions}\r\n            </div>\r\n            <div className={s.btns}>\r\n                <Button\r\n                    onClick={() => props.setShowAnswer(false)}\r\n                    className={s.button}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    onClick={() => props.onNextCard(value)}\r\n                    className={s.button}>\r\n                    Next\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React, {useCallback, useEffect, useState} from \"react\"\r\nimport {Redirect, useParams} from \"react-router-dom\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {CardType} from \"../../api/api\"\r\nimport {AppRootStateType} from \"../../redux/store\"\r\nimport {getCardsTC} from \"../../redux/reducers/cardsList-reducer\"\r\nimport {gradeCardTC} from \"../../redux/reducers/learnPack-reducer\"\r\nimport {LearnQuestion} from \"./learnQuestion/LearnQuestion\"\r\nimport {LearnAnswer} from \"./learnAnswer/LearnAnswer\"\r\n\r\nexport type AnswerType = -1 | 0 | 1 | 2 | 3 | 4 | 5\r\n\r\nconst grades = [\"No idea\", \"Forgot\", \"Think long\", \"Mix up\", \"Knew\"]\r\n\r\nconst getRandomCard = (cards: CardType[]) => {\r\n    const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0)\r\n    const rand = Math.random() * sum\r\n    const res = cards.reduce((acc: { sum: number, id: number }, card, i) => {\r\n        const newSum = acc.sum + (6 - card.grade) * (6 - card.grade)\r\n        return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n    }, {sum: 0, id: -1})\r\n    return cards[res.id + 1]\r\n}\r\n\r\nexport const LearnElement: React.FC = React.memo(() => {\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.loginReducer.isLoggedIn)\r\n\r\n    const {\r\n        cards, searchCardsValue,\r\n        sortCardsQuestionOrder, sortCardsAnswerOrder, sortCardsUpdateOrder, sortCardsGradeOrder, sortCardsFilter,\r\n        pageCount, page\r\n    } = useSelector((state: AppRootStateType) => state.cardsListReducer)\r\n    const dispatch = useDispatch()\r\n\r\n    const {questionId} = useParams<{ questionId: string }>()\r\n\r\n    const [firstCard, setFirstCard] = useState<boolean>(true)\r\n    const [showAnswer, setShowAnswer] = useState<boolean>(false)\r\n    const [card, setCard] = useState<CardType>({_id: \"\"} as CardType)\r\n\r\n    useEffect(() => {\r\n        if (firstCard) {\r\n            dispatch(getCardsTC(questionId.slice(1), page, pageCount, searchCardsValue, sortCardsUpdateOrder, sortCardsFilter))\r\n            setFirstCard(false)\r\n        }\r\n        if (cards.length > 0) {\r\n            setCard(getRandomCard(cards))\r\n        }\r\n    }, [dispatch, cards, firstCard, questionId, page, pageCount, searchCardsValue, sortCardsQuestionOrder, sortCardsUpdateOrder, sortCardsFilter, sortCardsGradeOrder, sortCardsAnswerOrder])\r\n\r\n    const onNextCard = useCallback((grade: number) => {\r\n        setShowAnswer(false)\r\n        if (cards.length > 0) {\r\n            if (grade !== -1) {\r\n                dispatch(gradeCardTC(card._id, grade))\r\n            }\r\n            setCard(getRandomCard(cards))\r\n        }\r\n    }, [dispatch, cards, card])\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={\"/login\"}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!showAnswer\r\n                ? <LearnQuestion\r\n                    card={card}\r\n                    setShowAnswer={setShowAnswer}\r\n                />\r\n                : <LearnAnswer\r\n                    card={card}\r\n                    grades={grades}\r\n                    setShowAnswer={setShowAnswer}\r\n                    onNextCard={onNextCard}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n})","export default __webpack_public_path__ + \"static/media/defaultUserAvatar.0deba007.png\";","import React from \"react\"\r\nimport {NavLink} from \"react-router-dom\"\r\nimport {useSelector} from \"react-redux\"\r\nimport {AppRootStateType} from \"../../../redux/store\"\r\nimport {Button} from \"../button/Button\"\r\nimport defaultAvatar from \"../../../assets/images/defaultUserAvatar.png\"\r\nimport s from \"./ProfileAvatar.module.scss\"\r\n\r\ntype ProfileAvatarPropsType = {}\r\n\r\nexport const ProfileAvatar = React.memo((props: ProfileAvatarPropsType) => {\r\n\r\n    const {name, avatar} = useSelector((state: AppRootStateType) => state.appReducer.userData)\r\n\r\n    return (\r\n        <div className={s.profileAvatar}>\r\n            {avatar\r\n            ? <div className={s.avatarWrap}>\r\n                    <img className={s.avatar} src={avatar} alt=\"avatar\"/>\r\n                </div>\r\n            : <div className={s.avatarWrap}>\r\n                    <img className={s.avatar} src={defaultAvatar} alt=\"avatar\"/>\r\n                </div>\r\n            }\r\n            <h2 className={s.name}>{name}</h2>\r\n            <span className={s.career}>Front-end developer</span>\r\n            <div className={s.profileAvatarButtonContainer}>\r\n                <NavLink to={\"/editProfile\"}>\r\n                    <Button\r\n                        onClick={() => {}}\r\n                        className={s.profileAvatarButton}>\r\n                        Edit profile\r\n                    </Button>\r\n                </NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React, {useCallback, useEffect, useState} from \"react\"\r\nimport {Redirect} from \"react-router-dom\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {AppRootStateType} from \"../../redux/store\"\r\nimport {\r\n    fetchPacksTC,\r\n    setDoubleRangesValuesAC, setNewCurrentPageAC, setNewPageCountAC,\r\n    setSearchPacksValueAC,\r\n    setSortPacksCardsCountOrderAC, setSortPacksCreatedByOrderAC,\r\n    setSortPacksNameOrderAC,\r\n    setSortPacksUpdateOrderAC,\r\n    addNewPackTC, updatePackTC, deletePackTC,\r\n    SortPacksAndCardsOrderType\r\n} from \"../../redux/reducers/packsList-reducer\"\r\nimport {ProfileAvatar} from \"../common/profileAvatar/ProfileAvatar\"\r\nimport {DoubleRange} from \"../common/doubleRange/DoubleRange\"\r\nimport {MainTitle} from \"../common/mainTitle/MainTitle\"\r\nimport {SearchInput} from \"../common/searchInput/SearchInput\"\r\nimport {Button} from \"../common/button/Button\"\r\nimport {PacksListTableMUI} from \"../packsList/packsTableMUI/PacksListTableMUI\"\r\nimport {PaginationTable} from \"../common/paginationTable/PaginationTable\"\r\nimport {ModalAddPack} from \"../common/modalWindow/modalAdd/ModalAddPack\"\r\nimport {PackResponseType} from \"../../api/api\"\r\nimport s from \"./Profile.module.scss\"\r\n\r\ntype ProfilePropsType = {}\r\n\r\nexport const Profile = React.memo(function (props: ProfilePropsType) {\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.loginReducer.isLoggedIn)\r\n    const user_id = useSelector<AppRootStateType, string>(state => state.appReducer.userData._id)\r\n    const {searchPacksValue, minCardsCount, maxCardsCount, sortPacksNameOrder, sortPacksCardsCountOrder, sortPacksUpdateOrder, sortPacksCreatedByOrder, sortPacksFilter, page, pageCount} = useSelector((state: AppRootStateType) => state.packsListReducer)\r\n    const {minCardsDoubleRangeValue, maxCardsDoubleRangeValue, cardPacksTotalCount} = useSelector((state: AppRootStateType) => state.packsListReducer)\r\n    const packs = useSelector<AppRootStateType, Array<PackResponseType>>((state) => state.packsListReducer.cardPacks)\r\n    const dispatch = useDispatch()\r\n\r\n    const [openModal, setOpenModal] = useState(false)\r\n    const pagesCount = Math.ceil(cardPacksTotalCount / pageCount)\r\n\r\n    useEffect(() => {\r\n        switch (sortPacksFilter) {\r\n            case \"name\":\r\n                dispatch(fetchPacksTC(searchPacksValue, minCardsDoubleRangeValue, maxCardsDoubleRangeValue, sortPacksNameOrder, sortPacksFilter, page, pageCount, user_id))\r\n                break\r\n            case \"cardsCount\":\r\n                dispatch(fetchPacksTC(searchPacksValue, minCardsDoubleRangeValue, maxCardsDoubleRangeValue, sortPacksCardsCountOrder, sortPacksFilter, page, pageCount, user_id))\r\n                break\r\n            case \"updated\":\r\n                dispatch(fetchPacksTC(searchPacksValue, minCardsDoubleRangeValue, maxCardsDoubleRangeValue, sortPacksUpdateOrder, sortPacksFilter, page, pageCount, user_id))\r\n                break\r\n            case \"user_name\":\r\n                dispatch(fetchPacksTC(searchPacksValue, minCardsDoubleRangeValue, maxCardsDoubleRangeValue, sortPacksCreatedByOrder, sortPacksFilter, page, pageCount, user_id))\r\n                break\r\n            default: {\r\n                const setTimer = setTimeout(() => {\r\n                    dispatch(fetchPacksTC(searchPacksValue, minCardsDoubleRangeValue, maxCardsDoubleRangeValue, sortPacksUpdateOrder, sortPacksFilter, page, pageCount, user_id))\r\n                }, 300)\r\n                return () => {\r\n                    clearTimeout(setTimer)\r\n                }\r\n            }\r\n        }\r\n\r\n    }, [dispatch, searchPacksValue, minCardsDoubleRangeValue, maxCardsDoubleRangeValue, sortPacksNameOrder, sortPacksCardsCountOrder, sortPacksUpdateOrder, sortPacksCreatedByOrder, sortPacksFilter, page, pageCount, user_id])\r\n\r\n    const setDoubleRangeValues = useCallback((minCardsDoubleRangeValue: number, maxCardsDoubleRangeValue: number) => {\r\n        dispatch(setDoubleRangesValuesAC(minCardsDoubleRangeValue, maxCardsDoubleRangeValue))\r\n    }, [dispatch])\r\n\r\n    const setSearchValue = useCallback((newSearchPacksValue: string) => {\r\n        dispatch(setSearchPacksValueAC(newSearchPacksValue))\r\n    }, [dispatch])\r\n\r\n    const setNewSortPacksNameOrder = useCallback((sortPacksOrder: SortPacksAndCardsOrderType, sortPacksFilter: string) => {\r\n        dispatch(setSortPacksNameOrderAC(sortPacksOrder, sortPacksFilter))\r\n    }, [dispatch])\r\n\r\n    const setNewSortPacksCardsCountOrder = useCallback((sortPacksOrder: SortPacksAndCardsOrderType, sortPacksFilter: string) => {\r\n        dispatch(setSortPacksCardsCountOrderAC(sortPacksOrder, sortPacksFilter))\r\n    }, [dispatch])\r\n\r\n    const setNewSortPacksUpdateOrder = useCallback((sortPacksOrder: SortPacksAndCardsOrderType, sortPacksFilter: string) => {\r\n        dispatch(setSortPacksUpdateOrderAC(sortPacksOrder, sortPacksFilter))\r\n    }, [dispatch])\r\n\r\n    const setNewSortPacksCreatedByOrder = useCallback((sortPacksOrder: SortPacksAndCardsOrderType, sortPacksFilter: string) => {\r\n        dispatch(setSortPacksCreatedByOrderAC(sortPacksOrder, sortPacksFilter))\r\n    }, [dispatch])\r\n\r\n    const addNewPack = useCallback((packName: string) => {\r\n        dispatch(addNewPackTC(packName, searchPacksValue, minCardsCount, maxCardsCount, sortPacksUpdateOrder, sortPacksFilter, page, pageCount, user_id))\r\n    }, [dispatch, searchPacksValue, minCardsCount, maxCardsCount, sortPacksUpdateOrder, sortPacksFilter, page, pageCount, user_id])\r\n\r\n    const updatePack = useCallback((newPackName: string, packId: string) => {\r\n        dispatch(updatePackTC(newPackName, packId, searchPacksValue, minCardsCount, maxCardsCount, sortPacksUpdateOrder, sortPacksFilter, page, pageCount, user_id))\r\n    }, [dispatch, searchPacksValue, minCardsCount, maxCardsCount, sortPacksUpdateOrder, sortPacksFilter, page, pageCount, user_id])\r\n\r\n    const deletePack = useCallback((packId: string) => {\r\n        dispatch(deletePackTC(packId, searchPacksValue, minCardsCount, maxCardsCount, sortPacksUpdateOrder, sortPacksFilter, page, pageCount, user_id))\r\n    }, [dispatch, searchPacksValue, minCardsCount, maxCardsCount, sortPacksUpdateOrder, sortPacksFilter, page, pageCount, user_id])\r\n\r\n    const setNewCurrentPage = useCallback((newCurrentPage: number) => {\r\n        dispatch(setNewCurrentPageAC(newCurrentPage))\r\n    }, [dispatch])\r\n\r\n    const setNewPageCount = useCallback((newPageCount: number) => {\r\n        dispatch(setNewPageCountAC(newPageCount))\r\n    }, [dispatch])\r\n\r\n    const onCancelHandler = () => {\r\n        setOpenModal(false)\r\n    }\r\n\r\n    const onAddNewPackHandler = (newValue: string) => {\r\n        addNewPack(newValue)\r\n        setOpenModal(false)\r\n    }\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={\"/login\"}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.packsList}>\r\n            <div className={s.container}>\r\n                <div className={s.inner}>\r\n                    <div className={s.aside}>\r\n                        <ProfileAvatar/>\r\n                        <div className={s.rangeWrap}>\r\n                            <DoubleRange\r\n                                minCardsCount={minCardsCount}\r\n                                maxCardsCount={maxCardsCount}\r\n                                setDoubleRangeValues={setDoubleRangeValues}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.content}>\r\n                        <MainTitle title={\"Packs list\"} textStyle={s.tableTitle}/>\r\n                        <div className={s.topWrap}>\r\n                            <SearchInput onKeyPressEnter={setSearchValue}/>\r\n                            <Button\r\n                                onClick={() => setOpenModal(true)}\r\n                                className={s.button}>\r\n                                Add new pack\r\n                            </Button>\r\n                        </div>\r\n                        <PacksListTableMUI\r\n                            user_id={user_id}\r\n                            packs={packs}\r\n                            setNewSortPacksNameOrder={setNewSortPacksNameOrder}\r\n                            setNewSortPacksCardsCountOrder={setNewSortPacksCardsCountOrder}\r\n                            setNewSortPacksUpdateOrder={setNewSortPacksUpdateOrder}\r\n                            setNewSortPacksCreatedByOrder={setNewSortPacksCreatedByOrder}\r\n                            updatePack={updatePack}\r\n                            deletePack={deletePack}\r\n                        />\r\n                        {openModal\r\n                        && <ModalAddPack\r\n                            onCancelHandler={onCancelHandler}\r\n                            onAddNewPackHandler={onAddNewPackHandler}\r\n                        />}\r\n                        <PaginationTable\r\n                            currentPage={page}\r\n                            pagesCount={pagesCount}\r\n                            itemsPerPageCount={pageCount}\r\n                            setNewCurrentPage={setNewCurrentPage}\r\n                            setNewPageCount={setNewPageCount}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React from \"react\"\r\nimport {useSelector} from \"react-redux\"\r\nimport {AppRootStateType} from \"../../../redux/store\"\r\nimport defaultAvatar from \"../../../assets/images/defaultUserAvatar.png\"\r\nimport s from \"./ProfileAvatarBtn.module.scss\"\r\n\r\ntype ProfileAvatarBtnPropsType = {}\r\n\r\nexport const ProfileAvatarBtn = React.memo((props: ProfileAvatarBtnPropsType) => {\r\n\r\n    const {avatar} = useSelector((state: AppRootStateType) => state.appReducer.userData)\r\n\r\n    return (\r\n        <div className={s.profileAvatar}>\r\n            {avatar\r\n                ? <div className={s.avatarWrap}>\r\n                    <img className={s.avatar} src={avatar} alt=\"avatar\"/>\r\n                    <button className={s.photoIcon}/>\r\n                </div>\r\n                :\r\n                <div className={s.avatarWrap}>\r\n                    <img className={s.avatar} src={defaultAvatar} alt=\"avatar\"/>\r\n                    <button className={s.photoIcon}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n})","import React from \"react\"\r\nimport {Redirect, useHistory} from \"react-router-dom\"\r\nimport {useFormik} from \"formik\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {AppRootStateType} from \"../../redux/store\"\r\nimport {updateUserDataTC} from \"../../redux/reducers/app-reducer\"\r\nimport {InputTextMUI} from \"../common/inputText/InputTextMUI\"\r\nimport {ProfileAvatarBtn} from \"../common/profileAvatarBtn/ProfileAvatarBtn\"\r\nimport {Button} from \"../common/button/Button\"\r\nimport s from \"./Personal.module.scss\"\r\n\r\ntype FormikErrorType = {\r\n    nickName?: string\r\n    email?: string\r\n}\r\n\r\ntype PersonalInfoPropsType = {}\r\n\r\nexport const PersonalInfo = React.memo((props: PersonalInfoPropsType) => {\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.loginReducer.isLoggedIn)\r\n    const dispatch = useDispatch()\r\n\r\n    const history = useHistory()\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            nickName: \"\",\r\n            email: \"\",\r\n            avatar: \"\"\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n            if (!values.nickName) {\r\n                errors.nickName = \"Required.\"\r\n            } else if (values.nickName.length < 1) {\r\n                errors.nickName = \"Nickname cannot be empty.\"\r\n            }\r\n            if (!values.email) {\r\n                errors.email = \"Required.\"\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = \"Invalid email address.\"\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: (values) => {\r\n            if (!formik.errors.nickName && !formik.errors.email) {\r\n                dispatch(updateUserDataTC(values.nickName, values.email, values.avatar))\r\n                formik.resetForm()\r\n                history.push(\"/profile\")\r\n            }\r\n        }\r\n    })\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={\"/login\"}/>\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit} className={s.personalInfo}>\r\n            <h2 className={s.caption}>Personal Information</h2>\r\n            <ProfileAvatarBtn/>\r\n            <div className={s.inputBox}>\r\n                <div className={s.inputWrap}>\r\n                    <InputTextMUI\r\n                        type={\"text\"}\r\n                        {...formik.getFieldProps(\"nickName\")}\r\n                        label={\"Nickname\"}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                    {formik.touched.nickName && formik.errors.nickName\r\n                        ? <div>{formik.errors.nickName}</div>\r\n                        : <div>&nbsp;</div>\r\n                    }\r\n                </div>\r\n                <div className={s.inputWrap}>\r\n                    <InputTextMUI\r\n                        type={\"text\"}\r\n                        {...formik.getFieldProps(\"email\")}\r\n                        label={\"Email\"}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                    {formik.touched.email && formik.errors.email\r\n                        ? <div>{formik.errors.email}</div>\r\n                        : <div>&nbsp;</div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className={s.btns}>\r\n                <Button\r\n                    onClick={() => history.push(\"/profile\")}\r\n                    className={s.button}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    type={\"submit\"}\r\n                    className={s.button}>\r\n                    Save\r\n                </Button>\r\n            </div>\r\n        </form>\r\n    )\r\n})","import {makeStyles} from \"@material-ui/core\"\r\n\r\nexport const useStyles = makeStyles({\r\n    root: {\r\n        '&:hover': {\r\n            backgroundColor: \"transparent\"\r\n        },\r\n        '& .MuiTypography-body1': {\r\n            fontFamily: \"SFUIDisplay, sans-serif\",\r\n            fontWeight: 400,\r\n            fontSize: \"14px\",\r\n            lineHeight: \"1.2\",\r\n            color: \"#2D2E46\"\r\n        },\r\n        '& .MuiIconButton-label': {\r\n            color: \"#2D2E46\"\r\n        }\r\n    }\r\n})","import React, {useState} from \"react\"\r\nimport {NavLink, Redirect} from \"react-router-dom\"\r\nimport {useFormik} from \"formik\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {AppRootStateType} from \"../../redux/store\"\r\nimport {loginTC} from \"../../redux/reducers/login-reducer\"\r\nimport {RequestStatusType} from \"../../redux/reducers/app-reducer\"\r\nimport {InputTextMUI} from \"../common/inputText/InputTextMUI\"\r\nimport {MainTitle} from \"../common/mainTitle/MainTitle\"\r\nimport {Button} from \"../common/button/Button\"\r\nimport {Checkbox, FormControlLabel, IconButton} from \"@material-ui/core\"\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\"\r\nimport {Visibility, VisibilityOff} from \"@material-ui/icons\"\r\nimport {useStyles} from \"./LoginStyles\"\r\nimport s from \"./Login.module.scss\"\r\n\r\ntype LoginPropsType = {}\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n\r\nexport const Login = React.memo(function (props: LoginPropsType) {\r\n\r\n    const classes = useStyles()\r\n\r\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.appReducer.status)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.loginReducer.isLoggedIn)\r\n    const dispatch = useDispatch()\r\n\r\n    const [showPassword, setShowPassword] = useState<boolean>(false)\r\n\r\n    const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event.preventDefault()\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: \"poiumazaya@gmail.com\",\r\n            password: \"newPiatnicaTest\",\r\n            rememberMe: false\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n            if (!values.email) {\r\n                errors.email = \"Required.\"\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = \"Invalid email address.\"\r\n            }\r\n            if (!values.password) {\r\n                errors.password = \"Required.\"\r\n            } else if (values.password.length < 6) {\r\n                errors.password = \"Password must be more than six characters.\"\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: (values) => {\r\n            dispatch(loginTC(values.email, values.password, values.rememberMe))\r\n            formik.resetForm()\r\n        }\r\n    })\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={\"/\"}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.login}>\r\n            <MainTitle title={\"It-Incubator\"}/>\r\n            <h2 className={s.caption}>Sign In</h2>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <div className={s.inputBox}>\r\n                    <div className={s.inputWrap}>\r\n                        <InputTextMUI\r\n                            type={\"email\"}\r\n                            {...formik.getFieldProps(\"email\")}\r\n                            label={\"Email\"}\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        {formik.touched.email && formik.errors.email\r\n                            ? <div>{formik.errors.email}</div>\r\n                            : <div>&nbsp;</div>\r\n                        }\r\n                    </div>\r\n                    <div className={s.inputWrap}>\r\n                        <InputTextMUI\r\n                            type={showPassword ? \"text\" : \"password\"}\r\n                            {...formik.getFieldProps(\"password\")}\r\n                            label={\"Password\"}\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={() => setShowPassword(!showPassword)}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                        >\r\n                                            {showPassword ? <Visibility/> : <VisibilityOff/>}\r\n                                        </IconButton>\r\n                                    </InputAdornment>)\r\n                            }}\r\n                        />\r\n                        {formik.touched.password && formik.errors.password\r\n                            ? <div>{formik.errors.password}</div>\r\n                            : <div>&nbsp;</div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className={s.infoWrap}>\r\n                    <FormControlLabel\r\n                        label=\"Remember Me\"\r\n                        control={\r\n                            <Checkbox\r\n                                {...formik.getFieldProps(\"rememberMe\")}\r\n                                name=\"rememberMe\"\r\n                                color=\"default\"\r\n                                size={\"small\"}\r\n                            />\r\n                        }\r\n                        className={classes.root}\r\n                    />\r\n                    <NavLink to={\"/restorePassword\"} className={s.forgotLink}>Forgot Password</NavLink>\r\n                </div>\r\n                <Button\r\n                    type={\"submit\"}\r\n                    disabled={status === \"loading\"}\r\n                    className={s.button}>\r\n                    Login\r\n                </Button>\r\n                <span className={s.account}>Don’t have an account?</span>\r\n                <NavLink to={\"/registration\"} className={s.singUp}>Sign Up</NavLink>\r\n            </form>\r\n        </div>\r\n    )\r\n})","import React, {useState} from \"react\"\r\nimport {NavLink, Redirect, useHistory} from \"react-router-dom\"\r\nimport {useFormik} from \"formik\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {AppRootStateType} from \"../../redux/store\"\r\nimport {signUpTC} from \"../../redux/reducers/registration-reducer\"\r\nimport {RequestStatusType} from \"../../redux/reducers/app-reducer\"\r\nimport {MainTitle} from \"../common/mainTitle/MainTitle\"\r\nimport {InputTextMUI} from \"../common/inputText/InputTextMUI\"\r\nimport {Button} from \"../common/button/Button\"\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\"\r\nimport {IconButton} from \"@material-ui/core\"\r\nimport {Visibility, VisibilityOff} from \"@material-ui/icons\"\r\nimport s from \"./Registration.module.scss\"\r\n\r\ntype LoginPropsType = {}\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    repeatPassword?: string\r\n}\r\n\r\nexport const Registration = React.memo((props: LoginPropsType) => {\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.loginReducer.isLoggedIn)\r\n    const isSignUp = useSelector<AppRootStateType, boolean>(state => state.registrationReducer.isSignUp)\r\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.appReducer.status)\r\n    const dispatch = useDispatch()\r\n\r\n    const history = useHistory()\r\n\r\n    const [showPassword, setShowPassword] = useState<boolean>(false)\r\n    const [showConfirmPassword, setShowConfirmPassword] = useState<boolean>(false)\r\n\r\n    const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event.preventDefault()\r\n    }\r\n\r\n    const RedirectToLoginHandler = () => {\r\n        history.push(\"/login\")\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: \"\",\r\n            password: \"\",\r\n            repeatPassword: \"\"\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n            if (!values.email) {\r\n                errors.email = \"Required.\"\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = \"Invalid email address.\"\r\n            }\r\n            if (!values.password) {\r\n                errors.password = \"Required.\"\r\n            } else if (values.password.length < 6) {\r\n                errors.password = \"Password must be more than six characters.\"\r\n            }\r\n            if (!values.repeatPassword) {\r\n                errors.repeatPassword = \"Required.\"\r\n            } else if (values.password !== values.repeatPassword) {\r\n                errors.repeatPassword = \"Passwords are not equal.\"\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: (values) => {\r\n            dispatch(signUpTC(values.email, values.password))\r\n            formik.resetForm()\r\n        }\r\n    })\r\n\r\n    if (isSignUp) {\r\n        return <Redirect to={\"/login\"}/>\r\n    }\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={\"/\"}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.registration}>\r\n            <MainTitle title={\"It-Incubator\"}/>\r\n            <h2 className={s.caption}>Sign Up</h2>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <div className={s.inputBox}>\r\n                    <div className={s.inputWrap}>\r\n                        <InputTextMUI\r\n                            type={\"email\"}\r\n                            {...formik.getFieldProps(\"email\")}\r\n                            label={\"Email\"}\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        {formik.touched.email && formik.errors.email\r\n                            ? <div>{formik.errors.email}</div>\r\n                            : <div>&nbsp;</div>\r\n                        }\r\n                    </div>\r\n                    <div className={s.inputWrap}>\r\n                        <InputTextMUI\r\n                            type={showPassword ? \"text\" : \"password\"}\r\n                            {...formik.getFieldProps(\"password\")}\r\n                            label={\"Password\"}\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={() => setShowPassword(!showPassword)}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                        >\r\n                                            {showPassword ? <Visibility/> : <VisibilityOff/>}\r\n                                        </IconButton>\r\n                                    </InputAdornment>)\r\n                            }}\r\n                        />\r\n                        {formik.touched.password && formik.errors.password\r\n                            ? <div>{formik.errors.password}</div>\r\n                            : <div>&nbsp;</div>\r\n                        }\r\n                    </div>\r\n                    <div className={s.inputWrap}>\r\n                        <InputTextMUI\r\n                            type={showConfirmPassword ? \"text\" : \"password\"}\r\n                            {...formik.getFieldProps(\"repeatPassword\")}\r\n                            label={\"Confirm password\"}\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                        >\r\n                                            {showConfirmPassword ? <Visibility/> : <VisibilityOff/>}\r\n                                        </IconButton>\r\n                                    </InputAdornment>)\r\n                            }}\r\n                        />\r\n                        {formik.touched.repeatPassword && formik.errors.repeatPassword\r\n                            ? <div>{formik.errors.repeatPassword}</div>\r\n                            : <div>&nbsp;</div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className={s.btns}>\r\n                    <Button\r\n                        onClick={RedirectToLoginHandler}\r\n                        className={s.button}>\r\n                        <NavLink to={\"/login\"}>Cancel</NavLink>\r\n                    </Button>\r\n                    <Button\r\n                        type={\"submit\"}\r\n                        disabled={status === \"loading\"}\r\n                        className={s.button}>\r\n                        Register\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n})","import React from \"react\"\r\nimport {NavLink, Redirect} from \"react-router-dom\"\r\nimport {useFormik} from \"formik\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {AppRootStateType} from \"../../redux/store\"\r\nimport {restorePasswordTC} from \"../../redux/reducers/restorePassword-reducer\"\r\nimport {RequestStatusType} from \"../../redux/reducers/app-reducer\"\r\nimport {MainTitle} from \"../common/mainTitle/MainTitle\"\r\nimport {Button} from \"../common/button/Button\"\r\nimport {InputTextMUI} from \"../common/inputText/InputTextMUI\"\r\nimport s from \"./RestorePassword.module.scss\"\r\n\r\ntype RestorePasswordPropsType = {}\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n}\r\n\r\nexport const RestorePassword = React.memo(function (props: RestorePasswordPropsType) {\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.loginReducer.isLoggedIn)\r\n    const errorMessage = useSelector<AppRootStateType, string | null>(message => message.restorePasswordReducer.errorMessage)\r\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.appReducer.status)\r\n    const dispatch = useDispatch()\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: \"\",\r\n        },\r\n        validate: (values) => {\r\n            const error: FormikErrorType = {}\r\n            if (!values.email) {\r\n                error.email = \"Required\"\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                error.email = \"Invalid email address\"\r\n            }\r\n            return error\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(restorePasswordTC(values.email))\r\n            formik.resetForm()\r\n        }\r\n    })\r\n\r\n    if (errorMessage?.slice(0, 8) === \"Recovery\") {\r\n        return <Redirect to={\"/checkEmail\"}/>\r\n    }\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={\"/\"}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.forgot}>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <MainTitle title={\"It-Incubator\"}/>\r\n                <h2 className={s.caption}>Forgot your password?</h2>\r\n                <div className={s.inputWrap}>\r\n                    <InputTextMUI\r\n                        type={\"email\"}\r\n                        {...formik.getFieldProps(\"email\")}\r\n                        label={\"Email\"}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                    {formik.touched.email && formik.errors.email\r\n                        ? <div>{formik.errors.email}</div>\r\n                        : <div>&nbsp;</div>\r\n                    }\r\n                </div>\r\n                <p className={s.text}>\r\n                    Enter your email address and we will send you further instructions\r\n                </p>\r\n                <Button\r\n                    type={\"submit\"}\r\n                    disabled={status === \"loading\"}\r\n                    className={s.button}>\r\n                    Send Instructions\r\n                </Button>\r\n                <p className={s.password}>Did you remember your password?</p>\r\n                <NavLink to={\"/login\"} className={s.try}>Try logging in</NavLink>\r\n            </form>\r\n        </div>\r\n    )\r\n})","import React, {useState} from \"react\"\r\nimport {Redirect, useParams} from \"react-router-dom\"\r\nimport {useFormik} from \"formik\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {AppRootStateType} from \"../../redux/store\"\r\nimport {updatePasswordTC} from \"../../redux/reducers/updatePassword-reducer\"\r\nimport {MainTitle} from \"../common/mainTitle/MainTitle\"\r\nimport {Button} from \"../common/button/Button\"\r\nimport {InputTextMUI} from \"../common/inputText/InputTextMUI\"\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\"\r\nimport {IconButton} from \"@material-ui/core\"\r\nimport {Visibility, VisibilityOff} from \"@material-ui/icons\"\r\nimport s from \"./UpdatePassword.module.scss\"\r\n\r\ntype UpdatePasswordPropsType = {}\r\n\r\nexport const UpdatePassword = React.memo(function (props: UpdatePasswordPropsType) {\r\n\r\n    const isSuccess = useSelector<AppRootStateType, boolean>(state => state.updatePasswordReducer.isSuccess)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.loginReducer.isLoggedIn)\r\n    const dispatch = useDispatch()\r\n\r\n    const [showPassword, setShowPassword] = useState<boolean>(false)\r\n    const {token} = useParams<{token: string}>()\r\n\r\n    const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event.preventDefault()\r\n    }\r\n\r\n    type FormikErrorType = {\r\n        newPassword?: string\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            newPassword: \"\",\r\n        },\r\n        validate: (values) => {\r\n            const error: FormikErrorType = {}\r\n            if (!values.newPassword) {\r\n                error.newPassword = \"Required.\"\r\n            } else if (values.newPassword.length < 8) {\r\n                error.newPassword = \"Must be at least 8 characters.\"\r\n            }\r\n            return error\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(updatePasswordTC(values.newPassword, token))\r\n            formik.resetForm()\r\n        }\r\n    })\r\n\r\n    if (isSuccess) {\r\n        return <Redirect to={\"/login\"}/>\r\n    }\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={\"/\"}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.create}>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <MainTitle title={\"It-Incubator\"}/>\r\n                <h2 className={s.caption}>Create new password</h2>\r\n                <div className={s.inputWrap}>\r\n                    <InputTextMUI\r\n                        type={showPassword ? \"text\" : \"password\"}\r\n                        {...formik.getFieldProps(\"newPassword\")}\r\n                        label={\"Password\"}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        aria-label=\"toggle password visibility\"\r\n                                        onClick={() => setShowPassword(!showPassword)}\r\n                                        onMouseDown={handleMouseDownPassword}\r\n                                    >\r\n                                        {showPassword ? <Visibility/> : <VisibilityOff/>}\r\n                                    </IconButton>\r\n                                </InputAdornment>)\r\n                        }}\r\n                    />\r\n                    {formik.touched.newPassword && formik.errors.newPassword\r\n                        ? <div>{formik.errors.newPassword}</div>\r\n                        : <div>&nbsp;</div>\r\n                    }\r\n                </div>\r\n                <p className={s.text}>Create new password and we will send you further instructions to email</p>\r\n                <Button\r\n                    type={\"submit\"}\r\n                    className={s.button}>\r\n                    Create new password\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    )\r\n})","export default __webpack_public_path__ + \"static/media/search.26dbc43d.svg\";","import React from \"react\"\r\nimport {NavLink} from \"react-router-dom\"\r\nimport search from \"../../assets/images/search.svg\"\r\nimport s from \"./PageNotFound.module.scss\"\r\n\r\nexport const PageNotFound = React.memo(() => {\r\n    return (\r\n        <div className={s.pageNotFoundBlock}>\r\n            <h1 className={s.number}> 404</h1>\r\n            <h2 className={s.error}>Page Not Found!</h2>\r\n            <div className={s.wrapIcon}>\r\n                <img className={s.search} src={search} alt=\"icon\"/>\r\n            </div>\r\n            <p className={s.text}>MOST LIKELY THE PAGE <br/>YOU ARE LOOKING FOR THERE</p>\r\n            <NavLink to=\"/\" className={s.linkHome}>Back to home</NavLink>\r\n        </div>\r\n    )\r\n})\r\n\r\n","export default __webpack_public_path__ + \"static/media/email.7b2dee87.svg\";","import React from \"react\"\r\nimport {Redirect} from \"react-router-dom\"\r\nimport {useSelector} from \"react-redux\"\r\nimport {AppRootStateType} from \"../../redux/store\"\r\nimport {MainTitle} from \"../common/mainTitle/MainTitle\"\r\nimport icon from \"../../assets/images/email.svg\"\r\nimport s from \"./CheckEmail.module.scss\"\r\n\r\nexport const CheckEmail = React.memo(() => {\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.loginReducer.isLoggedIn)\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={\"/\"}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.checkEmailBlock}>\r\n            <div className={s.checkEmail}>\r\n                <MainTitle title={\"It-Incubator\"}/>\r\n                <div className={s.iconBg}>\r\n                    <img src={icon} alt=\"icon\" className={s.icon}/>\r\n                </div>\r\n                <h2 className={s.caption}>Check Email</h2>\r\n                <p className={s.text}>We’ve sent an Email with instructions to example@mail.com</p>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React from \"react\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {AppRootStateType} from \"../../../redux/store\"\r\nimport {setAppErrorAC} from \"../../../redux/reducers/app-reducer\"\r\nimport Snackbar from \"@material-ui/core/Snackbar\"\r\nimport MuiAlert, {AlertProps} from \"@material-ui/lab/Alert\"\r\n\r\nconst Alert = React.memo((props: AlertProps) => {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props}/>\r\n})\r\n\r\nexport const ErrorSnackbar = React.memo(() => {\r\n\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.appReducer.error)\r\n    const dispatch = useDispatch()\r\n\r\n    const [open, setOpen] = React.useState(true)\r\n\r\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === \"clickaway\") {\r\n            return\r\n        }\r\n        setOpen(false)\r\n        dispatch(setAppErrorAC(null))\r\n    }\r\n\r\n    return (\r\n        <Snackbar open={error !== null} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"error\">\r\n                {error}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n})","import React, {useEffect} from \"react\"\r\nimport {Redirect, Route, Switch, useLocation} from \"react-router-dom\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {AppRootStateType} from \"./redux/store\"\r\nimport {initializeAppTC, RequestStatusType} from \"./redux/reducers/app-reducer\"\r\nimport {HeaderMenu} from \"./components/common/headerMenu/HeaderMenu\"\r\nimport {PacksList} from \"./components/packsList/PacksList\"\r\nimport {CardsList} from \"./components/cardsList/CardsList\"\r\nimport {LearnElement} from \"./components/learnElement/LearnElement\"\r\nimport {Profile} from \"./components/profile/Profile\"\r\nimport {PersonalInfo} from \"./components/personalInfo/PersonalInfo\"\r\nimport {Login} from \"./components/login/Login\"\r\nimport {Registration} from \"./components/registration/Registration\"\r\nimport {RestorePassword} from \"./components/restorePassword/RestorePassword\"\r\nimport {UpdatePassword} from \"./components/updatePassword/UpdatePassword\"\r\nimport {PageNotFound} from \"./components/pageNotFound/PageNotFound\"\r\nimport {CheckEmail} from \"./components/checkEmail/CheckEmail\"\r\nimport {ErrorSnackbar} from \"./components/common/ErrorSnackbar/ErrorSnackbar\"\r\nimport {CircularProgress} from \"@material-ui/core\"\r\nimport s from \"./App.module.scss\"\r\n\r\nfunction App() {\r\n\r\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.appReducer.status)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.loginReducer.isLoggedIn)\r\n    const dispatch = useDispatch()\r\n\r\n    const {pathname} = useLocation()\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeAppTC())\r\n    }, [dispatch])\r\n\r\n    if (status === \"loading\") {\r\n        return <div style={{position: \"fixed\", top: \"40%\", textAlign: \"center\", width: \"100%\"}}>\r\n            <CircularProgress\r\n                size={70}\r\n            />\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isLoggedIn && pathname !== \"/404\" && <HeaderMenu/>}\r\n            <section className={s.pagesContainer}>\r\n                <Switch>\r\n                    <Route exact path={\"/\"} render={() => <PacksList/>}/>\r\n                    <Route exact path={\"/cardslist/:packId\"} render={() => <CardsList/>}/>\r\n                    <Route exact path={\"/learnCard/:questionId\"} render={() => <LearnElement/>}/>\r\n                    <Route path={\"/profile\"} render={() => <Profile/>}/>\r\n                    <Route path={\"/editProfile\"} render={() => <PersonalInfo/>}/>\r\n                    <Route path={\"/login\"} render={() => <Login/>}/>\r\n                    <Route path={\"/registration\"} render={() => <Registration/>}/>\r\n                    <Route path={\"/restorePassword\"} render={() => <RestorePassword/>}/>\r\n                    <Route path={\"/updatePassword/:token\"} render={() => <UpdatePassword/>}/>\r\n                    <Route exact path={\"/checkEmail\"} render={() => <CheckEmail/>}/>\r\n                    <Route path={\"/404\"} render={() => <PageNotFound/>}/>\r\n                    <Redirect from={\"*\"} to={\"/404\"}/>\r\n                </Switch>\r\n            </section>\r\n            <ErrorSnackbar/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport {HashRouter} from \"react-router-dom\"\r\nimport {Provider} from \"react-redux\"\r\nimport {store} from \"./redux/store\"\r\nimport App from \"./App\"\r\nimport reportWebVitals from \"./reportWebVitals\"\r\nimport \"./index.css\"\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <HashRouter>\r\n            <App/>\r\n        </HashRouter>\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"action\":\"LearnAnswer_action__2BZNq\",\"text\":\"LearnAnswer_text__2Bg9T\",\"caption\":\"LearnAnswer_caption__2slgl\",\"learnAnswer\":\"LearnAnswer_learnAnswer__3GpS-\",\"button\":\"LearnAnswer_button__14UQ4\",\"block\":\"LearnAnswer_block__2MB9m\",\"radioWrap\":\"LearnAnswer_radioWrap__23Iuy\",\"radio\":\"LearnAnswer_radio__2Usw3\",\"radioLabel\":\"LearnAnswer_radioLabel__2LiOC\",\"radioInput\":\"LearnAnswer_radioInput__1RQQ7\",\"btns\":\"LearnAnswer_btns__38oyx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"TabsShowPacks_title__lsVSb\",\"tabsShowPacks\":\"TabsShowPacks_tabsShowPacks__DkQnr\",\"tabItemsContainer\":\"TabsShowPacks_tabItemsContainer__1UoOk\",\"tabItem\":\"TabsShowPacks_tabItem__1IRyz\",\"activeTabItem\":\"TabsShowPacks_activeTabItem__ObCJY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"accent\":\"ModalDelete_accent__vR9ZV\",\"text\":\"ModalDelete_text___283r\",\"caption\":\"ModalDelete_caption__wEZQ0\",\"button\":\"ModalDelete_button__3tow7\",\"modalDelete\":\"ModalDelete_modalDelete__35K_a\",\"btnCross\":\"ModalDelete_btnCross__9DEpg\",\"modalTop\":\"ModalDelete_modalTop__2FNKK\",\"inputWrap\":\"ModalDelete_inputWrap__WoAkS\",\"btns\":\"ModalDelete_btns__13m57\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"singUp\":\"Login_singUp__1gTIi\",\"account\":\"Login_account__npnoZ\",\"caption\":\"Login_caption__2Divh\",\"login\":\"Login_login__bES6e\",\"inputBox\":\"Login_inputBox__1dSO6\",\"inputWrap\":\"Login_inputWrap__1rEd-\",\"infoWrap\":\"Login_infoWrap__2vCx3\",\"forgotLink\":\"Login_forgotLink__3qzW_\",\"button\":\"Login_button__3jLBD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PacksList_container__3DvH8\",\"tableTitle\":\"PacksList_tableTitle__FlcEG\",\"packsList\":\"PacksList_packsList__WX6pB\",\"inner\":\"PacksList_inner__1D8Xm\",\"aside\":\"PacksList_aside__14q7t\",\"rangeWrap\":\"PacksList_rangeWrap__2UwxS\",\"content\":\"PacksList_content__3AFJB\",\"topWrap\":\"PacksList_topWrap__1RU7f\",\"button\":\"PacksList_button__MJ8Fn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CardsList_container__1fJYJ\",\"empty\":\"CardsList_empty__3XZyw\",\"tableTitle\":\"CardsList_tableTitle__33gTj\",\"cardsList\":\"CardsList_cardsList__1t6Tz\",\"inner\":\"CardsList_inner__1J4Fk\",\"topWrap\":\"CardsList_topWrap__2x6uX\",\"btn\":\"CardsList_btn__2552B\",\"searchWrap\":\"CardsList_searchWrap__SZ-Aw\",\"button\":\"CardsList_button__3fgLb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"career\":\"ProfileAvatar_career__1vP1U\",\"name\":\"ProfileAvatar_name__1nZOo\",\"profileAvatarButton\":\"ProfileAvatar_profileAvatarButton__3nwjI\",\"profileAvatar\":\"ProfileAvatar_profileAvatar__370Av\",\"avatarWrap\":\"ProfileAvatar_avatarWrap__1xdbw\",\"avatar\":\"ProfileAvatar_avatar__2OLix\",\"profileAvatarButtonContainer\":\"ProfileAvatar_profileAvatarButtonContainer__3JNmY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profile_container__J1D0b\",\"tableTitle\":\"Profile_tableTitle__35iGZ\",\"packsList\":\"Profile_packsList__3eDu4\",\"inner\":\"Profile_inner__2lMSD\",\"aside\":\"Profile_aside__2PIo-\",\"rangeWrap\":\"Profile_rangeWrap__2huPx\",\"content\":\"Profile_content__IwCJG\",\"topWrap\":\"Profile_topWrap__2a0st\",\"button\":\"Profile_button__26j8g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"caption\":\"Registration_caption__2Lyc8\",\"registration\":\"Registration_registration__2nFUr\",\"button\":\"Registration_button__2sGeJ\",\"inputBox\":\"Registration_inputBox__2HrIj\",\"inputWrap\":\"Registration_inputWrap__P1G5x\",\"btns\":\"Registration_btns__1Bw-I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"HeaderMenu_container__2Snrm\",\"logoutButton\":\"HeaderMenu_logoutButton__1nkTx\",\"headerMenu\":\"HeaderMenu_headerMenu__jWZv2\",\"inner\":\"HeaderMenu_inner__-ZG7K\",\"titleWrap\":\"HeaderMenu_titleWrap__3nipI\",\"tabsWrap\":\"HeaderMenu_tabsWrap__26mlI\",\"tabPack\":\"HeaderMenu_tabPack__3K_Au\",\"tabProfile\":\"HeaderMenu_tabProfile__1nzbJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"ModalEdit_text__DJJiZ\",\"caption\":\"ModalEdit_caption__iZvZN\",\"button\":\"ModalEdit_button__2329J\",\"modalAdd\":\"ModalEdit_modalAdd__eKziI\",\"btnCross\":\"ModalEdit_btnCross__2vcQl\",\"modalTop\":\"ModalEdit_modalTop__1lL-r\",\"inputWrap\":\"ModalEdit_inputWrap__3FFOn\",\"btns\":\"ModalEdit_btns__fWOfz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"ModalAdd_text__3MPP2\",\"caption\":\"ModalAdd_caption__22BC4\",\"button\":\"ModalAdd_button__2HeCO\",\"modalAdd\":\"ModalAdd_modalAdd__24p9f\",\"btnCross\":\"ModalAdd_btnCross__Xq7Qm\",\"modalTop\":\"ModalAdd_modalTop__3rM1x\",\"inputWrap\":\"ModalAdd_inputWrap__2-f3S\",\"btns\":\"ModalAdd_btns__3wKr8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"caption\":\"CardInfo_caption__3wSEn\",\"cardInfo\":\"CardInfo_cardInfo__3gWbb\",\"button\":\"CardInfo_button__1VPOI\",\"inputBox\":\"CardInfo_inputBox__kj2tZ\",\"inputWrap\":\"CardInfo_inputWrap__3UvdQ\",\"file\":\"CardInfo_file__3jpal\",\"label\":\"CardInfo_label__3YIgx\",\"btns\":\"CardInfo_btns__3srFL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"action\":\"LearnQuestion_action__2Xrbq\",\"text\":\"LearnQuestion_text__2GJtV\",\"caption\":\"LearnQuestion_caption__3nffE\",\"learnQuestion\":\"LearnQuestion_learnQuestion__1Ta7R\",\"button\":\"LearnQuestion_button__208ph\",\"block\":\"LearnQuestion_block__2RXgj\",\"btns\":\"LearnQuestion_btns__34m9w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"caption\":\"Personal_caption__2HryD\",\"personalInfo\":\"Personal_personalInfo__1iCbj\",\"button\":\"Personal_button__1czvR\",\"inputBox\":\"Personal_inputBox__2kf_2\",\"inputWrap\":\"Personal_inputWrap__1Qk39\",\"btns\":\"Personal_btns__2MJRB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileAvatar\":\"ProfileAvatarBtn_profileAvatar__jegnv\",\"avatarWrap\":\"ProfileAvatarBtn_avatarWrap__2-7sT\",\"avatar\":\"ProfileAvatarBtn_avatar__1srC_\",\"photoIcon\":\"ProfileAvatarBtn_photoIcon__uqrud\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"try\":\"RestorePassword_try__1-vfZ\",\"password\":\"RestorePassword_password__1lFr2\",\"caption\":\"RestorePassword_caption__Gt47Z\",\"forgot\":\"RestorePassword_forgot__1sKKx\",\"inputWrap\":\"RestorePassword_inputWrap__FFOiZ\",\"text\":\"RestorePassword_text__2Horn\",\"button\":\"RestorePassword_button__BN83S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"linkHome\":\"PageNotFound_linkHome__3_5gK\",\"error\":\"PageNotFound_error__1F_ar\",\"number\":\"PageNotFound_number__333m7\",\"pageNotFoundBlock\":\"PageNotFound_pageNotFoundBlock__vK32B\",\"wrapIcon\":\"PageNotFound_wrapIcon__2cnrw\",\"search\":\"PageNotFound_search__3_EZc\",\"text\":\"PageNotFound_text__1epGS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"caption\":\"CheckEmail_caption__V1VWM\",\"checkEmail\":\"CheckEmail_checkEmail__XtfRO\",\"checkEmailBlock\":\"CheckEmail_checkEmailBlock__2s3b6\",\"iconBg\":\"CheckEmail_iconBg__1xRem\",\"text\":\"CheckEmail_text__1HUV8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"caption\":\"UpdatePassword_caption__CeOal\",\"create\":\"UpdatePassword_create__3FKzA\",\"inputWrap\":\"UpdatePassword_inputWrap__17_VG\",\"text\":\"UpdatePassword_text__1jF0y\",\"button\":\"UpdatePassword_button__2qTwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"PaginationTable_pagination__JuZkV\",\"paginationMUI\":\"PaginationTable_paginationMUI__1wIHu\",\"show\":\"PaginationTable_show__f3sRl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Button_default__CQpYX\"};"],"sourceRoot":""}