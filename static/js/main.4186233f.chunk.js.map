{"version":3,"sources":["testComponents/TestComponents.module.scss","common/components/inputText/InputText.module.css","common/components/checkbox/Checkbox.module.css","common/components/button/Button.module.css","pages/pageNotFound/PageNotFound.module.scss","common/components/addItemForm/AddItemForm.module.scss","redux/reducer.ts","redux/store.ts","pages/profile/Profile.tsx","pages/login/Login.tsx","pages/registration/Registration.tsx","pages/restorePassword/RestorePassword.tsx","pages/updatePassword/UpdatePassword.tsx","pages/pageNotFound/PageNotFound.tsx","common/components/inputText/InputText.tsx","common/components/button/Button.tsx","common/components/addItemForm/AddItemForm.tsx","common/components/checkbox/Checkbox.tsx","testComponents/TestComponents.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","initialState","rootReducer","combineReducers","reducer","state","action","type","store","createStore","applyMiddleware","thunkMiddleware","window","Profile","React","memo","props","Login","Registration","RestorePassword","UpdatePassword","PageNotFound","className","style","pageNotFoundBlock","InputText","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","Button","red","finalClassName","default","AddItemForm","useState","title","setTitle","setError","addItemHandler","trim","addItem","addItemContainer","disabled","addItemInputStyle","onClick","addItemButtonStyle","Checkbox","onChangeChecked","children","checkbox","labelStyle","checked","TestComponents","text","setText","setChecked","showAlert","alert","inputStyle","buttonStyle","checkboxStyle","App","exact","path","render","from","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4186233f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputStyle\":\"TestComponents_inputStyle__2cyjR\",\"buttonStyle\":\"TestComponents_buttonStyle__2Kcmz\",\"checkboxStyle\":\"TestComponents_checkboxStyle___IEP-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"InputText_superInput__2-vJr\",\"errorInput\":\"InputText_errorInput__2U08G\",\"error\":\"InputText_error__2149M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelStyle\":\"Checkbox_labelStyle__zCtkI\",\"checkbox\":\"Checkbox_checkbox__1IRv-\",\"spanClassName\":\"Checkbox_spanClassName__oFf-T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Button_default__2O_fm\",\"red\":\"Button_red__10SH8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageNotFoundBlock\":\"PageNotFound_pageNotFoundBlock__2SNBm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addItemContainer\":\"AddItemForm_addItemContainer__1j-ly\"};","import {Dispatch} from \"redux\"\r\n\r\nconst initialState: InitialStateType = {}\r\n\r\ntype InitialStateType = {}\r\n\r\nexport const reducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"\":\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const templateAC = (body: any) => {\r\n    return {type: \"\", body: body} as const\r\n}\r\n\r\n// thunks\r\n/*export const initializeAppTC = () => (dispatch: Dispatch<ActionsType>) => {\r\n    someAPI.someMethod()\r\n        .then(res => {\r\n            // dispatch(setIsLoggedInAC(true, res.data.data.email))\r\n        })\r\n        .catch((error) => {\r\n            // handleServerNetworkError(error, dispatch)\r\n        })\r\n        .finally(() => {\r\n\r\n        })\r\n}*/\r\n\r\n// types\r\nexport type templateActionType = ReturnType<typeof templateAC>\r\ntype ActionsType = templateActionType\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\"\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {reducer} from \"./reducer\"\r\n\r\nconst rootReducer = combineReducers({\r\n    reducer: reducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store","import React from \"react\"\r\nimport style from \"./Profile.module.scss\"\r\n\r\ntype ProfilePropsType = {\r\n\r\n}\r\n\r\nexport const Profile = React.memo(function (props: ProfilePropsType) {\r\n\r\n    return (\r\n        <>\r\n            Profile page\r\n        </>\r\n    )\r\n})","import React from \"react\"\r\nimport style from \"./Login.module.scss\"\r\n\r\ntype LoginPropsType = {\r\n\r\n}\r\n\r\nexport const Login = React.memo(function (props: LoginPropsType) {\r\n\r\n    return (\r\n        <>\r\n            Login page\r\n        </>\r\n    )\r\n})","import React from \"react\"\r\nimport style from \"./Registration.module.scss\"\r\n\r\ntype RegistrationPropsType = {\r\n\r\n}\r\n\r\nexport const Registration = React.memo(function (props: RegistrationPropsType) {\r\n\r\n    return (\r\n        <>\r\n            Registration page\r\n        </>\r\n    )\r\n})","import React from \"react\"\r\nimport style from \"./RestorePassword.module.scss\"\r\n\r\ntype RestorePasswordPropsType = {\r\n\r\n}\r\n\r\nexport const RestorePassword = React.memo(function (props: RestorePasswordPropsType) {\r\n\r\n    return (\r\n        <>\r\n            RestorePassword page\r\n        </>\r\n    )\r\n})","import React from \"react\"\r\nimport style from \"./UpdatePassword.module.scss\"\r\n\r\ntype UpdatePasswordPropsType = {\r\n\r\n}\r\n\r\nexport const UpdatePassword = React.memo(function (props: UpdatePasswordPropsType) {\r\n\r\n    return (\r\n        <>\r\n            UpdatePassword page\r\n        </>\r\n    )\r\n})","import React from \"react\"\r\nimport style from \"./PageNotFound.module.scss\"\r\n\r\nexport const PageNotFound = React.memo(() => {\r\n    return (\r\n        <div className={style.pageNotFoundBlock}>\r\n            <p>Something wrong...</p>\r\n            <p>404: PAGE NOT FOUND!</p>\r\n        </div>\r\n    )\r\n})","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\"\r\nimport style from \"./InputText.module.css\"\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperInputTextPropsType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nexport const InputText: React.FC<SuperInputTextPropsType> = ({\r\n    type,\r\n    onChange, onChangeText,\r\n    onKeyPress, onEnter,\r\n    error,\r\n    className, spanClassName,\r\n    ...restProps\r\n}) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e)\r\n        e.key === \"Enter\"\r\n        && onEnter\r\n        && onEnter()\r\n    }\r\n\r\n    const finalSpanClassName = `${style.error} ${spanClassName ? spanClassName : \"\"}`\r\n    const finalInputClassName = `${error ? style.errorInput : style.superInput}`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={`${finalInputClassName} ${className}`}\r\n                {...restProps}\r\n            />\r\n            {error ? <span className={finalSpanClassName}>{error}</span> : null}\r\n        </>\r\n    )\r\n}","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\"\r\nimport style from \"./Button.module.css\"\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype ButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nexport const Button: React.FC<ButtonPropsType> = React.memo(({\r\n    red, className,\r\n    ...restProps\r\n}) => {\r\n\r\n    const finalClassName = `${red ? style.red : style.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps}\r\n        />\r\n    )\r\n})","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\"\r\nimport {InputText} from \"../inputText/InputText\"\r\nimport {Button} from \"../button/Button\"\r\nimport style from \"./AddItemForm.module.scss\"\r\n\r\ntype AddItemFormPropsType = {\r\n    addItem: (title: string) => void\r\n    disabled?: boolean\r\n    addItemInputStyle?: string\r\n    addItemButtonStyle?: string\r\n}\r\n\r\nexport const AddItemForm = React.memo(function (props: AddItemFormPropsType) {\r\n\r\n    let [title, setTitle] = useState<string>(\"\")\r\n    let [error, setError] = useState<string | null>(null)\r\n\r\n    const addItemHandler = () => {\r\n        if (title.trim() !== \"\") {\r\n            props.addItem(title)\r\n            setTitle(\"\")\r\n        } else {\r\n            setError(\"Title is required\")\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (error !== null) {\r\n            setError(\"\")\r\n        }\r\n        if (e.key === \"Enter\") {\r\n            addItemHandler()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.addItemContainer}>\r\n            <InputText\r\n                value={title}\r\n                onChange={onChangeHandler}\r\n                onKeyPress={onKeyPressHandler}\r\n                disabled={props.disabled}\r\n                className={props.addItemInputStyle}\r\n            />\r\n            {error\r\n                ? <span>{error}</span>\r\n                : null\r\n            }\r\n            <Button\r\n                onClick={addItemHandler}\r\n                disabled={props.disabled}\r\n                className={props.addItemButtonStyle}>Click\r\n            </Button>\r\n        </div>\r\n    )\r\n})\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\"\r\nimport style from \"./Checkbox.module.css\"\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nexport const Checkbox: React.FC<SuperCheckboxPropsType> = React.memo(({\r\n        type,\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n}) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange\r\n        && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${style.checkbox} ${className ? className : \"\"}`\r\n\r\n    return (\r\n        <label className={style.labelStyle}>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                {...restProps}\r\n            />\r\n            {children && <span className={style.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n})","import React, {useState} from \"react\"\r\nimport {AddItemForm} from \"../common/components/addItemForm/AddItemForm\"\r\nimport {InputText} from \"../common/components/inputText/InputText\"\r\nimport {Button} from \"../common/components/button/Button\"\r\nimport {Checkbox} from \"../common/components/checkbox/Checkbox\"\r\nimport style from \"./TestComponents.module.scss\"\r\n\r\ntype TestComponentsPropsType = {}\r\n\r\nexport const TestComponents = React.memo(function (props: TestComponentsPropsType) {\r\n\r\n    const [text, setText] = useState<string>(\"\")\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n\r\n    const showAlertAddedItem = (text: string) => {\r\n        alert(text)\r\n    }\r\n\r\n    const showAlert = () => {\r\n        alert(text)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AddItemForm\r\n                addItem={showAlertAddedItem}\r\n                addItemInputStyle={style.inputStyle}\r\n                addItemButtonStyle={style.buttonStyle}\r\n            />\r\n            <InputText\r\n                value={text}\r\n                onChangeText={setText}\r\n                onEnter={showAlert}\r\n                className={style.inputStyle}\r\n            />\r\n            <Button\r\n                onClick={showAlert}\r\n                className={style.buttonStyle}>Click\r\n            </Button>\r\n            <Checkbox\r\n                checked={checked}\r\n                onChangeChecked={setChecked}\r\n                className={style.checkboxStyle}\r\n            />\r\n        </>\r\n    )\r\n})","import React from \"react\"\nimport {Redirect, Route, Switch} from \"react-router-dom\"\nimport {Profile} from \"./pages/profile/Profile\"\nimport {Login} from \"./pages/login/Login\"\nimport {Registration} from \"./pages/registration/Registration\"\nimport {RestorePassword} from \"./pages/restorePassword/RestorePassword\"\nimport {UpdatePassword} from \"./pages/updatePassword/UpdatePassword\"\nimport {PageNotFound} from \"./pages/pageNotFound/PageNotFound\"\nimport {TestComponents} from \"./testComponents/TestComponents\"\nimport \"./App.css\"\n\nfunction App() {\n\n    return (\n        <section>\n            <Switch>\n                <Route exact path={\"/\"} render={() => <Profile/>}/>\n                <Route path={\"/login\"} render={() => <Login/>}/>\n                <Route path={\"/registration\"} render={() => <Registration/>}/>\n                <Route path={\"/restorePassword\"} render={() => <RestorePassword/>}/>\n                <Route path={\"/updatePassword\"} render={() => <UpdatePassword/>}/>\n                <Route path={\"/404\"} render={() => <PageNotFound/>}/>\n                <Route exact path={\"/test\"} render={() => <TestComponents/>}/>\n                <Redirect from={\"*\"} to={\"/404\"}/>\n            </Switch>\n        </section>\n    )\n}\n\nexport default App","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport {BrowserRouter} from \"react-router-dom\"\nimport {Provider} from \"react-redux\"\nimport {store} from \"./redux/store\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport \"./index.css\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <BrowserRouter>\n                <App/>\n            </BrowserRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}