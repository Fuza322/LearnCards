{"version":3,"sources":["components/common/buttonSmall/ButtonSmall.module.scss","components/common/mainTitle/MainTitle.module.scss","components/common/searchInput/SearchInput.module.scss","components/common/itemsFilterSpan/ItemsFilterSpan.module.scss","components/packsList/packsTableMUI/PacksListTableMUI.module.scss","components/cardsList/cardsTableMUI/CardsListTableMUI.module.scss","components/learnElement/LearnElement.module.scss","App.module.scss","redux/reducers/login-reducer.ts","api/api.ts","redux/reducers/app-reducer.ts","redux/reducers/packsList-reducer.ts","redux/reducers/cardsList-reducer.ts","redux/reducers/registration-reducer.ts","redux/reducers/restorePassword-reducer.ts","redux/reducers/updatePassword-reducer.ts","redux/reducers/learnPack-reducer.ts","redux/store.ts","components/common/mainTitle/MainTitle.tsx","components/common/button/Button.tsx","components/common/headerMenu/HeaderMenu.tsx","components/packsList/tabsShowPacks/TabsStylesShowPacks.ts","components/packsList/tabsShowPacks/TabsShowPacks.tsx","components/common/searchInput/SearchInputStyles.ts","components/common/searchInput/SearchInput.tsx","components/common/doubleRange/DoubleRangeStyles.ts","components/common/doubleRange/DoubleRange.tsx","components/common/itemsFilterSpan/ItemsFilterSpan.tsx","components/common/buttonSmall/ButtonSmall.tsx","components/common/modalWindow/modalDelete/ModalDelete.tsx","components/common/modalWindow/modalDelete/ModalWindowDelete.tsx","components/common/inputText/InputTextMUIStyles.ts","components/common/inputText/InputTextMUI.tsx","components/common/modalWindow/modalEdit/ModalEdit.tsx","components/common/modalWindow/modalEdit/ModalWindowEditPack.tsx","components/packsList/packsTableMUI/PacksListTableMUIStyles.ts","components/packsList/packsTableMUI/PacksListTableMUI.tsx","components/common/paginationTable/PaginationTableStyles.ts","components/common/paginationTable/PaginationTable.tsx","components/common/modalWindow/modalAdd/ModalAdd.tsx","components/common/modalWindow/modalAdd/ModalWindowAdd.tsx","components/packsList/PacksList.tsx","components/common/rating/RatingMUI.ts","components/common/rating/Rating.tsx","components/common/modalWindow/modalCardInfo/CardInfo.tsx","components/common/modalWindow/modalCardInfo/ModalWindowCardInfo.tsx","components/cardsList/cardsTableMUI/CardsListTableMUIStyles.ts","components/cardsList/cardsTableMUI/CardsListTableMUI.tsx","components/cardsList/CardsList.tsx","components/learnElement/learnQuestion/LearnQuestion.tsx","components/learnElement/learnAnswer/LearnAnswer.tsx","components/learnElement/LearnElement.tsx","assets/images/defaultUserAvatar.png","components/common/profileAvatar/ProfileAvatar.tsx","components/profile/Profile.tsx","components/common/profileAvatarBtn/ProfileAvatarBtn.tsx","components/personalInfo/PersonalInfo.tsx","components/login/LoginStyles.ts","components/login/Login.tsx","components/registration/Registration.tsx","components/restorePassword/RestorePassword.tsx","components/updatePassword/UpdatePassword.tsx","assets/images/search.svg","components/pageNotFound/PageNotFound.tsx","assets/images/email.svg","components/checkEmail/CheckEmail.tsx","components/common/ErrorSnackbar/ErrorSnackbar.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/learnElement/learnAnswer/LearnAnswer.module.scss","components/common/headerMenu/HeaderMenu.module.scss","components/packsList/tabsShowPacks/TabsShowPacks.module.scss","components/common/modalWindow/modalDelete/ModalDelete.module.scss","components/packsList/PacksList.module.scss","components/login/Login.module.scss","components/cardsList/CardsList.module.scss","components/common/profileAvatar/ProfileAvatar.module.scss","components/profile/Profile.module.scss","components/registration/Registration.module.scss","components/common/modalWindow/modalEdit/ModalEdit.module.scss","components/common/modalWindow/modalAdd/ModalAdd.module.scss","components/common/modalWindow/modalCardInfo/CardInfo.module.scss","components/learnElement/learnQuestion/LearnQuestion.module.scss","components/personalInfo/Personal.module.scss","components/common/modalWindow/ModalWindow.module.scss","components/common/profileAvatarBtn/ProfileAvatarBtn.module.scss","components/restorePassword/RestorePassword.module.scss","components/pageNotFound/PageNotFound.module.scss","components/checkEmail/CheckEmail.module.scss","components/updatePassword/UpdatePassword.module.scss","components/common/paginationTable/PaginationTable.module.scss","components/common/button/Button.module.scss","components/common/doubleRange/DoubleRange.module.scss"],"names":["module","exports","LOGIN_ACTIONS_TYPES","instance","axios","create","baseURL","withCredentials","authAPI","email","password","rememberMe","post","delete","from","message","newPassword","resetPasswordToken","name","avatar","put","packsListAPI","packName","min","max","sortPacksOrder","sortPacksFilter","page","pageCount","user_id","get","cardsPack","packId","_id","cardsAPI","question","sortCardsOrder","sortCardsFilter","answer","card","cardsPack_id","cardId","learnPackAPI","card_id","grade","APP_ACTIONS_TYPES","initialState","isLoggedIn","setIsLoggedInAC","type","SET_IS_LOGGED_IN","PACKS_LIST_ACTIONS_TYPES","status","error","headerMenuStatus","userData","publicCardPacksCount","created","updated","isAdmin","verified","setAppStatusAC","SET_APP_STATUS","setAppErrorAC","SET_ERROR","setHeaderMenuStatusAC","SET_HEADER_MENU_STATUS","updateUserDataAC","UPDATE_USER_DATA","initializeAppTC","dispatch","a","res","data","SET_USER_DATA","console","log","response","CARDS_LIST_ACTIONS_TYPES","cardPacks","cardPacksTotalCount","minCardsCount","maxCardsCount","token","tokenDeathTime","isShowMyPacks","minCardsDoubleRangeValue","maxCardsDoubleRangeValue","searchPacksValue","sortPacksNameOrder","sortPacksCardsCountOrder","sortPacksUpdateOrder","sortPacksCreatedByOrder","changeShowAllOrMyPacksAC","userId","CHANGE_TABS_SHOW_PACKS_STATUS","setDoubleRangesValuesAC","SET_DOUBLE_RANGE_VALUES","setSearchPacksValueAC","SET_NEW_SEARCH_PACKS_VALUE","setSortPacksNameOrderAC","SET_SORT_NAME_PACKS","setSortPacksCardsCountOrderAC","SET_SORT_CARDS_COUNT_PACKS","setSortPacksUpdateOrderAC","SET_SORT_UPDATE_PACKS","setSortPacksCreatedByOrderAC","SET_SORT_CREATED_BY_PACKS","setNewCurrentPageAC","SET_NEW_CURRENT_PAGE","setNewPageCountAC","SET_NEW_PAGE_COUNT","fetchPacksTC","packsState","SET_PACKS_LIST_STATE","addNewPackTC","updatePackTC","newPackName","deletePackTC","REGISTRATION_ACTIONS_TYPES","cards","cardsTotalCount","maxGrade","minGrade","packUserId","searchCardsValue","sortCardsQuestionOrder","sortCardsAnswerOrder","sortCardsUpdateOrder","sortCardsGradeOrder","getCardsTC","cardsState","SET_CARDS","SET_CARD_TOTAL_COUNT","RESTORE_PASSWORD_ACTIONS_TYPES","isSignUp","UPDATE_PASSWORD_ACTIONS_TYPES","errorMessage","LEARN_PACK_ACTIONS_TYPES","isSuccess","rootReducer","combineReducers","appReducer","state","action","packsListReducer","cardsListReducer","SET_CARDS_NEW_CURRENT_PAGE","newCurrentPage","SET_CARDS_NEW_PAGE_COUNT","newPageCount","SET_SEARCH_CARDS_VALUE","SET_SORT_QUESTION_CARDS","SET_SORT_ANSWER_CARDS","SET_SORT_UPDATE_CARDS","SET_SORT_GRADE_CARDS","learnPackReducer","TEMPLATE_ACTION_TYPE","loginReducer","registrationReducer","SET_IS_SIGN_UP","value","restorePasswordReducer","SET_ERROR_MESSAGE","updatePasswordReducer","IS_SUCCESS","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","window","MainTitle","React","memo","props","className","s","mainTitle","textStyle","title","Button","restProps","finalClassName","default","HeaderMenu","useSelector","useDispatch","history","useHistory","packsListClassName","tabPack","activeHeaderMenuItem","profileClassName","tabProfile","onChangeHeaderMenuStatus","useCallback","push","onLogoutClickHandler","headerMenu","container","inner","titleWrap","tabsWrap","onClick","disabled","logoutButton","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","color","width","minHeight","height","minWidth","textTransform","fontFamily","fontWeight","fontSize","lineHeight","letterSpacing","TabsShowPacks","classes","onAllButtonClickHandler","changeShowMyPacks","onMyButtonClickHandler","tabsShowPacks","showPacksStatus","tabItemsContainer","tabItem","activeTabItem","createStyles","grow","borderRadius","border","search","position","shape","alpha","palette","common","white","marginRight","spacing","marginLeft","searchIcon","padding","pointerEvents","display","alignItems","justifyContent","opacity","inputInput","paddingLeft","transition","transitions","input","inputRoot","SearchInput","useState","searchValue","setSearchValue","onChangeHandler","e","currentTarget","onKeyPressEnter","trim","InputBase","onChange","placeholder","inputProps","transform","top","DoubleRange","setValue","onDoubleRangeHandleChange","event","newValue","setDoubleRangeValues","numberCards","Slider","valueLabelDisplay","aria-labelledby","ItemsFilterSpan","onStatusClickHandler","setSetStatusValue","spanTitle","ButtonSmall","buttonSmallDisabled","text","buttonSmall","style","ModalDelete","modalDelete","modalTop","caption","onCloseModalButtonClick","btnCross","inputWrap","accent","btns","button","onDeleteButtonClick","ModalWindowDelete","modalWindow","InputTextMUI","FormControl","fullWidth","TextField","ModalEdit","setTitle","onSaveClickHandler","onEditNewPackButtonClick","modalAdd","label","autoComplete","ModalWindowEditPack","editNewPack","closeModal","StyledTableCell","withStyles","head","textAlign","cursor","body","TableCell","StyledTableRow","boxShadow","TableRow","PacksListTableMUI","openDeleteModal","setOpenDeleteModal","openEditModal","setOpenEditModal","id","setId","setPackName","onEditNewPackHandler","updatePack","onDeletePackHandler","deletePack","onRemoveClickHandler","onUpdatePackHandler","onCancelClickHandler","TableContainer","component","Paper","Table","aria-label","TableHead","setNewSortPacksNameOrder","align","setNewSortPacksCardsCountOrder","setNewSortPacksUpdateOrder","setNewSortPacksCreatedByOrder","TableBody","packs","map","pack","scope","to","cardsCount","slice","user_name","buttonsContainer","marginTop","margin","PaginationTable","onCurrentPageChangeHandler","setNewCurrentPage","onPageCountChangeHandler","setNewPageCount","Number","pagination","paginationMUI","Typography","currentPage","Pagination","count","pagesCount","size","siblingCount","hidePrevButton","hideNextButton","show","defaultValue","itemsPerPageCount","ModalAdd","addSaveHandler","onAddNewPackHandler","ModalWindowAdd","addNewPack","PacksList","openModal","setOpenModal","Math","ceil","useEffect","setTimer","setTimeout","clearTimeout","changeShowAllOrMyPacks","newSearchPacksValue","onAddNewPack","onCloseModalHandler","packsList","aside","rangeWrap","content","tableTitle","topWrap","length","empty","RatingMUI","Rating","readOnly","CardInfo","setQuestion","setAnswer","onChangeHandlerQuestion","onChangeHandlerAnswer","onAddNewHandler","cardInfo","inputBox","ModalWindowCardInfo","editCard","CardsListTableMUI","onRemoveHanlder","updateCard","onCancelHandler","setNewSortQuestionOrder","setNewSortAnswerOrder","setNewSortUpdateOrder","setNewSortGradeOrder","tableState","deleteCard","CardsList","openNewCardModal","setOpenNewCardModal","useParams","setCardsSearchValue","newSearchCardsValue","setSearchCardsValueAC","setSortQuestionCardsAC","setSortAnswerCardsAC","setSortUpdateCardsAC","setSortGradeCardsAC","addNewCard","cardQuestion","cardAnswer","getState","addCardTC","newCardQuestion","newCardAnswer","updateCardTC","deleteCardTC","setCardsNewCurrentPage","setCardsNewCurrentPageAC","setCardsNewPageCount","setCardsNewCardsPageCountAC","onOpenModalHandler","cardsList","btn","searchWrap","LearnQuestion","learnQuestion","block","setShowAnswer","LearnAnswer","mappedOptions","grades","option","index","radioLabel","checked","radioInput","learnAnswer","radioWrap","onNextCard","getRandomCard","sum","reduce","acc","rand","random","i","newSum","LearnElement","firstCard","setFirstCard","showAnswer","setCard","questionId","gradeCardTC","learnWrap","ProfileAvatar","profileAvatar","avatarWrap","src","alt","defaultAvatar","career","profileAvatarButtonContainer","profileAvatarButton","Profile","onAddNewClickPackHandler","ProfileAvatarBtn","photoIcon","PersonalInfo","formik","useFormik","initialValues","nickName","validate","values","errors","test","onSubmit","userName","userAvatar","updatedUser","resetForm","handleSubmit","personalInfo","getFieldProps","touched","Login","showPassword","setShowPassword","handleMouseDownPassword","preventDefault","login","InputProps","endAdornment","InputAdornment","IconButton","onMouseDown","Visibility","VisibilityOff","infoWrap","FormControlLabel","control","Checkbox","forgotLink","account","singUp","Registration","showConfirmPassword","setShowConfirmPassword","onMouseDownPasswordHandler","redirectToLoginClickHandler","repeatPassword","registration","RestorePassword","forgot","try","UpdatePassword","updatePasswordTC","PageNotFound","pageNotFoundBlock","number","wrapIcon","linkHome","CheckEmail","checkEmailBlock","checkEmail","iconBg","icon","Alert","elevation","variant","ErrorSnackbar","setOpen","onClickCloseHandler","reason","Snackbar","open","autoHideDuration","onClose","severity","App","pathname","useLocation","CircularProgress","pagesContainer","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a07ce4d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonSmall\":\"ButtonSmall_buttonSmall__2yhn3\",\"buttonSmallDisabled\":\"ButtonSmall_buttonSmallDisabled__15nuU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainTitle\":\"MainTitle_mainTitle__r4vJ_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SearchInput_input__2--8g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spanTitle\":\"ItemsFilterSpan_spanTitle__e9GV4\",\"buttonBlock\":\"ItemsFilterSpan_buttonBlock__h_u3V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsContainer\":\"PacksListTableMUI_buttonsContainer__1t3nL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsContainer\":\"CardsListTableMUI_buttonsContainer__1AfIn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"learnWrap\":\"LearnElement_learnWrap__3Zou4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagesContainer\":\"App_pagesContainer__kLoKm\"};","import {ThunkAction} from \"redux-thunk\"\r\nimport {authAPI} from \"../../api/api\"\r\nimport {AppActionsType, AppRootStateType} from \"../store\"\r\nimport {initializeAppTC, setAppErrorAC, setAppStatusAC, setHeaderMenuStatusAC} from \"./app-reducer\"\r\n\r\nenum LOGIN_ACTIONS_TYPES {\r\n    SET_IS_LOGGED_IN = \"SET_IS_LOGGED_IN\",\r\n}\r\n\r\ntype InitialStateType = {\r\n    isLoggedIn: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    isLoggedIn: false\r\n}\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case LOGIN_ACTIONS_TYPES.SET_IS_LOGGED_IN:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: action.isLoggedIn\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setIsLoggedInAC = (isLoggedIn: boolean) => {\r\n    return {type: LOGIN_ACTIONS_TYPES.SET_IS_LOGGED_IN, isLoggedIn} as const\r\n}\r\n\r\n// thunks\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean): ThunkAction<void, AppRootStateType, unknown, AppActionsType> =>\r\n    async (dispatch) => {\r\n        try {\r\n            dispatch(setAppStatusAC(\"loading\"))\r\n            const res = await authAPI.login(email, password, rememberMe)\r\n            dispatch(setHeaderMenuStatusAC(\"packsList\"))\r\n            dispatch(initializeAppTC())\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (`Login failed: ${e.message}.`)\r\n            console.log(error)\r\n            dispatch(setAppErrorAC(error))\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n        } finally {\r\n            // ...some code\r\n        }\r\n    }\r\n\r\nexport const logoutTC = (): ThunkAction<void, AppRootStateType, unknown, AppActionsType> =>\r\n    async (dispatch) => {\r\n        try {\r\n            dispatch(setAppStatusAC(\"loading\"))\r\n            const res = await authAPI.logout()\r\n            dispatch(setIsLoggedInAC(false))\r\n            dispatch(setHeaderMenuStatusAC(\"packsList\"))\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (`Logout failed: ${e.message}.`)\r\n            console.log(error)\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n        } finally {\r\n            // ...some code\r\n        }\r\n    }\r\n\r\n// types\r\nexport type LoginReducerActionsType = ReturnType<typeof setIsLoggedInAC>\r\n","import axios from \"axios\"\r\nimport {SortPacksAndCardsOrderType} from \"../redux/reducers/packsList-reducer\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\",\r\n    // baseURL: \"http://localhost:7542/2.0/\",\r\n    withCredentials: true\r\n})\r\n\r\n// api\r\nexport const authAPI = {\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post<LoginUserResponseType>(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete<LogoutResponseType>(`auth/me`, {})\r\n    },\r\n    restorePassword(email: string) {\r\n        return instance.post<RestorePasswordResponseType>(`auth/forgot`, {\r\n            email: email,\r\n            from: `test-front-admin <ai73a@yandex.by>`,\r\n            message: `<div style=\"background-color: lime; padding: 15px\">\r\n                            Click <a href='http://localhost:3000/it-incubator-friday-project#/updatePassword/$token$'>here</a> to restore your password\r\n                      </div>`\r\n        })\r\n    },\r\n    signUp(email: string, password: string) {\r\n        return instance.post<SignUpResponseType>(`auth/register`, {email, password})\r\n    },\r\n    setNewPassword(newPassword: string, resetPasswordToken: string) {\r\n        return instance.post(`/auth/set-new-password`, {\r\n            password: newPassword,\r\n            resetPasswordToken\r\n        })\r\n    },\r\n    me() {\r\n        return instance.post<UserDataType>(`auth/me`, {})\r\n    },\r\n    updateUserData(name: string, avatar: string | undefined | null) {\r\n        return instance.put<UpdateUserDataResponseType>(`auth/me`, {name, avatar})\r\n    }\r\n}\r\n\r\nexport const packsListAPI = {\r\n    getPacks(packName: string, min: number, max: number, sortPacksOrder: SortPacksAndCardsOrderType, sortPacksFilter: string, page: number, pageCount: number, user_id: string) {\r\n        return instance.get<GetPacksResponseType>(`/cards/pack?packName=${packName}&min=${min}&max=${max}&sortPacks=${sortPacksOrder}${sortPacksFilter}&page=${page}&pageCount=${pageCount}&user_id=${user_id}`)\r\n    },\r\n    addPack(packName: string) {\r\n        return instance.post<AddPackResponseType>(`cards/pack`, {cardsPack: {name: packName}})\r\n    },\r\n    updatePack(packName: string, packId: string) {\r\n        return instance.put<UpdatePackResponseType>(`cards/pack`, {cardsPack: {_id: packId, name: packName}})\r\n    },\r\n    deletePack(packId: string) {\r\n        return instance.delete<DeletePackResponseType>(`cards/pack?id=${packId}`)\r\n    }\r\n}\r\n\r\nexport const cardsAPI = {\r\n    getCards(packId: string, page?: number, pageCount?: number, question?: string, sortCardsOrder?: SortPacksAndCardsOrderType, sortCardsFilter?: string, answer?: string, min?: number, max?: number) {\r\n        return instance.get<GetCardsResponseType>(`/cards/card?cardQuestion=${question ? question : \"\"}&cardsPack_id=${packId}&page=${page}&pageCount=${pageCount}&sortCards=${sortCardsOrder}${sortCardsFilter}`)\r\n    },\r\n    addCard(packId: string, question?: string, answer?: string) {\r\n        return instance.post<AddCardResponseType>(`/cards/card`, {card: {cardsPack_id: packId, question, answer,}})\r\n    },\r\n    updateCard(cardId: string, question: string, answer: string) {\r\n        return instance.put<UpdateCardResponseType>(`/cards/card`, {card: {_id: cardId, question, answer}})\r\n    },\r\n    deleteCard(cardId: string) {\r\n        return instance.delete<DeleteCardResponseType>(`/cards/card?id=${cardId}`)\r\n    }\r\n}\r\n\r\nexport const learnPackAPI = {\r\n    gradeCard(card_id: string, grade: number) {\r\n        return instance.put(`/cards/grade`, {card_id, grade})\r\n    }\r\n}\r\n\r\n// types\r\nexport type UserDataType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar: string | undefined\r\n    publicCardPacksCount: number\r\n\r\n    created: string\r\n    updated: string\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n\r\n    error?: string\r\n}\r\n\r\nexport type LoginUserResponseType = UserDataType\r\n\r\nexport type LogoutResponseType = {\r\n    info: string\r\n}\r\n\r\nexport type SignUpResponseType = {\r\n    addedUser: UserDataType\r\n}\r\n\r\ntype RestorePasswordResponseType = {\r\n    answer: boolean\r\n    html: boolean\r\n    info: string\r\n    success: boolean\r\n}\r\n\r\nexport type PackResponseType = {\r\n    cardsCount: number\r\n    created: string\r\n    grade: number\r\n    more_id: string\r\n    name: string\r\n    path: string\r\n    private: false\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    updated: string\r\n    user_id: string\r\n    user_name: string\r\n    __v: number\r\n    _id: string\r\n}\r\n\r\nexport type GetPacksResponseType = {\r\n    cardPacks: Array<PackResponseType>\r\n    cardPacksTotalCount: number\r\n    minCardsCount: number\r\n    maxCardsCount: number\r\n    page: number\r\n    pageCount: number\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\nexport type AddPackResponseType = {\r\n    newCardsPack: PackResponseType\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\nexport type UpdatePackResponseType = {\r\n    updatedCardsPack: PackResponseType\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\nexport type DeletePackResponseType = {\r\n    deletedCardsPack: PackResponseType\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\nexport type CardType = {\r\n    answer: string\r\n    cardsPack_id: string\r\n    comments: string\r\n    created: string\r\n    grade: number\r\n    more_id: string\r\n    question: string\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    updated: string\r\n    user_id: string\r\n    __v: number\r\n    _id: string\r\n}\r\n\r\nexport type GetCardsResponseType = {\r\n    cards: Array<CardType>\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    packUserId: string\r\n    page: number\r\n    pageCount: number\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\nexport type AddCardResponseType = {\r\n    newCard: CardType\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\nexport type UpdateCardResponseType = {\r\n    updatedCard: CardType\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\nexport type DeleteCardResponseType = {\r\n    deletedCard: CardType\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\nexport type UpdateUserDataResponseType = {\r\n    token: string\r\n    tokenDeathTime: number\r\n    updatedUser: UserDataType\r\n}\r\n","import {ThunkAction} from \"redux-thunk\"\r\nimport {authAPI, UserDataType} from \"../../api/api\"\r\nimport {AppActionsType, AppRootStateType} from \"../store\"\r\nimport {setIsLoggedInAC} from \"./login-reducer\"\r\n\r\nenum APP_ACTIONS_TYPES {\r\n    SET_APP_STATUS = \"SET_APP_STATUS\",\r\n    SET_ERROR = \"SET_ERROR\",\r\n    SET_HEADER_MENU_STATUS = \"SET_HEADER_MENU_STATUS\",\r\n    SET_USER_DATA = \"USER_DATA\",\r\n    UPDATE_USER_DATA = \"UPDATE_USER_DATA\"\r\n}\r\n\r\nconst initialState = {\r\n    status: \"idle\" as RequestStatusType,\r\n    error: null as string | null,\r\n    headerMenuStatus: \"packsList\" as HeaderMenuStatusType,\r\n    userData: {\r\n        _id: \"\",\r\n        email: \"\",\r\n        name: \"\",\r\n        avatar: \"\" as string | undefined,\r\n        publicCardPacksCount: 0,\r\n\r\n        created: \"\",\r\n        updated: \"\",\r\n        isAdmin: false,\r\n        verified: false,\r\n        rememberMe: false,\r\n    } as UserDataType\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case APP_ACTIONS_TYPES.SET_APP_STATUS:\r\n            return {...state, status: action.status}\r\n        case APP_ACTIONS_TYPES.SET_ERROR:\r\n            return {...state, error: action.error}\r\n        case APP_ACTIONS_TYPES.SET_HEADER_MENU_STATUS:\r\n            return {...state, headerMenuStatus: action.headerMenuStatus}\r\n        case APP_ACTIONS_TYPES.SET_USER_DATA:\r\n            return {...state, userData: action.userData}\r\n        case APP_ACTIONS_TYPES.UPDATE_USER_DATA:\r\n            return {...state, ...action.userData}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setAppStatusAC = (status: RequestStatusType) => (\r\n    {type: APP_ACTIONS_TYPES.SET_APP_STATUS, status} as const)\r\n\r\nexport const setAppErrorAC = (error: string | null) => (\r\n    {type: APP_ACTIONS_TYPES.SET_ERROR, error} as const)\r\n\r\nexport const setHeaderMenuStatusAC = (headerMenuStatus: HeaderMenuStatusType) => (\r\n    {type: APP_ACTIONS_TYPES.SET_HEADER_MENU_STATUS, headerMenuStatus} as const)\r\n\r\nexport const setUserDataAC = (userData: UserDataType) => (\r\n    {type: APP_ACTIONS_TYPES.SET_USER_DATA, userData} as const)\r\n\r\nexport const updateUserDataAC = (email: string, name: string, avatar: string | undefined) => (\r\n    {type: APP_ACTIONS_TYPES.UPDATE_USER_DATA, userData: {email, name, avatar}} as const)\r\n\r\n// thunks\r\nexport const initializeAppTC = (): ThunkAction<void, AppRootStateType, unknown, AppActionsType> =>\r\n    async (dispatch) => {\r\n        try {\r\n            dispatch(setAppStatusAC(\"loading\"))\r\n            const res = await authAPI.me()\r\n            if (res.data._id) {\r\n                dispatch(setIsLoggedInAC(true))\r\n                dispatch(setUserDataAC(res.data))\r\n                console.log(\"AuthMe success!!!\")\r\n            }\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (`AuthMe failed: ${e.message}.`)\r\n            console.log(error)\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n        } finally {\r\n            // ...some code\r\n        }\r\n    }\r\n\r\nexport const updateUserDataTC = (userName: string, userEmail: string, userAvatar: string | undefined): ThunkAction<void, AppRootStateType, unknown, AppActionsType> =>\r\n    async (dispatch) => {\r\n        try {\r\n            dispatch(setAppStatusAC(\"loading\"))\r\n            const res = await authAPI.updateUserData(userName, userAvatar)\r\n            const {name, email, avatar} = res.data.updatedUser\r\n            dispatch(updateUserDataAC(name, email, avatar))\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (`Update userData failed: ${e.message}.`)\r\n            console.log(error)\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n        } finally {\r\n            // some code...\r\n        }\r\n    }\r\n\r\n// types\r\nexport type HeaderMenuStatusType = \"packsList\" | \"profile\"\r\nexport type RequestStatusType = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\r\nexport type AppReducerActionsType = ReturnType<typeof setAppStatusAC>\r\n    | ReturnType<typeof setAppErrorAC>\r\n    | ReturnType<typeof setHeaderMenuStatusAC>\r\n    | ReturnType<typeof setUserDataAC>\r\n    | ReturnType<typeof updateUserDataAC>","import {ThunkAction} from \"redux-thunk\"\r\nimport {PackResponseType, GetPacksResponseType, packsListAPI} from \"../../api/api\"\r\nimport {AppActionsType, AppRootStateType} from \"../store\"\r\nimport {setAppErrorAC, setAppStatusAC} from \"./app-reducer\"\r\n\r\nenum PACKS_LIST_ACTIONS_TYPES {\r\n    SET_PACKS_LIST_STATE = \"SET_PACKS_LIST_STATE\",\r\n    CHANGE_TABS_SHOW_PACKS_STATUS = \"CHANGE_TABS_SHOW_PACKS_STATUS\",\r\n    SET_DOUBLE_RANGE_VALUES = \"SET_DOUBLE_RANGE_VALUES\",\r\n    SET_NEW_SEARCH_PACKS_VALUE = \"SET_NEW_SEARCH_PACKS_VALUE\",\r\n    SET_SORT_NAME_PACKS = \"SET_SORT_NAME_PACKS\",\r\n    SET_SORT_CARDS_COUNT_PACKS = \"SET_SORT_CARDS_COUNT_PACKS\",\r\n    SET_SORT_UPDATE_PACKS = \"SET_SORT_UPDATE_PACKS\",\r\n    SET_SORT_CREATED_BY_PACKS = \"SET_SORT_CREATED_BY_PACKS\",\r\n    SET_NEW_CURRENT_PAGE = \"SET_NEW_CURRENT_PAGE\",\r\n    SET_NEW_PAGE_COUNT = \"SET_NEW_PAGE_COUNT\"\r\n}\r\n\r\nconst initialState = {\r\n    cardPacks: [] as Array<PackResponseType>,\r\n    cardPacksTotalCount: 0,\r\n    minCardsCount: 0,\r\n    maxCardsCount: 0,\r\n    page: 1,\r\n    pageCount: 10,\r\n    token: \"\",\r\n    tokenDeathTime: 0,\r\n\r\n    user_id: \"\",\r\n\r\n    isShowMyPacks: false,\r\n    minCardsDoubleRangeValue: 0,\r\n    maxCardsDoubleRangeValue: 0,\r\n    searchPacksValue: \"\",\r\n    sortPacksNameOrder: \"default\" as SortPacksAndCardsOrderType,\r\n    sortPacksCardsCountOrder: \"default\" as SortPacksAndCardsOrderType,\r\n    sortPacksUpdateOrder: 0 as SortPacksAndCardsOrderType,\r\n    sortPacksCreatedByOrder: \"default\" as SortPacksAndCardsOrderType,\r\n    sortPacksFilter: \"\",\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const packsListReducer = (state = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case PACKS_LIST_ACTIONS_TYPES.SET_PACKS_LIST_STATE:\r\n            return {...state, ...action.packsState}\r\n        case PACKS_LIST_ACTIONS_TYPES.CHANGE_TABS_SHOW_PACKS_STATUS:\r\n            return {...state, isShowMyPacks: action.isShowMyPacks, user_id: action.userId}\r\n        case PACKS_LIST_ACTIONS_TYPES.SET_DOUBLE_RANGE_VALUES:\r\n            return {\r\n                ...state,\r\n                minCardsDoubleRangeValue: action.minCardsDoubleRangeValue,\r\n                maxCardsDoubleRangeValue: action.maxCardsDoubleRangeValue\r\n            }\r\n        case PACKS_LIST_ACTIONS_TYPES.SET_NEW_SEARCH_PACKS_VALUE:\r\n            return {...state, searchPacksValue: action.searchPacksValue}\r\n        case PACKS_LIST_ACTIONS_TYPES.SET_SORT_NAME_PACKS:\r\n            return {\r\n                ...state,\r\n                sortPacksNameOrder: action.sortPacksNameOrder,\r\n                sortPacksCardsCountOrder: \"default\",\r\n                sortPacksUpdateOrder: \"default\",\r\n                sortPacksCreatedByOrder: \"default\",\r\n                sortPacksFilter: action.sortPacksFilter\r\n            }\r\n        case PACKS_LIST_ACTIONS_TYPES.SET_SORT_CARDS_COUNT_PACKS:\r\n            return {\r\n                ...state,\r\n                sortPacksNameOrder: \"default\",\r\n                sortPacksCardsCountOrder: action.sortPacksCardsCountOrder,\r\n                sortPacksUpdateOrder: \"default\",\r\n                sortPacksCreatedByOrder: \"default\",\r\n                sortPacksFilter: action.sortPacksFilter,\r\n            }\r\n        case PACKS_LIST_ACTIONS_TYPES.SET_SORT_UPDATE_PACKS:\r\n            return {\r\n                ...state,\r\n                sortPacksNameOrder: \"default\",\r\n                sortPacksCardsCountOrder: \"default\",\r\n                sortPacksUpdateOrder: action.sortPacksUpdateOrder,\r\n                sortPacksCreatedByOrder: \"default\",\r\n                sortPacksFilter: action.sortPacksFilter\r\n            }\r\n        case PACKS_LIST_ACTIONS_TYPES.SET_SORT_CREATED_BY_PACKS:\r\n            return {\r\n                ...state,\r\n                sortPacksNameOrder: \"default\",\r\n                sortPacksCardsCountOrder: \"default\",\r\n                sortPacksUpdateOrder: \"default\",\r\n                sortPacksCreatedByOrder: action.sortPacksCreatedByOrder,\r\n                sortPacksFilter: action.sortPacksFilter\r\n            }\r\n        case PACKS_LIST_ACTIONS_TYPES.SET_NEW_CURRENT_PAGE:\r\n            return {...state, page: action.page}\r\n        case PACKS_LIST_ACTIONS_TYPES.SET_NEW_PAGE_COUNT:\r\n            return {...state, pageCount: action.pageCount}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// AC\r\nexport const setPacksListStateAC = (packsState: GetPacksResponseType) => (\r\n    {type: PACKS_LIST_ACTIONS_TYPES.SET_PACKS_LIST_STATE, packsState} as const)\r\n\r\nexport const changeShowAllOrMyPacksAC = (isShowMyPacks: boolean, userId: string) => (\r\n    {type: PACKS_LIST_ACTIONS_TYPES.CHANGE_TABS_SHOW_PACKS_STATUS, isShowMyPacks, userId} as const)\r\n\r\nexport const setDoubleRangesValuesAC = (minCardsDoubleRangeValue: number, maxCardsDoubleRangeValue: number) => (\r\n    {\r\n        type: PACKS_LIST_ACTIONS_TYPES.SET_DOUBLE_RANGE_VALUES,\r\n        minCardsDoubleRangeValue,\r\n        maxCardsDoubleRangeValue\r\n    } as const)\r\n\r\nexport const setSearchPacksValueAC = (searchPacksValue: string) => (\r\n    {type: PACKS_LIST_ACTIONS_TYPES.SET_NEW_SEARCH_PACKS_VALUE, searchPacksValue} as const)\r\n\r\nexport const setSortPacksNameOrderAC = (sortPacksNameOrder: SortPacksAndCardsOrderType, sortPacksFilter: string) => (\r\n    {type: PACKS_LIST_ACTIONS_TYPES.SET_SORT_NAME_PACKS, sortPacksNameOrder, sortPacksFilter} as const)\r\n\r\nexport const setSortPacksCardsCountOrderAC = (sortPacksCardsCountOrder: SortPacksAndCardsOrderType, sortPacksFilter: string) => (\r\n    {type: PACKS_LIST_ACTIONS_TYPES.SET_SORT_CARDS_COUNT_PACKS, sortPacksCardsCountOrder, sortPacksFilter} as const)\r\n\r\nexport const setSortPacksUpdateOrderAC = (sortPacksUpdateOrder: SortPacksAndCardsOrderType, sortPacksFilter: string) => (\r\n    {type: PACKS_LIST_ACTIONS_TYPES.SET_SORT_UPDATE_PACKS, sortPacksUpdateOrder, sortPacksFilter} as const)\r\n\r\nexport const setSortPacksCreatedByOrderAC = (sortPacksCreatedByOrder: SortPacksAndCardsOrderType, sortPacksFilter: string) => (\r\n    {type: PACKS_LIST_ACTIONS_TYPES.SET_SORT_CREATED_BY_PACKS, sortPacksCreatedByOrder, sortPacksFilter} as const)\r\n\r\nexport const setNewCurrentPageAC = (page: number) => (\r\n    {type: PACKS_LIST_ACTIONS_TYPES.SET_NEW_CURRENT_PAGE, page} as const)\r\n\r\nexport const setNewPageCountAC = (pageCount: number) => (\r\n    {type: PACKS_LIST_ACTIONS_TYPES.SET_NEW_PAGE_COUNT, pageCount} as const)\r\n\r\n// TC\r\nexport const fetchPacksTC = (searchPacksValue: string, min: number, max: number, sortPacksOrder: SortPacksAndCardsOrderType, sortPacksFilter: string, page: number, pageCount: number, user_id: string): ThunkAction<void, AppRootStateType, unknown, AppActionsType> =>\r\n    async (dispatch) => {\r\n        try {\r\n            const res = await packsListAPI.getPacks(searchPacksValue, min, max, sortPacksOrder, sortPacksFilter, page, pageCount, user_id)\r\n            dispatch(setPacksListStateAC(res.data))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (`Get packs failed: ${e.message}.`)\r\n            console.log(error)\r\n        } finally {\r\n            // some code...\r\n        }\r\n    }\r\n\r\nexport const addNewPackTC = (packName: string, searchPacksValue: string, min: number, max: number, sortPacksOrder: SortPacksAndCardsOrderType, sortPacksFilter: string, page: number, pageCount: number, user_id: string): ThunkAction<void, AppRootStateType, unknown, AppActionsType> =>\r\n    async (dispatch) => {\r\n        try {\r\n            dispatch(setAppStatusAC(\"loading\"))\r\n            const res = await packsListAPI.addPack(packName)\r\n            dispatch(fetchPacksTC(searchPacksValue, min, max, sortPacksOrder, sortPacksFilter, page, pageCount, user_id))\r\n            dispatch(changeShowAllOrMyPacksAC(true, user_id))\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n        } catch (e) {\r\n\r\n            const error = e.response ? e.response.data.error : (`Add pack failed: ${e.message}.`)\r\n            dispatch(setAppErrorAC(error))\r\n            console.log(error)\r\n\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n        } finally {\r\n            // some code...\r\n        }\r\n    }\r\n\r\nexport const updatePackTC = (newPackName: string, packId: string, searchPacksValue: string, min: number, max: number, sortPacksOrder: SortPacksAndCardsOrderType, sortPacksFilter: string, page: number, pageCount: number, user_id: string): ThunkAction<void, AppRootStateType, unknown, AppActionsType> =>\r\n    async (dispatch) => {\r\n        try {\r\n            dispatch(setAppStatusAC(\"loading\"))\r\n            const res = await packsListAPI.updatePack(newPackName, packId)\r\n            dispatch(fetchPacksTC(searchPacksValue, min, max, sortPacksOrder, sortPacksFilter, page, pageCount, user_id))\r\n            dispatch(changeShowAllOrMyPacksAC(true, user_id))\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (`Update pack failed: ${e.message}.`)\r\n            console.log(error)\r\n            dispatch(setAppErrorAC(error))\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n        } finally {\r\n            // some code...\r\n        }\r\n    }\r\n\r\nexport const deletePackTC = (packId: string, packName: string, min: number, max: number, sortPacksOrder: SortPacksAndCardsOrderType, sortPacksFilter: string, page: number, pageCount: number, user_id: string): ThunkAction<void, AppRootStateType, unknown, AppActionsType> =>\r\n    async (dispatch) => {\r\n        try {\r\n            dispatch(setAppStatusAC(\"loading\"))\r\n            const res = await packsListAPI.deletePack(packId)\r\n            dispatch(fetchPacksTC(packName, min, max, sortPacksOrder, sortPacksFilter, page, pageCount, user_id))\r\n            dispatch(changeShowAllOrMyPacksAC(true, user_id))\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (`Delete pack failed: ${e.message}.`)\r\n            console.log(error)\r\n            dispatch(setAppErrorAC(error))\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n        } finally {\r\n            // some code...\r\n        }\r\n    }\r\n\r\nexport type SortPacksAndCardsOrderType = 0 | 1 | \"default\"\r\nexport type PacksListReducerActionsType = ReturnType<typeof setPacksListStateAC>\r\n    | ReturnType<typeof changeShowAllOrMyPacksAC>\r\n    | ReturnType<typeof setDoubleRangesValuesAC>\r\n    | ReturnType<typeof setSearchPacksValueAC>\r\n    | ReturnType<typeof setSortPacksNameOrderAC>\r\n    | ReturnType<typeof setSortPacksCardsCountOrderAC>\r\n    | ReturnType<typeof setSortPacksUpdateOrderAC>\r\n    | ReturnType<typeof setSortPacksCreatedByOrderAC>\r\n    | ReturnType<typeof setNewCurrentPageAC>\r\n    | ReturnType<typeof setNewPageCountAC>","import {ThunkAction} from \"redux-thunk\"\r\nimport {cardsAPI, CardType, GetCardsResponseType} from \"../../api/api\"\r\nimport {AppActionsType, AppRootStateType} from \"../store\"\r\nimport {setAppErrorAC, setAppStatusAC} from \"./app-reducer\"\r\nimport {SortPacksAndCardsOrderType} from \"./packsList-reducer\"\r\n\r\nenum CARDS_LIST_ACTIONS_TYPES {\r\n    SET_CARDS = \"SET-CARDS\",\r\n    SET_CARD_TOTAL_COUNT = \"SET_CARD_TOTAL_COUNT\",\r\n    SET_CARDS_NEW_CURRENT_PAGE = \"SET_CARDS_NEW_CURRENT_PAGE\",\r\n    SET_CARDS_NEW_PAGE_COUNT = \"SET_CARDS_NEW_PAGE_COUNT\",\r\n    SET_SEARCH_CARDS_VALUE = \"SET_SEARCH_CARDS_VALUE\",\r\n    SET_SORT_QUESTION_CARDS = \"SET_SORT_QUESTION_CARDS\",\r\n    SET_SORT_ANSWER_CARDS = \"SET_SORT_ANSWER_CARDS\",\r\n    SET_SORT_UPDATE_CARDS = \"SET_SORT_UPDATE_CARDS\",\r\n    SET_SORT_GRADE_CARDS = \"SET_SORT_GRADE_CARDS\"\r\n}\r\n\r\nconst initialState = {\r\n    cards: [] as Array<CardType>,\r\n    cardsTotalCount: 0,\r\n    pageCount: 10,\r\n    page: 1,\r\n    maxGrade: 0,\r\n    minGrade: 0,\r\n    packUserId: \"\",\r\n    token: \"\",\r\n    tokenDeathTime: 0,\r\n    searchCardsValue: \"\",\r\n\r\n    sortCardsQuestionOrder: \"default\" as SortPacksAndCardsOrderType,\r\n    sortCardsAnswerOrder: \"default\" as SortPacksAndCardsOrderType,\r\n    sortCardsUpdateOrder: 0 as SortPacksAndCardsOrderType,\r\n    sortCardsGradeOrder: \"default\" as SortPacksAndCardsOrderType,\r\n    sortCardsFilter: \"\"\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const cardsListReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case CARDS_LIST_ACTIONS_TYPES.SET_CARDS:\r\n            return {...state, ...action.cardsState}\r\n        case CARDS_LIST_ACTIONS_TYPES.SET_CARD_TOTAL_COUNT:\r\n            return {...state, cardsTotalCount: action.cardsTotalCount}\r\n        case CARDS_LIST_ACTIONS_TYPES.SET_CARDS_NEW_CURRENT_PAGE:\r\n            return {...state, page: action.newCurrentPage}\r\n        case CARDS_LIST_ACTIONS_TYPES.SET_CARDS_NEW_PAGE_COUNT:\r\n            return {...state, pageCount: action.newPageCount}\r\n        case CARDS_LIST_ACTIONS_TYPES.SET_SEARCH_CARDS_VALUE:\r\n            return {...state, searchCardsValue: action.searchCardsValue}\r\n        case CARDS_LIST_ACTIONS_TYPES.SET_SORT_QUESTION_CARDS:\r\n            return {\r\n                ...state,\r\n                sortCardsQuestionOrder: action.sortCardsQuestionOrder,\r\n                sortCardsAnswerOrder: \"default\",\r\n                sortCardsUpdateOrder: \"default\",\r\n                sortCardsGradeOrder: \"default\",\r\n                sortCardsFilter: action.sortCardsFilter\r\n            }\r\n        case CARDS_LIST_ACTIONS_TYPES.SET_SORT_ANSWER_CARDS:\r\n            return {\r\n                ...state,\r\n                sortCardsQuestionOrder: \"default\",\r\n                sortCardsAnswerOrder: action.sortCardsAnswerOrder,\r\n                sortCardsUpdateOrder: \"default\",\r\n                sortCardsGradeOrder: \"default\",\r\n                sortCardsFilter: action.sortCardsFilter\r\n            }\r\n        case CARDS_LIST_ACTIONS_TYPES.SET_SORT_UPDATE_CARDS:\r\n            return {\r\n                ...state,\r\n                sortCardsQuestionOrder: \"default\",\r\n                sortCardsAnswerOrder: \"default\",\r\n                sortCardsUpdateOrder: action.sortCardsUpdateOrder,\r\n                sortCardsGradeOrder: \"default\",\r\n                sortCardsFilter: action.sortCardsFilter\r\n            }\r\n        case CARDS_LIST_ACTIONS_TYPES.SET_SORT_GRADE_CARDS:\r\n            return {\r\n                ...state,\r\n                sortCardsQuestionOrder: \"default\",\r\n                sortCardsAnswerOrder: \"default\",\r\n                sortCardsUpdateOrder: \"default\",\r\n                sortCardsGradeOrder: action.sortCardsGradeOrder,\r\n                sortCardsFilter: action.sortCardsFilter\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setCardsAC = (cardsState: GetCardsResponseType) => (\r\n    {type: CARDS_LIST_ACTIONS_TYPES.SET_CARDS, cardsState} as const)\r\n\r\nexport const setCardTotalCountAC = (cardsTotalCount: number) => (\r\n    {type: CARDS_LIST_ACTIONS_TYPES.SET_CARD_TOTAL_COUNT, cardsTotalCount} as const)\r\n\r\nexport const setCardsNewCurrentPageAC = (newCurrentPage: number) => (\r\n    {type: CARDS_LIST_ACTIONS_TYPES.SET_CARDS_NEW_CURRENT_PAGE, newCurrentPage} as const)\r\n\r\nexport const setCardsNewCardsPageCountAC = (newPageCount: number) => (\r\n    {type: CARDS_LIST_ACTIONS_TYPES.SET_CARDS_NEW_PAGE_COUNT, newPageCount} as const)\r\n\r\nexport const setSearchCardsValueAC = (searchCardsValue: string) => (\r\n    {type: CARDS_LIST_ACTIONS_TYPES.SET_SEARCH_CARDS_VALUE, searchCardsValue} as const)\r\n\r\nexport const setSortQuestionCardsAC = (sortCardsQuestionOrder: SortPacksAndCardsOrderType, sortCardsFilter: string) => (\r\n    {type: CARDS_LIST_ACTIONS_TYPES.SET_SORT_QUESTION_CARDS, sortCardsQuestionOrder, sortCardsFilter} as const)\r\n\r\nexport const setSortAnswerCardsAC = (sortCardsAnswerOrder: SortPacksAndCardsOrderType, sortCardsFilter: string) => (\r\n    {type: CARDS_LIST_ACTIONS_TYPES.SET_SORT_ANSWER_CARDS, sortCardsAnswerOrder, sortCardsFilter} as const)\r\n\r\nexport const setSortUpdateCardsAC = (sortCardsUpdateOrder: SortPacksAndCardsOrderType, sortCardsFilter: string) => (\r\n    {type: CARDS_LIST_ACTIONS_TYPES.SET_SORT_UPDATE_CARDS, sortCardsUpdateOrder, sortCardsFilter} as const)\r\n\r\nexport const setSortGradeCardsAC = (sortCardsGradeOrder: SortPacksAndCardsOrderType, sortCardsFilter: string) => (\r\n    {type: CARDS_LIST_ACTIONS_TYPES.SET_SORT_GRADE_CARDS, sortCardsGradeOrder, sortCardsFilter} as const)\r\n\r\n// thunks\r\nexport const getCardsTC = (packId: string, page?: number, pageCount?: number, searchCardsValue?: string, sortCardsOrder?: SortPacksAndCardsOrderType, sortCardsFilter?: string): ThunkAction<void, AppRootStateType, unknown, AppActionsType> =>\r\n    async (dispatch) => {\r\n        try {\r\n            const res = await cardsAPI.getCards(packId, page, pageCount, searchCardsValue, sortCardsOrder, sortCardsFilter)\r\n            dispatch(setCardsAC(res.data))\r\n            dispatch(setCardTotalCountAC(res.data.cardsTotalCount))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (`Get cards failed: ${e.message}.`)\r\n            console.log(error)\r\n        } finally {\r\n            // some code...\r\n        }\r\n    }\r\n\r\nexport const addCardTC = (packId: string, cardQuestion: string, cardAnswer: string): ThunkAction<void, AppRootStateType, unknown, AppActionsType> =>\r\n    async (dispatch, getState) => {\r\n        try {\r\n            dispatch(setAppStatusAC(\"loading\"))\r\n            const {page, pageCount, searchCardsValue, sortCardsUpdateOrder, sortCardsFilter} = getState().cardsListReducer\r\n            const res = await cardsAPI.addCard(packId, cardQuestion, cardAnswer)\r\n            dispatch(getCardsTC(packId, page, pageCount, searchCardsValue, sortCardsUpdateOrder, sortCardsFilter))\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (`Add card failed: ${e.message}.`)\r\n            console.log(error)\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n            dispatch(setAppErrorAC(error))\r\n        } finally {\r\n            // some code...\r\n        }\r\n    }\r\n\r\nexport const updateCardTC = (packId: string, cardId: string, newCardQuestion: string, newCardAnswer: string): ThunkAction<void, AppRootStateType, unknown, AppActionsType> =>\r\n    async (dispatch, getState) => {\r\n        try {\r\n            dispatch(setAppStatusAC(\"loading\"))\r\n            const {page, pageCount, searchCardsValue, sortCardsUpdateOrder, sortCardsFilter} = getState().cardsListReducer\r\n            const rest = await cardsAPI.updateCard(cardId, newCardQuestion, newCardAnswer)\r\n            dispatch(getCardsTC(packId, page, pageCount, searchCardsValue, sortCardsUpdateOrder, sortCardsFilter))\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (`Update card failed: ${e.message}.`)\r\n            console.log(error)\r\n            dispatch(setAppErrorAC(error))\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n        } finally {\r\n            // some code...\r\n        }\r\n    }\r\n\r\nexport const deleteCardTC = (packId: string, cardId: string): ThunkAction<void, AppRootStateType, unknown, AppActionsType> =>\r\n    async (dispatch, getState) => {\r\n        try {\r\n            dispatch(setAppStatusAC(\"loading\"))\r\n            const {page, pageCount, searchCardsValue, sortCardsUpdateOrder, sortCardsFilter} = getState().cardsListReducer\r\n            const res = await cardsAPI.deleteCard(cardId)\r\n            dispatch(getCardsTC(packId, page, pageCount, searchCardsValue, sortCardsUpdateOrder, sortCardsFilter))\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (`Delete card failed: ${e.message}.`)\r\n            console.log(error)\r\n            dispatch(setAppErrorAC(error))\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n        } finally {\r\n            // some code...\r\n        }\r\n    }\r\n\r\n// types\r\nexport type CardsListReducerActionsType = ReturnType<typeof setCardsAC>\r\n    | ReturnType<typeof setCardTotalCountAC>\r\n    | ReturnType<typeof setCardsNewCardsPageCountAC>\r\n    | ReturnType<typeof setCardsNewCurrentPageAC>\r\n    | ReturnType<typeof setSearchCardsValueAC>\r\n    | ReturnType<typeof setSortQuestionCardsAC>\r\n    | ReturnType<typeof setSortAnswerCardsAC>\r\n    | ReturnType<typeof setSortUpdateCardsAC>\r\n    | ReturnType<typeof setSortGradeCardsAC>","import {ThunkAction} from \"redux-thunk\"\r\nimport {authAPI} from \"../../api/api\"\r\nimport {AppActionsType, AppRootStateType} from \"../store\"\r\nimport {setAppErrorAC, setAppStatusAC} from \"./app-reducer\"\r\n\r\nenum REGISTRATION_ACTIONS_TYPES {\r\n    SET_IS_SIGN_UP = \"registration/SET_IS_SIGN_UP\"\r\n}\r\n\r\ntype InitialStateType = {\r\n    isSignUp: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    isSignUp: false\r\n}\r\n\r\nexport const registrationReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case REGISTRATION_ACTIONS_TYPES.SET_IS_SIGN_UP:\r\n            return {...state, isSignUp: action.value}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setIsSignUpAC = (value: boolean) => {\r\n    return {type: REGISTRATION_ACTIONS_TYPES.SET_IS_SIGN_UP, value} as const\r\n}\r\n\r\n// thunks\r\nexport const signUpTC = (email: string, password: string): ThunkAction<void, AppRootStateType, unknown, AppActionsType> =>\r\n    async (dispatch) => {\r\n        try {\r\n            dispatch(setAppStatusAC(\"loading\"))\r\n            const res = await authAPI.signUp(email, password)\r\n            dispatch(setIsSignUpAC(true))\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (`Registration failed: ${e.message}.`)\r\n            console.log(error)\r\n            dispatch(setAppErrorAC(error))\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n        } finally {\r\n            // some code...\r\n        }\r\n    }\r\n\r\n// types\r\nexport type RegistrationReducerActionsType = ReturnType<typeof setIsSignUpAC>","import {ThunkAction} from \"redux-thunk\"\r\nimport {authAPI} from \"../../api/api\"\r\nimport {AppActionsType, AppRootStateType} from \"../store\"\r\nimport {setAppStatusAC} from \"./app-reducer\"\r\n\r\nenum RESTORE_PASSWORD_ACTIONS_TYPES {\r\n    SET_ERROR_MESSAGE = \"SET-ERROR-MESSAGE\"\r\n}\r\n\r\nconst initialState = {\r\n    errorMessage: null\r\n}\r\n\r\ntype InitialStateType = {\r\n    errorMessage: string | null\r\n}\r\n\r\nexport const restorePasswordReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case RESTORE_PASSWORD_ACTIONS_TYPES.SET_ERROR_MESSAGE:\r\n            return {...state, errorMessage: action.errorMessage}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setErrorMessageAC = (errorMessage: string) => (\r\n    {type: RESTORE_PASSWORD_ACTIONS_TYPES.SET_ERROR_MESSAGE, errorMessage: errorMessage})\r\n\r\n// thunks\r\nexport const restorePasswordTC = (email: string): ThunkAction<void, AppRootStateType, unknown, AppActionsType> =>\r\n    async (dispatch) => {\r\n        try {\r\n            dispatch(setAppStatusAC(\"loading\"))\r\n            const res = await authAPI.restorePassword(email)\r\n            dispatch(setErrorMessageAC(`Recovery instructions was sent to email: ${email}`))\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (`Restore password failed: ${e.message}.`)\r\n            console.log(error)\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n        } finally {\r\n            // some code...\r\n        }\r\n    }\r\n\r\n// types\r\nexport type RestorePasswordReducerActionsType = ReturnType<typeof setErrorMessageAC>","import {ThunkAction} from \"redux-thunk\"\r\nimport {authAPI} from \"../../api/api\"\r\nimport {AppActionsType, AppRootStateType} from \"../store\"\r\nimport {setAppStatusAC} from \"./app-reducer\"\r\n\r\nenum UPDATE_PASSWORD_ACTIONS_TYPES {\r\n    IS_SUCCESS = \"IS_SUCCESS\"\r\n}\r\n\r\ntype InitialStateType = {\r\n    isSuccess: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    isSuccess: false\r\n}\r\n\r\nexport const updatePasswordReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case UPDATE_PASSWORD_ACTIONS_TYPES.IS_SUCCESS:\r\n            return {...state, isSuccess: action.isSuccess}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const isSuccessAC = (isSuccess: boolean) => (\r\n    {type: UPDATE_PASSWORD_ACTIONS_TYPES.IS_SUCCESS, isSuccess} as const)\r\n\r\n// thunks\r\nexport const updatePasswordTC = (newPassword: string, token: string): ThunkAction<void, AppRootStateType, unknown, AppActionsType> =>\r\n    async (dispatch) => {\r\n        try {\r\n            dispatch(setAppStatusAC(\"loading\"))\r\n            const res = await authAPI.setNewPassword(newPassword, token)\r\n            dispatch(isSuccessAC(true))\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (`Update password failed: ${e.message}.`)\r\n            console.log(error)\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n        } finally {\r\n            // some code...\r\n        }\r\n    }\r\n\r\n// types\r\nexport type UpdatePasswordReducerActionsType = ReturnType<typeof isSuccessAC>\r\n","import {ThunkAction} from \"redux-thunk\"\r\nimport {learnPackAPI} from \"../../api/api\"\r\nimport {AppActionsType, AppRootStateType} from \"../store\"\r\nimport {setAppStatusAC} from \"./app-reducer\"\r\n\r\nenum LEARN_PACK_ACTIONS_TYPES {\r\n    TEMPLATE_ACTION_TYPE = \"TEMPLATE_ACTION_TYPE\"\r\n}\r\n\r\nconst initialState: InitialStateType = {}\r\n\r\ntype InitialStateType = {}\r\n\r\nexport const learnPackReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case LEARN_PACK_ACTIONS_TYPES.TEMPLATE_ACTION_TYPE:\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const templateAC = () => {\r\n    return {type: LEARN_PACK_ACTIONS_TYPES.TEMPLATE_ACTION_TYPE} as const\r\n}\r\n\r\n// thunks\r\nexport const gradeCardTC = (card_id: string, grade: number): ThunkAction<void, AppRootStateType, unknown, AppActionsType> =>\r\n    async (dispatch, getState) => {\r\n        try {\r\n            dispatch(setAppStatusAC(\"loading\"))\r\n            const res = await learnPackAPI.gradeCard(card_id, grade)\r\n            dispatch(setAppStatusAC(\"succeeded\"))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (`Delete card failed: ${e.message}.`)\r\n            console.log(error)\r\n            dispatch(setAppStatusAC(\"failed\"))\r\n        } finally {\r\n            // some code...\r\n        }\r\n    }\r\n\r\n// types\r\nexport type LearnPackReducerActionsType = ReturnType<typeof templateAC>","import {applyMiddleware, combineReducers, createStore} from \"redux\"\r\nimport {composeWithDevTools} from \"redux-devtools-extension\"\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {appReducer, AppReducerActionsType} from \"./reducers/app-reducer\"\r\nimport {packsListReducer, PacksListReducerActionsType} from \"./reducers/packsList-reducer\"\r\nimport {cardsListReducer, CardsListReducerActionsType} from \"./reducers/cardsList-reducer\"\r\nimport {loginReducer, LoginReducerActionsType} from \"./reducers/login-reducer\"\r\nimport {registrationReducer, RegistrationReducerActionsType} from \"./reducers/registration-reducer\"\r\nimport {restorePasswordReducer, RestorePasswordReducerActionsType} from \"./reducers/restorePassword-reducer\"\r\nimport {updatePasswordReducer, UpdatePasswordReducerActionsType} from \"./reducers/updatePassword-reducer\"\r\nimport {learnPackReducer, LearnPackReducerActionsType} from \"./reducers/learnPack-reducer\"\r\n\r\nconst rootReducer = combineReducers({\r\n    appReducer: appReducer,\r\n    packsListReducer: packsListReducer,\r\n    cardsListReducer: cardsListReducer,\r\n    learnPackReducer: learnPackReducer,\r\n    loginReducer: loginReducer,\r\n    registrationReducer: registrationReducer,\r\n    restorePasswordReducer: restorePasswordReducer,\r\n    updatePasswordReducer: updatePasswordReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunkMiddleware)))\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\nexport type AppActionsType = AppReducerActionsType\r\n    | PacksListReducerActionsType\r\n    | CardsListReducerActionsType\r\n    | LearnPackReducerActionsType\r\n    | LoginReducerActionsType\r\n    | RegistrationReducerActionsType\r\n    | RestorePasswordReducerActionsType\r\n    | UpdatePasswordReducerActionsType\r\n\r\n// @ts-ignore\r\nwindow.store = store","import React from \"react\"\r\nimport s from \"./MainTitle.module.scss\"\r\n\r\ntype MainTitlePropsType = {\r\n    title: string\r\n    textStyle?: string\r\n}\r\n\r\nexport const MainTitle = React.memo((props: MainTitlePropsType) => {\r\n    return (\r\n        <h2 className={`${s.mainTitle} ${props.textStyle}`}>\r\n            {props.title}\r\n        </h2>\r\n    )\r\n})","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\"\r\nimport s from \"./Button.module.scss\"\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype ButtonPropsType = DefaultButtonPropsType & {\r\n    error?: string | null\r\n}\r\n\r\nexport const Button: React.FC<ButtonPropsType> = React.memo(({\r\n     error, className,\r\n     ...restProps\r\n}) => {\r\n\r\n    const finalClassName = `${error ? s.error : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            {...restProps}\r\n            className={finalClassName}\r\n        />\r\n    )\r\n})","import React, {useCallback} from \"react\"\r\nimport {useHistory} from \"react-router-dom\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {AppRootStateType} from \"../../../redux/store\"\r\nimport {logoutTC} from \"../../../redux/reducers/login-reducer\"\r\nimport {HeaderMenuStatusType, setHeaderMenuStatusAC} from \"../../../redux/reducers/app-reducer\"\r\nimport {MainTitle} from \"../mainTitle/MainTitle\"\r\nimport {Button} from \"../button/Button\"\r\nimport s from \"./HeaderMenu.module.scss\"\r\n\r\nexport const HeaderMenu = React.memo(() => {\r\n\r\n    const {status, headerMenuStatus} = useSelector((state: AppRootStateType) => state.appReducer)\r\n    const dispatch = useDispatch()\r\n\r\n    const history = useHistory()\r\n\r\n    const packsListClassName = headerMenuStatus === \"packsList\" ? `${s.tabPack} ${s.activeHeaderMenuItem}` : s.tabPack\r\n    const profileClassName = headerMenuStatus === \"profile\" ? `${s.tabProfile} ${s.activeHeaderMenuItem}` : s.tabProfile\r\n\r\n    const onChangeHeaderMenuStatus = useCallback((headerMenuStatus: HeaderMenuStatusType) => {\r\n        if (headerMenuStatus === \"packsList\") {\r\n            history.push(\"/\")\r\n        } else {\r\n            history.push(\"/profile\")\r\n        }\r\n        dispatch(setHeaderMenuStatusAC(headerMenuStatus))\r\n    }, [dispatch, history])\r\n\r\n    const onLogoutClickHandler = useCallback(() => {\r\n        dispatch(logoutTC())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div className={s.headerMenu}>\r\n            <div className={s.container}>\r\n                <div className={s.inner}>\r\n                    <div className={s.titleWrap}>\r\n                        <MainTitle title={\"It-Incubator\"}/>\r\n                    </div>\r\n                    <div className={s.tabsWrap}>\r\n                        <div\r\n                            onClick={() => {\r\n                                onChangeHeaderMenuStatus(\"packsList\")\r\n                            }}\r\n                            className={packsListClassName}>\r\n                            Packs list\r\n                        </div>\r\n                        <div\r\n                            onClick={() => {\r\n                                onChangeHeaderMenuStatus(\"profile\")\r\n                            }}\r\n                            className={profileClassName}>\r\n                            Profile\r\n                        </div>\r\n                    </div>\r\n                    <Button\r\n                        onClick={onLogoutClickHandler}\r\n                        disabled={status === \"loading\"}\r\n                        className={s.logoutButton}>\r\n                        Log out\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\n","import {makeStyles, Theme} from \"@material-ui/core/styles\"\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        '& .MuiTabs-root': {\r\n            backgroundColor: \"#ffffff;\",\r\n            color: \"#2D2E46\",\r\n            width: \"196px\",\r\n            minHeight: \"36px\",\r\n            height: \"36px\",\r\n        },\r\n        '& .MuiTab-root': {\r\n            width: \"98px\",\r\n            height: \"36px\",\r\n            minHeight: \"36px\",\r\n\r\n            \"@media (min-width: 600px)\": {\r\n                minWidth: \"98px\",\r\n            }\r\n        },\r\n        '& .MuiTab-textColorInherit': {\r\n            backgroundColor: \"#ffffff;\",\r\n            color: \"#2D2E46\",\r\n        },\r\n        '& .MuiTab-textColorInherit.Mui-selected': {\r\n            backgroundColor: \"#9A91C8;\",\r\n            color: \"#ffffff\",\r\n        },\r\n        '& .MuiTabs-indicator': {\r\n            backgroundColor: \"transparent\",\r\n        },\r\n        '& .MuiTab-wrapper': {\r\n            textTransform: \"none\",\r\n            fontFamily: \"SFUIDisplay, sans-serif\",\r\n            fontWeight: 400,\r\n            fontSize: \"14px\",\r\n            lineHeight: \"1.05\",\r\n            letterSpacing: \".4px\",\r\n        },\r\n    }\r\n}))","import React, {useCallback} from \"react\"\r\nimport {useStyles} from \"./TabsStylesShowPacks\"\r\nimport s from \"./TabsShowPacks.module.scss\"\r\n\r\ntype TabsShowPacksPropsType = {\r\n    userId: string\r\n    showPacksStatus: boolean\r\n    changeShowMyPacks: (isShowMyPacks: boolean, userId: string) => void\r\n}\r\n\r\nexport const TabsShowPacks = React.memo((props: TabsShowPacksPropsType) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const onAllButtonClickHandler = useCallback(() => {\r\n        props.changeShowMyPacks(false, \"\")\r\n    }, [props])\r\n\r\n    const onMyButtonClickHandler = useCallback(() => {\r\n        props.changeShowMyPacks(true, props.userId)\r\n    }, [props])\r\n\r\n    return (\r\n        <div className={s.tabsShowPacks}>\r\n            <h2 className={s.title}>Show packs cards:</h2>\r\n            <div className={classes.root}>\r\n                {!props.showPacksStatus\r\n                    ? <div className={s.tabItemsContainer}>\r\n                        <button onClick={onAllButtonClickHandler} className={`${s.tabItem} ${s.activeTabItem}`}>All</button>\r\n                        <button onClick={onMyButtonClickHandler} className={s.tabItem}>My</button>\r\n                    </div>\r\n                    : <div className={s.tabItemsContainer}>\r\n                        <button onClick={onAllButtonClickHandler} className={s.tabItem}>All</button>\r\n                        <button onClick={onMyButtonClickHandler} className={`${s.tabItem} ${s.activeTabItem}`}>My</button>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n})","import {makeStyles, Theme} from \"@material-ui/core/styles\"\r\nimport {alpha, createStyles} from \"@material-ui/core\"\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        grow: {\r\n            flexGrow: 1,\r\n            borderRadius: \"2px\",\r\n            backgroundColor: \"#ECECF9\",\r\n            border: \"1px solid lightGray\",\r\n        },\r\n        search: {\r\n            position: \"relative\",\r\n            borderRadius: theme.shape.borderRadius,\r\n            backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n            '&:hover': {\r\n                backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n            },\r\n            marginRight: theme.spacing(2),\r\n            marginLeft: 0,\r\n            width: \"100%\",\r\n\r\n        },\r\n        searchIcon: {\r\n            padding: theme.spacing(0, 2),\r\n            height: \"100%\",\r\n            position: \"absolute\",\r\n            pointerEvents: \"none\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            opacity: \".5\",\r\n\r\n        },\r\n        inputInput: {\r\n            padding: theme.spacing(1, 1, 1, 0),\r\n            paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n            transition: theme.transitions.create(\"width\"),\r\n            width: \"100%\",\r\n        },\r\n        input: {\r\n            display: \"flex\",\r\n            fontFamily: \"SFUIDisplay, sans-serif\",\r\n            fontWeight: 400,\r\n            fontSize: \"14px\",\r\n            lineHeight: \"1.6\",\r\n            color: \"#2D2E46\",\r\n            letterSpacing: \".7px\",\r\n            borderRadius: \"2px\",\r\n            opacity: \".5\",\r\n        },\r\n        inputRoot: {\r\n            color: \"#2D2E46\",\r\n            opacity: 1,\r\n        }\r\n    })\r\n)","import React, {ChangeEvent, useCallback, useState} from \"react\"\r\nimport SearchIcon from \"@material-ui/icons/Search\"\r\nimport {InputBase} from \"@material-ui/core\"\r\nimport {useStyles} from \"./SearchInputStyles\"\r\nimport s from \"./SearchInput.module.scss\"\r\n\r\ntype SearchInputPropsType = {\r\n    onKeyPressEnter: (value: string) => void\r\n}\r\n\r\nexport const SearchInput = React.memo((props: SearchInputPropsType) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [searchValue, setSearchValue] = useState<string>(\"\")\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        setSearchValue(e.currentTarget.value)\r\n        props.onKeyPressEnter(searchValue.trim())\r\n    }, [props, searchValue])\r\n\r\n    return (\r\n        <div className={s.input}>\r\n            <div className={classes.grow}>\r\n                <div className={classes.search}>\r\n                    <div className={classes.searchIcon}>\r\n                        <SearchIcon/>\r\n                    </div>\r\n                    <InputBase\r\n                        type={\"text\"}\r\n                        value={searchValue}\r\n                        onChange={onChangeHandler}\r\n                        placeholder=\"Search…\"\r\n                        classes={{\r\n                            root: classes.inputRoot,\r\n                            input: classes.inputInput,\r\n                        }}\r\n                        inputProps={{'aria-label': \"search\"}}\r\n                        className={classes.input}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import {makeStyles, Theme} from \"@material-ui/core/styles\"\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        padding: \"0 15px\",\r\n\r\n        '& .MuiSlider-rail': {\r\n            backgroundColor: \"#21268F\",\r\n            opacity: \".5\",\r\n            height: \"5px\",\r\n            borderRadius: \"10px\",\r\n        },\r\n\r\n        '& .MuiSlider-track': {\r\n            backgroundColor: \"#21268F\",\r\n            height: \"5px\",\r\n            borderRadius: \"10px\",\r\n        },\r\n\r\n        '& .MuiSlider-thumb ': {\r\n            backgroundColor: \"#ffffff\",\r\n            height: \"16px\",\r\n            width: \"16px\",\r\n            border: \"4px solid #21268F\",\r\n\r\n            '& span': {\r\n                width: \"32px\",\r\n                height: \"24px\",\r\n                transform: \"none\",\r\n                borderRadius: \"3px\",\r\n                backgroundColor: \"#21268F\",\r\n                top: \"-22px\",\r\n\r\n                '& span': {\r\n                    transform: \"none\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                },\r\n\r\n            },\r\n        },\r\n    }\r\n}))\r\n\r\n\r\n","import React, {useCallback, useState} from \"react\"\r\nimport {Slider} from \"@material-ui/core\"\r\nimport {useStyles} from \"./DoubleRangeStyles\"\r\nimport s from \"./DoubleRange.module.scss\"\r\n\r\ntype DoubleRangePropsType = {\r\n    minCardsCount: number\r\n    maxCardsCount: number\r\n    setDoubleRangeValues: (minValue: number, maxValue: number) => void\r\n}\r\n\r\nexport const DoubleRange = React.memo((props: DoubleRangePropsType) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [value, setValue] = useState<number[]>([0, props.maxCardsCount])\r\n\r\n    const onDoubleRangeHandleChange = useCallback((event: any, newValue: number | number[]) => {\r\n        setValue(newValue as number[])\r\n        props.setDoubleRangeValues(value[0], value[1])\r\n    }, [props, value])\r\n\r\n    return (\r\n        <div className={s.numberCards}>\r\n            <h2 className={s.title}>Number of cards:</h2>\r\n            <div className={classes.root}>\r\n                <Slider\r\n                    value={value}\r\n                    onChange={onDoubleRangeHandleChange}\r\n                    valueLabelDisplay=\"on\"\r\n                    aria-labelledby=\"range-slider\"\r\n                    min={props.minCardsCount}\r\n                    max={props.maxCardsCount}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React, {useCallback} from \"react\"\r\nimport {SortPacksAndCardsOrderType} from \"../../../redux/reducers/packsList-reducer\"\r\nimport s from \"./ItemsFilterSpan.module.scss\"\r\n\r\ntype ItemsFilterSpanPropsType = {\r\n    title: string\r\n    status?: SortPacksAndCardsOrderType\r\n    setSetStatusValue: (sortPacksOrder: SortPacksAndCardsOrderType, sortPacksFilter: string) => void\r\n}\r\n\r\nexport const ItemsFilterSpan = React.memo((props: ItemsFilterSpanPropsType) => {\r\n\r\n    const onStatusClickHandler = useCallback(() => {\r\n        switch (props.title) {\r\n            case \"Name\":\r\n                props.status === 1\r\n                    ? props.setSetStatusValue(0, \"name\")\r\n                    : props.setSetStatusValue(1, \"name\")\r\n                break\r\n            case \"Cards\":\r\n                props.status === 1\r\n                    ? props.setSetStatusValue(0, \"cardsCount\")\r\n                    : props.setSetStatusValue(1, \"cardsCount\")\r\n                break\r\n            case \"Last Updated\":\r\n                props.status === 1\r\n                    ? props.setSetStatusValue(0, \"updated\")\r\n                    : props.setSetStatusValue(1, \"updated\")\r\n                break\r\n            case \"Created by\":\r\n                props.status === 1\r\n                    ? props.setSetStatusValue(0, \"user_name\")\r\n                    : props.setSetStatusValue(1, \"user_name\")\r\n                break\r\n            case \"Question\":\r\n                props.status === 1\r\n                    ? props.setSetStatusValue(0, \"question\")\r\n                    : props.setSetStatusValue(1, \"question\")\r\n                break\r\n            case \"Answer\":\r\n                props.status === 1\r\n                    ? props.setSetStatusValue(0, \"answer\")\r\n                    : props.setSetStatusValue(1, \"answer\")\r\n                break\r\n            case \"Grade\":\r\n                props.status === 1\r\n                    ? props.setSetStatusValue(0, \"grade\")\r\n                    : props.setSetStatusValue(1, \"grade\")\r\n                break\r\n        }\r\n    }, [props])\r\n\r\n    return (\r\n        <span onClick={onStatusClickHandler} className={s.spanTitle}>\r\n            {props.title}\r\n            {props.status === 0 ? \"▼\": props.status === 1 ? \"▲\" : \"\"}\r\n        </span>\r\n    )\r\n})","import React from \"react\"\r\nimport s from \"./ButtonSmall.module.scss\"\r\n\r\ntype ButtonSmallPropsType = {\r\n    text: string\r\n    onClick?: any\r\n    disabled?: boolean\r\n    style?: any\r\n}\r\n\r\nexport const ButtonSmall = React.memo((props: ButtonSmallPropsType) => {\r\n    return (\r\n        <>\r\n            {props.disabled\r\n            ? <button onClick={props.onClick} disabled={props.disabled} className={s.buttonSmallDisabled}>\r\n                    {props.text}\r\n                </button>\r\n            : <button onClick={props.onClick} className={s.buttonSmall} style={props.style}>\r\n                    {props.text}\r\n                </button>\r\n            }\r\n        </>\r\n    )\r\n})\r\n","import React from \"react\"\r\nimport {Button} from \"../../button/Button\"\r\nimport s from \"./ModalDelete.module.scss\"\r\n\r\ntype ModalDelete = {\r\n    name: string\r\n    packName: string\r\n    onDeleteButtonClick: any\r\n    onCloseModalButtonClick: any\r\n}\r\n\r\nexport const ModalDelete = React.memo((props: ModalDelete) => {\r\n    return (\r\n        <div className={s.modalDelete}>\r\n            <div className={s.modalTop}>\r\n                <h2 className={s.caption}>Delete {props.name}:</h2>\r\n                <button onClick={props.onCloseModalButtonClick} className={s.btnCross}/>\r\n            </div>\r\n            <div className={s.inputWrap}>\r\n                <span className={s.text}>Do you really want to remove\r\n                    <span className={s.accent}>{props.name} Name - {props.packName}?</span>\r\n                    All cards will be excluded from this course.\r\n                </span>\r\n            </div>\r\n            <div className={s.btns}>\r\n                <Button\r\n                    onClick={props.onCloseModalButtonClick}\r\n                    className={s.button}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    onClick={props.onDeleteButtonClick}\r\n                    className={s.button}>\r\n                    Delete\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React from \"react\"\r\nimport s from \"../ModalWindow.module.scss\"\r\nimport {ModalDelete} from \"../modalDelete/ModalDelete\";\r\n\r\n\r\n\r\ntype ModalWindowDeletePropsType = {\r\n    name: string\r\n    packName: string\r\n    onDeleteButtonClick: any\r\n    onCloseModalButtonClick: any\r\n}\r\n\r\nexport const ModalWindowDelete = React.memo((props: ModalWindowDeletePropsType) => {\r\n    return (\r\n        <div className={s.modalWindow}>\r\n            <ModalDelete\r\n                name={props.name}\r\n                packName={props.packName}\r\n                onDeleteButtonClick={props.onDeleteButtonClick}\r\n                onCloseModalButtonClick={props.onCloseModalButtonClick}\r\n            />\r\n        </div>\r\n    )\r\n})","import {makeStyles, Theme} from \"@material-ui/core/styles\"\r\nimport {createStyles} from \"@material-ui/core\"\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => createStyles({\r\n    root: {\r\n        '& .MuiInputBase-input': {\r\n            fontFamily: \"SFUIDisplay, sans-serif\",\r\n            fontWeight: 500,\r\n            fontSize: \"16px\",\r\n            lineHeight: \"1.5\",\r\n            color: \"#2D2E46\",\r\n        },\r\n\r\n        '& .MuiFormLabel-root': {\r\n            fontFamily: \"SFUIDisplay, sans-serif\",\r\n            fontWeight: 400,\r\n            fontSize: \"13px\",\r\n            lineHeight: \"1.5\",\r\n            color: \"#24254A\",\r\n            opacity: \".5\"\r\n        },\r\n\r\n        '& .MuiInput-underline:before': {\r\n            height: \"1.6px\",\r\n            color: \"#24254A\",\r\n            opacity: \".2\"\r\n        },\r\n\r\n        '& .MuiInput-underline:after': {\r\n            color: \"#21268F\",\r\n            opacity: \".2\"\r\n        },\r\n\r\n        '& .MuiSvgIcon-root': {\r\n            color: \"#2D2E46\",\r\n        }\r\n    }\r\n}))","import React, {ChangeEvent} from \"react\"\r\nimport FormControl from \"@material-ui/core/FormControl\"\r\nimport {TextField} from \"@material-ui/core\"\r\nimport {TextFieldProps} from \"@material-ui/core/TextField/TextField\"\r\nimport {useStyles} from \"./InputTextMUIStyles\"\r\nimport s from \"./InputTextMUI.module.scss\"\r\n\r\ntype InputTextMUIPropsType = {\r\n    title?: string\r\n    onChangeHandler?: (e: ChangeEvent<HTMLInputElement>) => void\r\n} & TextFieldProps\r\n\r\nexport const InputTextMUI = React.memo((props: InputTextMUIPropsType) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const {...restProps} = props\r\n\r\n    return (\r\n        <FormControl fullWidth className={classes.root}>\r\n            <TextField\r\n                value={props.title}\r\n                onChange={props.onChangeHandler}\r\n                {...restProps}\r\n            />\r\n        </FormControl>\r\n    )\r\n})","import React, {ChangeEvent, useCallback, useState} from \"react\"\r\nimport {InputTextMUI} from \"../../inputText/InputTextMUI\"\r\nimport {Button} from \"../../button/Button\"\r\nimport s from \"./ModalEdit.module.scss\"\r\n\r\ntype ModalEdit = {\r\n    packName: string\r\n    onEditNewPackButtonClick: (newValue: string) => void\r\n    onCloseModalButtonClick?: () => void\r\n}\r\n\r\nexport const ModalEdit = React.memo((props: ModalEdit) => {\r\n\r\n    const [title, setTitle] = useState(props.packName)\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }, [])\r\n\r\n    const onSaveClickHandler = useCallback(() => {\r\n        if (title.trim() !== \"\") {\r\n            props.onEditNewPackButtonClick(title)\r\n            setTitle(\"\")\r\n        }\r\n    }, [props, title])\r\n\r\n    return (\r\n        <div className={s.modalAdd}>\r\n            <div className={s.modalTop}>\r\n                <h2 className={s.caption}>Edit pack:</h2>\r\n                <button onClick={props.onCloseModalButtonClick} className={s.btnCross}/>\r\n            </div>\r\n            <div className={s.inputWrap}>\r\n                <InputTextMUI\r\n                    type={\"text\"}\r\n                    value={title}\r\n                    onChangeHandler={onChangeHandler}\r\n                    label={\"Name Pack\"}\r\n                    autoComplete=\"off\"\r\n                />\r\n            </div>\r\n            <div className={s.btns}>\r\n                <Button\r\n                    onClick={props.onCloseModalButtonClick}\r\n                    className={s.button}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    onClick={onSaveClickHandler}\r\n                    className={s.button}>\r\n                    Save\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React from \"react\"\r\nimport s from \"../ModalWindow.module.scss\"\r\nimport {ModalEdit} from \"./ModalEdit\";\r\n\r\n\r\ntype ModalWindowEditPackPropsType = {\r\n    packName: string\r\n    editNewPack: (newValue: string) => void\r\n    closeModal?: () => void\r\n}\r\n\r\nexport const ModalWindowEditPack = React.memo((props: ModalWindowEditPackPropsType) => {\r\n    return (\r\n        <div className={s.modalWindow}>\r\n            <ModalEdit\r\n                packName={props.packName}\r\n                onEditNewPackButtonClick={props.editNewPack}\r\n                onCloseModalButtonClick={props.closeModal}\r\n            />\r\n        </div>\r\n    )\r\n})","import {createStyles, Theme, withStyles} from \"@material-ui/core/styles\"\r\nimport TableCell from \"@material-ui/core/TableCell\"\r\nimport TableRow from \"@material-ui/core/TableRow\"\r\n\r\nexport const StyledTableCell = withStyles((theme: Theme) =>\r\n    createStyles({\r\n        head: {\r\n            backgroundColor: \"#ECECF9;\",\r\n            color: \"#2D2E46\",\r\n            fontFamily: \"SFUIDisplay, sans-serif\",\r\n            fontWeight: 600,\r\n            lineHeight: \"1.05\",\r\n            fontSize: 13,\r\n            textAlign: \"left\",\r\n            padding: \"10px\",\r\n\r\n            '& span': {\r\n                cursor: \"pointer\",\r\n            },\r\n        },\r\n        body: {\r\n            fontSize: 13,\r\n            padding: \"10px\",\r\n        },\r\n    })\r\n)(TableCell)\r\n\r\nexport const StyledTableRow = withStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            '& a': {\r\n                color: \"#2D2E46\",\r\n            },\r\n            '& .MuiTable-root': {\r\n                boxShadow: \"0px 4px 14px rgba(45, 46, 70, 0.15\",\r\n                color: \"#2D2E46\",\r\n                fontFamily: \"SFUIDisplay, sans-serif\",\r\n                fontWeight: 400,\r\n                lineHeight: \"1.1\",\r\n            },\r\n            '&:nth-of-type(even)': {\r\n                backgroundColor: \"#F8F7FD\",\r\n            },\r\n            '& .MuiTableCell-root': {\r\n                padding: \"10px\",\r\n            },\r\n        },\r\n    })\r\n)(TableRow)","import React, {useCallback, useState} from \"react\"\r\nimport {NavLink} from \"react-router-dom\"\r\nimport {useSelector} from \"react-redux\"\r\nimport {PackResponseType} from \"../../../api/api\"\r\nimport {AppRootStateType} from \"../../../redux/store\"\r\nimport {SortPacksAndCardsOrderType} from \"../../../redux/reducers/packsList-reducer\"\r\nimport {ItemsFilterSpan} from \"../../common/itemsFilterSpan/ItemsFilterSpan\"\r\nimport {ButtonSmall} from \"../../common/buttonSmall/ButtonSmall\"\r\nimport {ModalWindowDelete} from \"../../common/modalWindow/modalDelete/ModalWindowDelete\"\r\nimport {ModalWindowEditPack} from \"../../common/modalWindow/modalEdit/ModalWindowEditPack\"\r\nimport TableRow from \"@material-ui/core/TableRow\"\r\nimport TableContainer from \"@material-ui/core/TableContainer\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport Table from \"@material-ui/core/Table\"\r\nimport TableHead from \"@material-ui/core/TableHead\"\r\nimport TableBody from \"@material-ui/core/TableBody\"\r\nimport {StyledTableCell, StyledTableRow} from \"./PacksListTableMUIStyles\"\r\nimport s from \"./PacksListTableMUI.module.scss\"\r\n\r\ntype PacksListTableMUIPropsType = {\r\n    user_id: string\r\n    packs: Array<PackResponseType>\r\n    setNewSortPacksNameOrder: (sortPacksNameOrder: SortPacksAndCardsOrderType, sortPacksFilter: string) => void\r\n    setNewSortPacksCardsCountOrder: (sortPacksOrder: SortPacksAndCardsOrderType, sortPacksFilter: string) => void\r\n    setNewSortPacksUpdateOrder: (sortPacksOrder: SortPacksAndCardsOrderType, sortPacksFilter: string) => void\r\n    setNewSortPacksCreatedByOrder: (sortPacksOrder: SortPacksAndCardsOrderType, sortPacksFilter: string) => void\r\n    updatePack: (newPackName: string, packId: string) => void\r\n    deletePack: (packId: string) => void\r\n}\r\n\r\nexport const PacksListTableMUI = React.memo((props: PacksListTableMUIPropsType) => {\r\n\r\n    const {sortPacksNameOrder, sortPacksCardsCountOrder, sortPacksUpdateOrder, sortPacksCreatedByOrder} = useSelector((state: AppRootStateType) => state.packsListReducer)\r\n\r\n    const [openDeleteModal, setOpenDeleteModal] = useState(false)\r\n    const [openEditModal, setOpenEditModal] = useState(false)\r\n    const [id, setId] = useState(\"\")\r\n    const [packName, setPackName] = useState(\"\")\r\n\r\n    const onEditNewPackHandler = useCallback((newValue: string) => {\r\n        props.updatePack(newValue, id)\r\n    }, [props, id])\r\n\r\n    const onDeletePackHandler = useCallback(() => {\r\n        props.deletePack(id)\r\n        setOpenDeleteModal(false)\r\n    }, [props, id])\r\n\r\n    const onRemoveClickHandler = useCallback((id: string, name: string) => {\r\n        setOpenDeleteModal(true)\r\n        setId(id)\r\n        setPackName(name)\r\n    }, [])\r\n\r\n    const onUpdatePackHandler = useCallback((packId: string, packName: string) => {\r\n        setOpenEditModal(true)\r\n        setId(packId)\r\n        setPackName(packName)\r\n    }, [])\r\n\r\n    const onCancelClickHandler = useCallback(() => {\r\n        setOpenDeleteModal(false)\r\n        setOpenEditModal(false)\r\n    }, [])\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table\r\n                // className={classes.table}\r\n                aria-label=\"customized table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <StyledTableCell>\r\n                            <ItemsFilterSpan\r\n                                title={\"Name\"}\r\n                                status={sortPacksNameOrder}\r\n                                setSetStatusValue={props.setNewSortPacksNameOrder}\r\n                            />\r\n                        </StyledTableCell>\r\n                        <StyledTableCell align=\"right\">\r\n                            <ItemsFilterSpan\r\n                                title={\"Cards\"}\r\n                                status={sortPacksCardsCountOrder}\r\n                                setSetStatusValue={props.setNewSortPacksCardsCountOrder}\r\n                            />\r\n                        </StyledTableCell>\r\n                        <StyledTableCell align=\"right\">\r\n                            <ItemsFilterSpan\r\n                                title={\"Last Updated\"}\r\n                                status={sortPacksUpdateOrder}\r\n                                setSetStatusValue={props.setNewSortPacksUpdateOrder}\r\n                            />\r\n                        </StyledTableCell>\r\n                        <StyledTableCell align=\"right\">\r\n                            <ItemsFilterSpan\r\n                                title={\"Created by\"}\r\n                                status={sortPacksCreatedByOrder}\r\n                                setSetStatusValue={props.setNewSortPacksCreatedByOrder}\r\n                            />\r\n                        </StyledTableCell>\r\n                        <StyledTableCell align=\"right\">Actions</StyledTableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {openDeleteModal &&\r\n                    <ModalWindowDelete\r\n                        name={\"Pack\"}\r\n                        packName={packName}\r\n                        onDeleteButtonClick={onDeletePackHandler}\r\n                        onCloseModalButtonClick={onCancelClickHandler}\r\n                    />}\r\n                    {openEditModal &&\r\n                    <ModalWindowEditPack\r\n                        packName={packName}\r\n                        editNewPack={onEditNewPackHandler}\r\n                        closeModal={onCancelClickHandler}\r\n                    />}\r\n                    {props.packs.map((pack) => (<StyledTableRow key={pack._id}>\r\n                            <StyledTableCell component=\"th\" scope=\"row\">\r\n                                <NavLink to={`/cardsList/${pack._id}`}>{pack.name}</NavLink>\r\n                            </StyledTableCell>\r\n                            <StyledTableCell>{pack.cardsCount}</StyledTableCell>\r\n                            <StyledTableCell>{pack.updated.slice(0, 10)}</StyledTableCell>\r\n                            <StyledTableCell>{pack.user_name}</StyledTableCell>\r\n                            <StyledTableCell>\r\n                                <div className={s.buttonsContainer}>\r\n                                    {props.user_id === pack.user_id\r\n                                        ? <>\r\n                                            <ButtonSmall\r\n                                                text={\"delete\"}\r\n                                                onClick={() => onRemoveClickHandler(pack._id, pack.name)}\r\n                                                style={{backgroundColor: \"#F1453D\", color: \"#ffffff\"}}\r\n                                            />\r\n                                            <ButtonSmall\r\n                                                text={\"edit\"}\r\n                                                onClick={() => onUpdatePackHandler(pack._id, pack.name)}\r\n                                                style={{backgroundColor: \"#D7D8EF\", color: \"#21268F\"}}\r\n                                            />\r\n                                            <NavLink to={`/learnCard/:${pack._id}`}>\r\n                                                <ButtonSmall\r\n                                                    text={\"learn\"}\r\n                                                    style={{backgroundColor: \"#D7D8EF\", color: \"#21268F\"}}\r\n                                                    disabled={pack.cardsCount === 0}\r\n                                                />\r\n                                            </NavLink>\r\n                                        </>\r\n                                        : <>\r\n                                            <NavLink to={`/learnCard/:${pack._id}`}>\r\n                                                <ButtonSmall\r\n                                                    text={\"learn\"}\r\n                                                    style={{backgroundColor: \"#D7D8EF\", color: \"#21268F\"}}\r\n                                                    disabled={pack.cardsCount === 0}\r\n                                                />\r\n                                            </NavLink>\r\n                                        </>\r\n                                    }\r\n                                </div>\r\n                            </StyledTableCell>\r\n                        </StyledTableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n})","import {createStyles, makeStyles} from \"@material-ui/core/styles\"\r\n\r\nexport const useStyles = makeStyles((theme) =>\r\n        createStyles({\r\n            root: {\r\n                '& > * + *': {\r\n                    marginTop: theme.spacing(2),\r\n                },\r\n\r\n                '& .MuiTypography-body1': {\r\n                    display: \"none\",\r\n                },\r\n\r\n                '& .MuiPaginationItem-page.Mui-selected': {\r\n                    color: \"#F2F5F7\",\r\n                    backgroundColor: \"#21268F;\",\r\n                    borderRadius: \"2px\",\r\n                    opacity: \"1\",\r\n                },\r\n\r\n                '& .MuiPagination-root': {\r\n                    marginTop: \"20px\",\r\n                },\r\n\r\n                '& .MuiPaginationItem-sizeSmall': {\r\n                    margin: \"0 5px\",\r\n                },\r\n\r\n                \"@media (max-width: 359.8px)\": {\r\n                    '& .MuiPagination-ul li:nth-child(3)': {\r\n                        display: \"none\",\r\n                    },\r\n\r\n                    '& .MuiPagination-ul li:nth-child(4)': {\r\n                        display: \"none\",\r\n                    },\r\n\r\n                    '& .MuiPagination-ul li:nth-child(5)': {\r\n                        display: \"none\",\r\n                    }\r\n                },\r\n            }\r\n        })\r\n)","import React, {ChangeEvent, useCallback} from \"react\"\r\nimport {Pagination} from \"@material-ui/lab\"\r\nimport {Typography} from \"@material-ui/core\"\r\nimport {useStyles} from \"./PaginationTableStyles\"\r\nimport s from \"./PaginationTable.module.scss\"\r\n\r\nexport type ShowValueType = 5 | 10 | 15\r\n\r\ntype PaginationTablePropsType = {\r\n    currentPage: number\r\n    pagesCount: number\r\n    itemsPerPageCount: number\r\n    setNewCurrentPage: (value: number) => void\r\n    setNewPageCount: (value: ShowValueType) => void\r\n}\r\n\r\nexport const PaginationTable = React.memo((props: PaginationTablePropsType) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const onCurrentPageChangeHandler = useCallback((event: ChangeEvent<unknown>, value: number) => {\r\n        props.setNewCurrentPage(value)\r\n    }, [props])\r\n\r\n    const onPageCountChangeHandler = useCallback((e: ChangeEvent<HTMLSelectElement>) => {\r\n        props.setNewPageCount(Number(e.currentTarget.value) as ShowValueType)\r\n    }, [props])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={s.pagination}>\r\n                <div className={s.paginationMUI}>\r\n                    <Typography>Page: {props.currentPage}</Typography>\r\n                    <Pagination\r\n                        page={props.currentPage}\r\n                        count={props.pagesCount ? props.pagesCount : 10}\r\n                        onChange={onCurrentPageChangeHandler}\r\n                        size={\"small\"}\r\n                        siblingCount={1}\r\n                        hidePrevButton\r\n                        hideNextButton\r\n                    />\r\n                </div>\r\n                <div className={s.show}>\r\n                    <span>Show</span>\r\n                    <select defaultValue={props.itemsPerPageCount} onChange={onPageCountChangeHandler}>\r\n                        <option value={5}>5</option>\r\n                        <option value={10}>10</option>\r\n                        <option value={15}>15</option>\r\n                    </select>\r\n                    <span>Cards per Page</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React, {ChangeEvent, useCallback, useState} from \"react\"\r\nimport {InputTextMUI} from \"../../inputText/InputTextMUI\"\r\nimport {Button} from \"../../button/Button\"\r\nimport s from \"./ModalAdd.module.scss\"\r\n\r\ntype ModalAdd = {\r\n    onAddNewPackHandler: (newValue: string) => void\r\n    onCloseModalButtonClick?: () => void\r\n}\r\n\r\nexport const ModalAdd = React.memo((props: ModalAdd) => {\r\n\r\n    const [title, setTitle] = useState(\"\")\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }, [])\r\n\r\n    const addSaveHandler = useCallback(() => {\r\n        if (title.trim() !== \"\") {\r\n            props.onAddNewPackHandler(title)\r\n            setTitle(\"\")\r\n        }\r\n    }, [props, title])\r\n\r\n    return (\r\n        <div className={s.modalAdd}>\r\n            <div className={s.modalTop}>\r\n                <h2 className={s.caption}>Add new pack:</h2>\r\n                <button onClick={props.onCloseModalButtonClick} className={s.btnCross}/>\r\n            </div>\r\n            <div className={s.inputWrap}>\r\n                <InputTextMUI\r\n                    type={\"text\"}\r\n                    value={title}\r\n                    onChangeHandler={onChangeHandler}\r\n                    label={\"Name Pack\"}\r\n                    autoComplete=\"off\"\r\n                />\r\n            </div>\r\n            <div className={s.btns}>\r\n                <Button\r\n                    onClick={props.onCloseModalButtonClick}\r\n                    className={s.button}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    onClick={addSaveHandler}\r\n                    className={s.button}>\r\n                    Save\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React from \"react\"\r\nimport {ModalAdd} from \"./ModalAdd\"\r\nimport s from \"../ModalWindow.module.scss\"\r\n\r\ntype ModalWindowAddPropsType = {\r\n    addNewPack: (newValue: string) => void\r\n    closeModal: () => void\r\n}\r\n\r\nexport const ModalWindowAdd = React.memo((props: ModalWindowAddPropsType) => {\r\n    return (\r\n        <div className={s.modalWindow}>\r\n            <ModalAdd\r\n                onAddNewPackHandler={props.addNewPack}\r\n                onCloseModalButtonClick={props.closeModal}\r\n            />\r\n        </div>\r\n    )\r\n})","import React, {useCallback, useEffect, useState} from \"react\"\r\nimport {Redirect} from \"react-router-dom\"\r\nimport {PackResponseType} from \"../../api/api\"\r\nimport {AppRootStateType} from \"../../redux/store\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {\r\n    fetchPacksTC,\r\n    changeShowAllOrMyPacksAC,\r\n    addNewPackTC,\r\n    updatePackTC,\r\n    deletePackTC,\r\n    setDoubleRangesValuesAC,\r\n    setNewCurrentPageAC,\r\n    setNewPageCountAC,\r\n    setSearchPacksValueAC,\r\n    setSortPacksCardsCountOrderAC,\r\n    setSortPacksCreatedByOrderAC,\r\n    setSortPacksNameOrderAC,\r\n    setSortPacksUpdateOrderAC,\r\n    SortPacksAndCardsOrderType\r\n} from \"../../redux/reducers/packsList-reducer\"\r\nimport {MainTitle} from \"../common/mainTitle/MainTitle\"\r\nimport {TabsShowPacks} from \"./tabsShowPacks/TabsShowPacks\"\r\nimport {SearchInput} from \"../common/searchInput/SearchInput\"\r\nimport {DoubleRange} from \"../common/doubleRange/DoubleRange\"\r\nimport {PacksListTableMUI} from \"./packsTableMUI/PacksListTableMUI\"\r\nimport {PaginationTable} from \"../common/paginationTable/PaginationTable\"\r\nimport {ModalWindowAdd} from \"../common/modalWindow/modalAdd/ModalWindowAdd\"\r\nimport {Button} from \"../common/button/Button\"\r\nimport s from \"./PacksList.module.scss\"\r\n\r\nexport const PacksList = React.memo(() => {\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.loginReducer.isLoggedIn)\r\n    const user_id = useSelector<AppRootStateType, string>(state => state.appReducer.userData._id)\r\n    const userId = useSelector<AppRootStateType, string>(state => state.packsListReducer.user_id)\r\n    const {searchPacksValue, minCardsCount, maxCardsCount, sortPacksNameOrder, sortPacksCardsCountOrder, sortPacksUpdateOrder, sortPacksCreatedByOrder, sortPacksFilter, page, pageCount} = useSelector((state: AppRootStateType) => state.packsListReducer)\r\n    const {isShowMyPacks, minCardsDoubleRangeValue, maxCardsDoubleRangeValue, cardPacksTotalCount} = useSelector((state: AppRootStateType) => state.packsListReducer)\r\n    const packs = useSelector<AppRootStateType, Array<PackResponseType>>((state) => state.packsListReducer.cardPacks)\r\n    const dispatch = useDispatch()\r\n\r\n    const [openModal, setOpenModal] = useState(false)\r\n    const pagesCount = Math.ceil(cardPacksTotalCount / pageCount)\r\n\r\n    useEffect(() => {\r\n        switch (sortPacksFilter) {\r\n            case \"name\":\r\n                dispatch(fetchPacksTC(searchPacksValue, minCardsDoubleRangeValue, maxCardsDoubleRangeValue, sortPacksNameOrder, sortPacksFilter, page, pageCount, userId))\r\n                break\r\n            case \"cardsCount\":\r\n                dispatch(fetchPacksTC(searchPacksValue, minCardsDoubleRangeValue, maxCardsDoubleRangeValue, sortPacksCardsCountOrder, sortPacksFilter, page, pageCount, userId))\r\n                break\r\n            case \"updated\":\r\n                dispatch(fetchPacksTC(searchPacksValue, minCardsDoubleRangeValue, maxCardsDoubleRangeValue, sortPacksUpdateOrder, sortPacksFilter, page, pageCount, userId))\r\n                break\r\n            case \"user_name\":\r\n                dispatch(fetchPacksTC(searchPacksValue, minCardsDoubleRangeValue, maxCardsDoubleRangeValue, sortPacksCreatedByOrder, sortPacksFilter, page, pageCount, userId))\r\n                break\r\n            default: {\r\n                const setTimer = setTimeout(() => {\r\n                    dispatch(fetchPacksTC(searchPacksValue, minCardsDoubleRangeValue, maxCardsDoubleRangeValue, sortPacksUpdateOrder, sortPacksFilter, page, pageCount, userId))\r\n                }, 300)\r\n                return () => {\r\n                    clearTimeout(setTimer)\r\n                }\r\n            }\r\n        }\r\n\r\n    }, [dispatch, searchPacksValue, minCardsDoubleRangeValue, maxCardsDoubleRangeValue, sortPacksNameOrder, sortPacksCardsCountOrder, sortPacksUpdateOrder, sortPacksCreatedByOrder, sortPacksFilter, page, pageCount, userId])\r\n\r\n    const changeShowAllOrMyPacks = useCallback((isShowMyPacks: boolean, userId: string) => {\r\n        dispatch(changeShowAllOrMyPacksAC(isShowMyPacks, userId))\r\n    }, [dispatch])\r\n\r\n    const setDoubleRangeValues = useCallback((minCardsDoubleRangeValue: number, maxCardsDoubleRangeValue: number) => {\r\n        dispatch(setDoubleRangesValuesAC(minCardsDoubleRangeValue, maxCardsDoubleRangeValue))\r\n    }, [dispatch])\r\n\r\n    const setSearchValue = useCallback((newSearchPacksValue: string) => {\r\n        dispatch(setSearchPacksValueAC(newSearchPacksValue))\r\n    }, [dispatch])\r\n\r\n    const setNewSortPacksNameOrder = useCallback((sortPacksOrder: SortPacksAndCardsOrderType, sortPacksFilter: string) => {\r\n        dispatch(setSortPacksNameOrderAC(sortPacksOrder, sortPacksFilter))\r\n    }, [dispatch])\r\n\r\n    const setNewSortPacksCardsCountOrder = useCallback((sortPacksOrder: SortPacksAndCardsOrderType, sortPacksFilter: string) => {\r\n        dispatch(setSortPacksCardsCountOrderAC(sortPacksOrder, sortPacksFilter))\r\n    }, [dispatch])\r\n\r\n    const setNewSortPacksUpdateOrder = useCallback((sortPacksOrder: SortPacksAndCardsOrderType, sortPacksFilter: string) => {\r\n        dispatch(setSortPacksUpdateOrderAC(sortPacksOrder, sortPacksFilter))\r\n    }, [dispatch])\r\n\r\n    const setNewSortPacksCreatedByOrder = useCallback((sortPacksOrder: SortPacksAndCardsOrderType, sortPacksFilter: string) => {\r\n        dispatch(setSortPacksCreatedByOrderAC(sortPacksOrder, sortPacksFilter))\r\n    }, [dispatch])\r\n\r\n    const addNewPack = useCallback((packName: string) => {\r\n        dispatch(addNewPackTC(packName, searchPacksValue, minCardsCount, maxCardsCount, sortPacksUpdateOrder, sortPacksFilter, page, pageCount, user_id))\r\n    }, [dispatch, searchPacksValue, minCardsCount, maxCardsCount, sortPacksUpdateOrder, sortPacksFilter, page, pageCount, user_id])\r\n\r\n    const updatePack = useCallback((newPackName: string, packId: string) => {\r\n        dispatch(updatePackTC(newPackName, packId, searchPacksValue, minCardsCount, maxCardsCount, sortPacksUpdateOrder, sortPacksFilter, page, pageCount, user_id))\r\n    }, [dispatch, searchPacksValue, minCardsCount, maxCardsCount, sortPacksUpdateOrder, sortPacksFilter, page, pageCount, user_id])\r\n\r\n    const deletePack = useCallback((packId: string) => {\r\n        dispatch(deletePackTC(packId, searchPacksValue, minCardsCount, maxCardsCount, sortPacksUpdateOrder, sortPacksFilter, page, pageCount, user_id))\r\n    }, [dispatch, searchPacksValue, minCardsCount, maxCardsCount, sortPacksUpdateOrder, sortPacksFilter, page, pageCount, user_id])\r\n\r\n    const setNewCurrentPage = useCallback((newCurrentPage: number) => {\r\n        dispatch(setNewCurrentPageAC(newCurrentPage))\r\n    }, [dispatch])\r\n\r\n    const setNewPageCount = useCallback((newPageCount: number) => {\r\n        dispatch(setNewPageCountAC(newPageCount))\r\n    }, [dispatch])\r\n\r\n    const onAddNewPack = useCallback((newValue: string) => {\r\n        addNewPack(newValue)\r\n        setOpenModal(false)\r\n    }, [addNewPack])\r\n\r\n    const onCloseModalHandler = useCallback(() => {\r\n        setOpenModal(false)\r\n    }, [])\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={\"/login\"}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.packsList}>\r\n            <div className={s.container}>\r\n                <div className={s.inner}>\r\n                    <div className={s.aside}>\r\n                        <TabsShowPacks\r\n                            userId={user_id}\r\n                            showPacksStatus={isShowMyPacks}\r\n                            changeShowMyPacks={changeShowAllOrMyPacks}\r\n                        />\r\n                        <div className={s.rangeWrap}>\r\n                            <DoubleRange\r\n                                minCardsCount={minCardsCount}\r\n                                maxCardsCount={maxCardsCount}\r\n                                setDoubleRangeValues={setDoubleRangeValues}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.content}>\r\n                        <MainTitle title={\"Packs list\"} textStyle={s.tableTitle}/>\r\n                        <div className={s.topWrap}>\r\n                            <SearchInput onKeyPressEnter={setSearchValue}/>\r\n                            <Button\r\n                                onClick={() => setOpenModal(true)}\r\n                                className={s.button}>\r\n                                Add new pack\r\n                            </Button>\r\n                        </div>\r\n                        {packs.length === 0\r\n                            ? <div className={s.empty}>\r\n                                <span>Packs list is empty.</span>\r\n                            </div>\r\n                            : <>\r\n                                <PacksListTableMUI\r\n                                    user_id={user_id}\r\n                                    packs={packs}\r\n                                    setNewSortPacksNameOrder={setNewSortPacksNameOrder}\r\n                                    setNewSortPacksCardsCountOrder={setNewSortPacksCardsCountOrder}\r\n                                    setNewSortPacksUpdateOrder={setNewSortPacksUpdateOrder}\r\n                                    setNewSortPacksCreatedByOrder={setNewSortPacksCreatedByOrder}\r\n                                    updatePack={updatePack}\r\n                                    deletePack={deletePack}\r\n                                />\r\n                                <PaginationTable\r\n                                    currentPage={page}\r\n                                    pagesCount={pagesCount}\r\n                                    itemsPerPageCount={pageCount}\r\n                                    setNewCurrentPage={setNewCurrentPage}\r\n                                    setNewPageCount={setNewPageCount}\r\n                                />\r\n                            </>}\r\n                        {openModal &&\r\n                        <ModalWindowAdd\r\n                            addNewPack={onAddNewPack}\r\n                            closeModal={onCloseModalHandler}\r\n                        />}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import {makeStyles, Theme} from \"@material-ui/core/styles\"\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: \"#ffffff\",\r\n        color: \"#21268F\",\r\n        fontSize: \"12px\",\r\n\r\n        '& span ': {\r\n            padding: \"1px\",\r\n        },\r\n    }\r\n}))","import React from \"react\"\r\nimport Rating from \"@material-ui/lab/Rating\"\r\nimport {RatingProps} from \"@material-ui/lab/Rating/Rating\"\r\nimport {useStyles} from \"./RatingMUI\"\r\n\r\nexport const RatingMUI = React.memo((props: RatingProps) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div>\r\n            <Rating  {...props} readOnly className={classes.root}/>\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\n\r\n","import React, {ChangeEvent, useCallback, useState} from \"react\"\r\nimport {InputTextMUI} from \"../../inputText/InputTextMUI\"\r\nimport {Button} from \"../../button/Button\"\r\nimport s from \"./CardInfo.module.scss\"\r\n\r\ntype CardInfoPropsType = {\r\n    name: string\r\n    question?: string\r\n    answer?: string\r\n    onAddNewHandler: (question: string, answer: string) => void\r\n    onCloseModalButtonClick: () => void\r\n}\r\n\r\nexport const CardInfo = React.memo((props: CardInfoPropsType) => {\r\n\r\n    const [question, setQuestion] = useState(props.question ? props.question : \"\")\r\n    const [answer, setAnswer] = useState(props.answer ? props.answer : \"\")\r\n\r\n    const onChangeHandlerQuestion = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        setQuestion(e.currentTarget.value)\r\n    }, [])\r\n\r\n    const onChangeHandlerAnswer = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        setAnswer(e.currentTarget.value)\r\n    }, [])\r\n\r\n    const addSaveHandler = useCallback(() => {\r\n        if (question.trim() !== \"\") {\r\n            props.onAddNewHandler(question, answer)\r\n            setQuestion(\"\")\r\n            setAnswer(\"\")\r\n        }\r\n    }, [props, question, answer])\r\n\r\n    return (\r\n        <div className={s.cardInfo}>\r\n            <h2 className={s.caption}>{props.name}:</h2>\r\n            <div className={s.inputBox}>\r\n                <div className={s.inputWrap}>\r\n                    <InputTextMUI\r\n                        type={\"text\"}\r\n                        value={question}\r\n                        onChangeHandler={onChangeHandlerQuestion}\r\n                        label={\"Question\"}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </div>\r\n                <div className={s.inputWrap}>\r\n                    <InputTextMUI\r\n                        type={\"text\"}\r\n                        value={answer}\r\n                        onChangeHandler={onChangeHandlerAnswer}\r\n                        label={\"Answer\"}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={s.btns}>\r\n                <Button\r\n                    onClick={props.onCloseModalButtonClick}\r\n                    className={s.button}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    onClick={addSaveHandler}\r\n                    className={s.button}>\r\n                    Save\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React from \"react\"\r\nimport s from \"../ModalWindow.module.scss\"\r\nimport {CardInfo} from \"./CardInfo\";\r\n\r\n\r\n\r\n\r\ntype ModalWindowCardInfoPropsType = {\r\n    name: string\r\n    question?: string\r\n    answer?: string\r\n    editCard: (question: string, answer: string) => void\r\n    closeModal: () => void\r\n}\r\n\r\nexport const ModalWindowCardInfo = React.memo((props: ModalWindowCardInfoPropsType) => {\r\n    return (\r\n        <div className={s.modalWindow}>\r\n            <CardInfo\r\n                name={props.name}\r\n                answer={props.answer}\r\n                question={props.question}\r\n                onAddNewHandler={props.editCard}\r\n                onCloseModalButtonClick={props.closeModal}\r\n            />\r\n        </div>\r\n    )\r\n})","import {createStyles, Theme, withStyles} from \"@material-ui/core/styles\"\r\nimport TableCell from \"@material-ui/core/TableCell\"\r\nimport TableRow from \"@material-ui/core/TableRow\"\r\n\r\nexport const StyledTableCell = withStyles((theme: Theme) =>\r\n    createStyles({\r\n        head: {\r\n            backgroundColor: \"#ECECF9\",\r\n            color: \"#2D2E46\",\r\n            fontFamily: \"SFUIDisplay, sans-serif\",\r\n            fontWeight: 600,\r\n            lineHeight: \"1.05\",\r\n            '& span': {\r\n                cursor: \"pointer\",\r\n            },\r\n        },\r\n        body: {\r\n            fontSize: 13,\r\n            boxShadow: \"0px 4px 14px rgba(45, 46, 70, 0.15\",\r\n        },\r\n    })\r\n)(TableCell)\r\n\r\nexport const StyledTableRow = withStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            '&:nth-of-type(even)': {\r\n                backgroundColor: \"#F8F7FD\",\r\n            },\r\n        },\r\n    })\r\n)(TableRow)","import React, {useCallback, useState} from \"react\"\r\nimport {useSelector} from \"react-redux\"\r\nimport {CardType} from \"../../../api/api\"\r\nimport {AppRootStateType} from \"../../../redux/store\"\r\nimport {SortPacksAndCardsOrderType} from \"../../../redux/reducers/packsList-reducer\"\r\nimport {RatingMUI} from \"../../common/rating/Rating\"\r\nimport {ItemsFilterSpan} from \"../../common/itemsFilterSpan/ItemsFilterSpan\"\r\nimport {ButtonSmall} from \"../../common/buttonSmall/ButtonSmall\"\r\nimport {ModalWindowDelete} from \"../../common/modalWindow/modalDelete/ModalWindowDelete\"\r\nimport {ModalWindowCardInfo} from \"../../common/modalWindow/modalCardInfo/ModalWindowCardInfo\"\r\nimport TableRow from \"@material-ui/core/TableRow\"\r\nimport TableContainer from \"@material-ui/core/TableContainer\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport Table from \"@material-ui/core/Table\"\r\nimport TableHead from \"@material-ui/core/TableHead\"\r\nimport TableBody from \"@material-ui/core/TableBody\"\r\nimport {StyledTableCell, StyledTableRow} from \"./CardsListTableMUIStyles\"\r\nimport s from \"./CardsListTableMUI.module.scss\"\r\n\r\ntype CardsListTableMUIPropsType = {\r\n    user_id: string\r\n    tableState: Array<CardType>\r\n    setNewSortQuestionOrder: (sortCardsQuestionOrder: SortPacksAndCardsOrderType, sortCardsFilter: string) => void\r\n    setNewSortAnswerOrder: (sortCardsAnswerOrder: SortPacksAndCardsOrderType, sortCardsFilter: string) => void\r\n    setNewSortUpdateOrder: (sortCardsUpdateOrder: SortPacksAndCardsOrderType, sortCardsFilter: string) => void\r\n    setNewSortGradeOrder: (sortCardsGradeOrder: SortPacksAndCardsOrderType, sortCardsFilter: string) => void\r\n    updateCard: (cardId: string, newCardQuestion: string, newCardAnswer: string) => void\r\n    deleteCard: (cardId: string) => void\r\n}\r\n\r\nexport const CardsListTableMUI = React.memo((props: CardsListTableMUIPropsType) => {\r\n\r\n    const {sortCardsQuestionOrder, sortCardsUpdateOrder, sortCardsAnswerOrder, sortCardsGradeOrder} = useSelector((state: AppRootStateType) => state.cardsListReducer)\r\n\r\n    const [openDeleteModal, setOpenDeleteModal] = useState(false)\r\n    const [openEditModal, setOpenEditModal] = useState(false)\r\n    const [id, setId] = useState(\"\")\r\n    const [question, setQuestion] = useState(\"\")\r\n    const [answer, setAnswer] = useState(\"\")\r\n\r\n    const onDeleteCardHandler = () => {\r\n        props.deleteCard(id)\r\n        setOpenDeleteModal(false)\r\n    }\r\n\r\n    const onRemoveHanlder = useCallback((id: string, question: string) => {\r\n        setOpenDeleteModal(true)\r\n        setId(id)\r\n        setQuestion(question)\r\n    }, [])\r\n\r\n    const onUpdatePackHandler = useCallback((packId: string, question: string, answer: string) => {\r\n        setOpenEditModal(true)\r\n        setId(packId)\r\n        setQuestion(question)\r\n        setAnswer(answer)\r\n    }, [])\r\n\r\n    const onEditNewPackHandler = useCallback((question: string, answer: string) => {\r\n        props.updateCard(id, question, answer)\r\n    }, [props, id])\r\n\r\n    const onCancelHandler = useCallback(() => {\r\n        setOpenDeleteModal(false)\r\n        setOpenEditModal(false)\r\n    }, [])\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table\r\n                // className={classes.table}\r\n                aria-label=\"customized table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <StyledTableCell>\r\n                            <ItemsFilterSpan\r\n                                title={\"Question\"}\r\n                                status={sortCardsQuestionOrder}\r\n                                setSetStatusValue={props.setNewSortQuestionOrder}\r\n                            />\r\n                        </StyledTableCell>\r\n                        <StyledTableCell>\r\n                            <ItemsFilterSpan\r\n                                title={\"Answer\"}\r\n                                status={sortCardsAnswerOrder}\r\n                                setSetStatusValue={props.setNewSortAnswerOrder}\r\n                            />\r\n                        </StyledTableCell>\r\n                        <StyledTableCell>\r\n                            <ItemsFilterSpan\r\n                                title={\"Last Updated\"}\r\n                                status={sortCardsUpdateOrder}\r\n                                setSetStatusValue={props.setNewSortUpdateOrder}\r\n                            />\r\n                        </StyledTableCell>\r\n                        <StyledTableCell>\r\n                            <ItemsFilterSpan\r\n                                title={\"Grade\"}\r\n                                status={sortCardsGradeOrder}\r\n                                setSetStatusValue={props.setNewSortGradeOrder}\r\n                            />\r\n                        </StyledTableCell>\r\n                        {props.user_id === props.tableState[0].user_id\r\n                        && <StyledTableCell>Actions</StyledTableCell>}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {openDeleteModal\r\n                    && <ModalWindowDelete\r\n                        name={\"Card\"}\r\n                        packName={question}\r\n                        onDeleteButtonClick={onDeleteCardHandler}\r\n                        onCloseModalButtonClick={onCancelHandler}\r\n                    />}\r\n                    {openEditModal\r\n                    && <ModalWindowCardInfo\r\n                        name={\"Edit card\"}\r\n                        question={question}\r\n                        answer={answer}\r\n                        editCard={onEditNewPackHandler}\r\n                        closeModal={onCancelHandler}\r\n                    />}\r\n                    {props.tableState.map((card) => (\r\n                        <StyledTableRow key={card._id}>\r\n                            <StyledTableCell>{card.question}</StyledTableCell>\r\n                            <StyledTableCell>{card.answer}</StyledTableCell>\r\n                            <StyledTableCell>{card.updated.slice(0, 10)}</StyledTableCell>\r\n                            <StyledTableCell><RatingMUI value={card.grade}/></StyledTableCell>\r\n                            {props.user_id === card.user_id\r\n                            && <StyledTableCell>\r\n                                <div className={s.buttonsContainer}>\r\n                                    <ButtonSmall\r\n                                        text={\"delete\"}\r\n                                        onClick={() => onRemoveHanlder(card._id, card.question)}\r\n                                        style={{backgroundColor: \"#F1453D\", color: \"#ffffff\"}}\r\n                                    />\r\n                                    <ButtonSmall\r\n                                        text={\"edit\"}\r\n                                        onClick={() => onUpdatePackHandler(card._id, card.question, card.answer)}\r\n                                        style={{backgroundColor: \"#D7D8EF\", color: \"#21268F\"}}\r\n                                    />\r\n                                </div>\r\n                            </StyledTableCell>}\r\n                        </StyledTableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n})","import React, {useCallback, useEffect, useState} from \"react\"\r\nimport {Redirect, useHistory, useParams} from \"react-router-dom\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {AppRootStateType} from \"../../redux/store\"\r\nimport {\r\n    addCardTC,\r\n    deleteCardTC,\r\n    getCardsTC,\r\n    setCardsNewCardsPageCountAC,\r\n    setCardsNewCurrentPageAC,\r\n    setSearchCardsValueAC,\r\n    setSortAnswerCardsAC,\r\n    setSortGradeCardsAC,\r\n    setSortQuestionCardsAC,\r\n    setSortUpdateCardsAC,\r\n    updateCardTC\r\n} from \"../../redux/reducers/cardsList-reducer\"\r\nimport {SortPacksAndCardsOrderType} from \"../../redux/reducers/packsList-reducer\"\r\nimport {CardsListTableMUI} from \"./cardsTableMUI/CardsListTableMUI\"\r\nimport {MainTitle} from \"../common/mainTitle/MainTitle\"\r\nimport {SearchInput} from \"../common/searchInput/SearchInput\"\r\nimport {Button} from \"../common/button/Button\"\r\nimport {PaginationTable} from \"../common/paginationTable/PaginationTable\"\r\nimport {ModalWindowCardInfo} from \"../common/modalWindow/modalCardInfo/ModalWindowCardInfo\"\r\nimport s from \"./CardsList.module.scss\"\r\n\r\nexport const CardsList = React.memo(() => {\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.loginReducer.isLoggedIn)\r\n    const user_id = useSelector<AppRootStateType, string>(state => state.appReducer.userData._id)\r\n    const packUserId = useSelector<AppRootStateType, string>(state => state.cardsListReducer.packUserId)\r\n    const {\r\n        cards, cardsTotalCount,\r\n        searchCardsValue,\r\n        sortCardsQuestionOrder, sortCardsAnswerOrder, sortCardsUpdateOrder, sortCardsGradeOrder, sortCardsFilter,\r\n        pageCount, page\r\n    } = useSelector((state: AppRootStateType) => state.cardsListReducer)\r\n    const dispatch = useDispatch()\r\n\r\n    const [openNewCardModal, setOpenNewCardModal] = useState(false)\r\n    const pagesCount = Math.ceil(cardsTotalCount / pageCount)\r\n\r\n    const {packId} = useParams<{ packId: string }>()\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        switch (sortCardsFilter) {\r\n            case \"question\":\r\n                dispatch(getCardsTC(packId, page, pageCount, searchCardsValue, sortCardsQuestionOrder, sortCardsFilter))\r\n                break\r\n            case \"answer\":\r\n                dispatch(getCardsTC(packId, page, pageCount, searchCardsValue, sortCardsAnswerOrder, sortCardsFilter))\r\n                break\r\n            case \"updated\":\r\n                dispatch(getCardsTC(packId, page, pageCount, searchCardsValue, sortCardsUpdateOrder, sortCardsFilter))\r\n                break\r\n            case \"grade\":\r\n                dispatch(getCardsTC(packId, page, pageCount, searchCardsValue, sortCardsGradeOrder, sortCardsFilter))\r\n                break\r\n            default:\r\n                dispatch(getCardsTC(packId, page, pageCount, searchCardsValue, sortCardsUpdateOrder, sortCardsFilter))\r\n        }\r\n    }, [dispatch, packId, page, pageCount, searchCardsValue, sortCardsQuestionOrder, sortCardsUpdateOrder, sortCardsFilter, sortCardsGradeOrder, sortCardsAnswerOrder])\r\n\r\n    const redirectToPacksListHandler = () => {\r\n        history.push(\"/\")\r\n    }\r\n\r\n    const setCardsSearchValue = useCallback((newSearchCardsValue: string) => {\r\n        dispatch(setSearchCardsValueAC(newSearchCardsValue))\r\n    }, [dispatch])\r\n\r\n    const setNewSortQuestionOrder = useCallback((sortCardsQuestionOrder: SortPacksAndCardsOrderType, sortCardsFilter: string) => {\r\n        dispatch(setSortQuestionCardsAC(sortCardsQuestionOrder, sortCardsFilter))\r\n    }, [dispatch])\r\n\r\n    const setNewSortAnswerOrder = useCallback((sortCardsAnswerOrder: SortPacksAndCardsOrderType, sortCardsFilter: string) => {\r\n        dispatch(setSortAnswerCardsAC(sortCardsAnswerOrder, sortCardsFilter))\r\n    }, [dispatch])\r\n\r\n    const setNewSortUpdateOrder = useCallback((sortCardsOrder: SortPacksAndCardsOrderType, sortCardsFilter: string) => {\r\n        dispatch(setSortUpdateCardsAC(sortCardsOrder, sortCardsFilter))\r\n    }, [dispatch])\r\n\r\n    const setNewSortGradeOrder = useCallback((sortCardsGradeOrder: SortPacksAndCardsOrderType, sortCardsFilter: string) => {\r\n        dispatch(setSortGradeCardsAC(sortCardsGradeOrder, sortCardsFilter))\r\n    }, [dispatch])\r\n\r\n    const addNewCard = useCallback((cardQuestion: string, cardAnswer: string) => {\r\n        dispatch(addCardTC(packId, cardQuestion, cardAnswer))\r\n    }, [dispatch, packId])\r\n\r\n    const updateCard = useCallback((cardId: string, newCardQuestion: string, newCardAnswer: string) => {\r\n        dispatch(updateCardTC(packId, cardId, newCardQuestion, newCardAnswer))\r\n    }, [dispatch, packId])\r\n\r\n    const deleteCard = useCallback((cardId: string) => {\r\n        dispatch(deleteCardTC(packId, cardId))\r\n    }, [dispatch, packId])\r\n\r\n    const setCardsNewCurrentPage = useCallback((newCurrentPage: number) => {\r\n        dispatch(setCardsNewCurrentPageAC(newCurrentPage))\r\n    }, [dispatch])\r\n\r\n    const setCardsNewPageCount = useCallback((newPageCount: number) => {\r\n        dispatch(setCardsNewCardsPageCountAC(newPageCount))\r\n    }, [dispatch])\r\n\r\n    const onAddNewHandler = useCallback((question: string, answer: string) => {\r\n        addNewCard(question, answer)\r\n        setOpenNewCardModal(false)\r\n    }, [addNewCard])\r\n\r\n    const onOpenModalHandler = useCallback(() => {\r\n        setOpenNewCardModal(true)\r\n    }, [])\r\n\r\n    const onCloseModalHandler = useCallback(() => {\r\n        setOpenNewCardModal(false)\r\n    }, [])\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={\"/login\"}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.cardsList}>\r\n            <div className={s.container}>\r\n                <div className={s.inner}>\r\n                    <div className={s.topWrap}>\r\n                        <button onClick={redirectToPacksListHandler} className={s.btn}/>\r\n                        <MainTitle title={\"Pack Name\"} textStyle={s.tableTitle}/>\r\n                    </div>\r\n                    <div className={s.searchWrap}>\r\n                        <SearchInput onKeyPressEnter={setCardsSearchValue}/>\r\n                        {packUserId === user_id\r\n                        && <Button\r\n                            onClick={() => onOpenModalHandler()}\r\n                            className={s.button}>\r\n                            Add new card\r\n                        </Button>}\r\n                    </div>\r\n                    {cards.length === 0\r\n                        ? <span className={s.empty}>This pack is empty. Click add new card to fill this pack.</span>\r\n                        : <>\r\n                            <CardsListTableMUI\r\n                                user_id={user_id}\r\n                                tableState={cards}\r\n                                setNewSortQuestionOrder={setNewSortQuestionOrder}\r\n                                setNewSortAnswerOrder={setNewSortAnswerOrder}\r\n                                setNewSortUpdateOrder={setNewSortUpdateOrder}\r\n                                setNewSortGradeOrder={setNewSortGradeOrder}\r\n                                updateCard={updateCard}\r\n                                deleteCard={deleteCard}\r\n                            />\r\n                            <PaginationTable\r\n                                currentPage={page}\r\n                                pagesCount={pagesCount}\r\n                                itemsPerPageCount={pageCount}\r\n                                setNewCurrentPage={setCardsNewCurrentPage}\r\n                                setNewPageCount={setCardsNewPageCount}\r\n                            />\r\n                        </>}\r\n                    {openNewCardModal\r\n                    && <ModalWindowCardInfo\r\n                        name={\"Add new card\"}\r\n                        editCard={onAddNewHandler}\r\n                        closeModal={onCloseModalHandler}\r\n                    />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React, {useCallback} from \"react\"\r\nimport {useHistory} from \"react-router-dom\"\r\nimport {useSelector} from \"react-redux\"\r\nimport {CardType} from \"../../../api/api\"\r\nimport {AppRootStateType} from \"../../../redux/store\"\r\nimport {Button} from \"../../common/button/Button\"\r\nimport s from \"./LearnQuestion.module.scss\"\r\n\r\ntype learnQuestionPropsType = {\r\n    card: CardType\r\n    setShowAnswer: (value: boolean) => void\r\n}\r\n\r\nexport const LearnQuestion = React.memo((props: learnQuestionPropsType) => {\r\n\r\n    const {headerMenuStatus} = useSelector((state: AppRootStateType) => state.appReducer)\r\n\r\n    const history = useHistory()\r\n\r\n    const onCancelClickHandler = useCallback(() => {\r\n        if (headerMenuStatus === \"packsList\") {\r\n            history.push(\"/\")\r\n        } else {\r\n            history.push(\"/profile\")\r\n        }\r\n    }, [history, headerMenuStatus])\r\n\r\n    return (\r\n        <div className={s.learnQuestion}>\r\n            <h2 className={s.caption}>Learn card: </h2>\r\n            <div className={s.block}>\r\n                <span className={s.action}>Question:</span>\r\n                <span className={s.text}>{props.card.question}</span>\r\n            </div>\r\n            <div className={s.btns}>\r\n                <Button\r\n                    onClick={onCancelClickHandler}\r\n                    className={s.button}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    onClick={() => props.setShowAnswer(true)}\r\n                    className={s.button}>\r\n                    Show answer\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React, {useCallback} from \"react\"\r\nimport {CardType} from \"../../../api/api\"\r\nimport {Button} from \"../../common/button/Button\"\r\nimport {AnswerType} from \"../LearnElement\"\r\nimport s from \"./LearnAnswer.module.scss\"\r\n\r\ntype LearnAnswerPropsType = {\r\n    card: CardType\r\n    grades: string[]\r\n    setShowAnswer: (value: boolean) => void\r\n    onNextCard: (grade: number) => void\r\n}\r\n\r\nexport const LearnAnswer = React.memo((props: LearnAnswerPropsType) => {\r\n\r\n    const [value, setValue] = React.useState<AnswerType>(-1)\r\n\r\n    const onChangeHandler = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setValue(Number(e.currentTarget.value) as AnswerType)\r\n    }, [])\r\n\r\n    const mappedOptions = props.grades ? props.grades.map((option, index) => (\r\n        <label key={index} className={s.radioLabel}>\r\n            <input\r\n                type={\"radio\"}\r\n                value={index}\r\n                checked={value === index}\r\n                onChange={onChangeHandler}\r\n                className={s.radioInput}\r\n            />\r\n            {option}\r\n        </label>\r\n    )) : []\r\n\r\n    return (\r\n        <div className={s.learnAnswer}>\r\n            <h2 className={s.caption}>Learn “Pack Name”</h2>\r\n            <div className={s.block}>\r\n                <span className={s.action}>Question:</span>\r\n                <span className={s.text}>{props.card.question}</span>\r\n            </div>\r\n            <div className={s.block}>\r\n                <span className={s.action}>Answer:</span>\r\n                <span className={s.text}>{props.card.answer}</span>\r\n            </div>\r\n            <div className={s.radioWrap}>\r\n                <span className={s.action}>Rate yourself:</span>\r\n                {mappedOptions}\r\n            </div>\r\n            <div className={s.btns}>\r\n                <Button\r\n                    onClick={() => props.setShowAnswer(false)}\r\n                    className={s.button}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    onClick={() => props.onNextCard(value)}\r\n                    className={s.button}>\r\n                    Next\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React, {useCallback, useEffect, useState} from \"react\"\r\nimport {Redirect, useParams} from \"react-router-dom\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {CardType} from \"../../api/api\"\r\nimport {AppRootStateType} from \"../../redux/store\"\r\nimport {getCardsTC} from \"../../redux/reducers/cardsList-reducer\"\r\nimport {gradeCardTC} from \"../../redux/reducers/learnPack-reducer\"\r\nimport {LearnQuestion} from \"./learnQuestion/LearnQuestion\"\r\nimport {LearnAnswer} from \"./learnAnswer/LearnAnswer\"\r\nimport s from \"./LearnElement.module.scss\";\r\n\r\nexport type AnswerType = -1 | 0 | 1 | 2 | 3 | 4 | 5\r\n\r\nconst grades = [\"No idea\", \"Forgot\", \"Think long\", \"Mix up\", \"Knew\"]\r\n\r\nconst getRandomCard = (cards: CardType[]) => {\r\n    const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0)\r\n    const rand = Math.random() * sum\r\n    const res = cards.reduce((acc: { sum: number, id: number }, card, i) => {\r\n        const newSum = acc.sum + (6 - card.grade) * (6 - card.grade)\r\n        return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n    }, {sum: 0, id: -1})\r\n    return cards[res.id + 1]\r\n}\r\n\r\nexport const LearnElement: React.FC = React.memo(() => {\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.loginReducer.isLoggedIn)\r\n\r\n    const {\r\n        cards, searchCardsValue,\r\n        sortCardsQuestionOrder, sortCardsAnswerOrder, sortCardsUpdateOrder, sortCardsGradeOrder, sortCardsFilter,\r\n        pageCount, page\r\n    } = useSelector((state: AppRootStateType) => state.cardsListReducer)\r\n    const dispatch = useDispatch()\r\n\r\n    const [firstCard, setFirstCard] = useState<boolean>(true)\r\n    const [showAnswer, setShowAnswer] = useState<boolean>(false)\r\n    const [card, setCard] = useState<CardType>({_id: \"\"} as CardType)\r\n\r\n    const {questionId} = useParams<{ questionId: string }>()\r\n\r\n    useEffect(() => {\r\n        if (firstCard) {\r\n            dispatch(getCardsTC(questionId.slice(1), page, pageCount, searchCardsValue, sortCardsUpdateOrder, sortCardsFilter))\r\n            setFirstCard(false)\r\n        }\r\n        if (cards.length > 0) {\r\n            setCard(getRandomCard(cards))\r\n        }\r\n    }, [dispatch, cards, firstCard, questionId, page, pageCount, searchCardsValue, sortCardsQuestionOrder, sortCardsUpdateOrder, sortCardsFilter, sortCardsGradeOrder, sortCardsAnswerOrder])\r\n\r\n    const onNextCard = useCallback((grade: number) => {\r\n        setShowAnswer(false)\r\n        if (cards.length > 0) {\r\n            if (grade !== -1) {\r\n                dispatch(gradeCardTC(card._id, grade))\r\n            }\r\n            setCard(getRandomCard(cards))\r\n        }\r\n    }, [dispatch, cards, card])\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={\"/login\"}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.learnWrap}>\r\n            {!showAnswer\r\n                ? <LearnQuestion\r\n                    card={card}\r\n                    setShowAnswer={setShowAnswer}\r\n                />\r\n                : <LearnAnswer\r\n                    card={card}\r\n                    grades={grades}\r\n                    setShowAnswer={setShowAnswer}\r\n                    onNextCard={onNextCard}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n})","export default __webpack_public_path__ + \"static/media/defaultUserAvatar.0deba007.png\";","import React from \"react\"\r\nimport {NavLink} from \"react-router-dom\"\r\nimport {useSelector} from \"react-redux\"\r\nimport {AppRootStateType} from \"../../../redux/store\"\r\nimport {Button} from \"../button/Button\"\r\nimport defaultAvatar from \"../../../assets/images/defaultUserAvatar.png\"\r\nimport s from \"./ProfileAvatar.module.scss\"\r\n\r\nexport const ProfileAvatar = React.memo(() => {\r\n\r\n    const {name, avatar} = useSelector((state: AppRootStateType) => state.appReducer.userData)\r\n\r\n    return (\r\n        <div className={s.profileAvatar}>\r\n            {avatar\r\n            ? <div className={s.avatarWrap}>\r\n                    <img className={s.avatar} src={avatar} alt=\"avatar\"/>\r\n                </div>\r\n            : <div className={s.avatarWrap}>\r\n                    <img className={s.avatar} src={defaultAvatar} alt=\"avatar\"/>\r\n                </div>\r\n            }\r\n            <h2 className={s.name}>{name}</h2>\r\n            <span className={s.career}>Front-end developer</span>\r\n            <div className={s.profileAvatarButtonContainer}>\r\n                <NavLink to={\"/editProfile\"}>\r\n                    <Button\r\n                        onClick={() => {}}\r\n                        className={s.profileAvatarButton}>\r\n                        Edit profile\r\n                    </Button>\r\n                </NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React, {useCallback, useEffect, useState} from \"react\"\r\nimport {Redirect} from \"react-router-dom\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {AppRootStateType} from \"../../redux/store\"\r\nimport {\r\n    fetchPacksTC,\r\n    setDoubleRangesValuesAC, setNewCurrentPageAC, setNewPageCountAC,\r\n    setSearchPacksValueAC,\r\n    setSortPacksCardsCountOrderAC, setSortPacksCreatedByOrderAC,\r\n    setSortPacksNameOrderAC,\r\n    setSortPacksUpdateOrderAC,\r\n    addNewPackTC, updatePackTC, deletePackTC,\r\n    SortPacksAndCardsOrderType\r\n} from \"../../redux/reducers/packsList-reducer\"\r\nimport {ProfileAvatar} from \"../common/profileAvatar/ProfileAvatar\"\r\nimport {DoubleRange} from \"../common/doubleRange/DoubleRange\"\r\nimport {MainTitle} from \"../common/mainTitle/MainTitle\"\r\nimport {SearchInput} from \"../common/searchInput/SearchInput\"\r\nimport {Button} from \"../common/button/Button\"\r\nimport {PacksListTableMUI} from \"../packsList/packsTableMUI/PacksListTableMUI\"\r\nimport {PaginationTable} from \"../common/paginationTable/PaginationTable\"\r\nimport {ModalWindowAdd} from \"../common/modalWindow/modalAdd/ModalWindowAdd\";\r\nimport {PackResponseType} from \"../../api/api\"\r\nimport s from \"./Profile.module.scss\"\r\n\r\n\r\ntype ProfilePropsType = {}\r\n\r\nexport const Profile = React.memo(function (props: ProfilePropsType) {\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.loginReducer.isLoggedIn)\r\n    const user_id = useSelector<AppRootStateType, string>(state => state.appReducer.userData._id)\r\n    const {searchPacksValue, minCardsCount, maxCardsCount, sortPacksNameOrder, sortPacksCardsCountOrder, sortPacksUpdateOrder, sortPacksCreatedByOrder, sortPacksFilter, page, pageCount} = useSelector((state: AppRootStateType) => state.packsListReducer)\r\n    const {minCardsDoubleRangeValue, maxCardsDoubleRangeValue, cardPacksTotalCount} = useSelector((state: AppRootStateType) => state.packsListReducer)\r\n    const packs = useSelector<AppRootStateType, Array<PackResponseType>>((state) => state.packsListReducer.cardPacks)\r\n    const dispatch = useDispatch()\r\n\r\n    const [openModal, setOpenModal] = useState(false)\r\n    const pagesCount = Math.ceil(cardPacksTotalCount / pageCount)\r\n\r\n    useEffect(() => {\r\n        switch (sortPacksFilter) {\r\n            case \"name\":\r\n                dispatch(fetchPacksTC(searchPacksValue, minCardsDoubleRangeValue, maxCardsDoubleRangeValue, sortPacksNameOrder, sortPacksFilter, page, pageCount, user_id))\r\n                break\r\n            case \"cardsCount\":\r\n                dispatch(fetchPacksTC(searchPacksValue, minCardsDoubleRangeValue, maxCardsDoubleRangeValue, sortPacksCardsCountOrder, sortPacksFilter, page, pageCount, user_id))\r\n                break\r\n            case \"updated\":\r\n                dispatch(fetchPacksTC(searchPacksValue, minCardsDoubleRangeValue, maxCardsDoubleRangeValue, sortPacksUpdateOrder, sortPacksFilter, page, pageCount, user_id))\r\n                break\r\n            case \"user_name\":\r\n                dispatch(fetchPacksTC(searchPacksValue, minCardsDoubleRangeValue, maxCardsDoubleRangeValue, sortPacksCreatedByOrder, sortPacksFilter, page, pageCount, user_id))\r\n                break\r\n            default: {\r\n                const setTimer = setTimeout(() => {\r\n                    dispatch(fetchPacksTC(searchPacksValue, minCardsDoubleRangeValue, maxCardsDoubleRangeValue, sortPacksUpdateOrder, sortPacksFilter, page, pageCount, user_id))\r\n                }, 300)\r\n                return () => {\r\n                    clearTimeout(setTimer)\r\n                }\r\n            }\r\n        }\r\n\r\n    }, [dispatch, searchPacksValue, minCardsDoubleRangeValue, maxCardsDoubleRangeValue, sortPacksNameOrder, sortPacksCardsCountOrder, sortPacksUpdateOrder, sortPacksCreatedByOrder, sortPacksFilter, page, pageCount, user_id])\r\n\r\n    const setDoubleRangeValues = useCallback((minCardsDoubleRangeValue: number, maxCardsDoubleRangeValue: number) => {\r\n        dispatch(setDoubleRangesValuesAC(minCardsDoubleRangeValue, maxCardsDoubleRangeValue))\r\n    }, [dispatch])\r\n\r\n    const setSearchValue = useCallback((newSearchPacksValue: string) => {\r\n        dispatch(setSearchPacksValueAC(newSearchPacksValue))\r\n    }, [dispatch])\r\n\r\n    const setNewSortPacksNameOrder = useCallback((sortPacksOrder: SortPacksAndCardsOrderType, sortPacksFilter: string) => {\r\n        dispatch(setSortPacksNameOrderAC(sortPacksOrder, sortPacksFilter))\r\n    }, [dispatch])\r\n\r\n    const setNewSortPacksCardsCountOrder = useCallback((sortPacksOrder: SortPacksAndCardsOrderType, sortPacksFilter: string) => {\r\n        dispatch(setSortPacksCardsCountOrderAC(sortPacksOrder, sortPacksFilter))\r\n    }, [dispatch])\r\n\r\n    const setNewSortPacksUpdateOrder = useCallback((sortPacksOrder: SortPacksAndCardsOrderType, sortPacksFilter: string) => {\r\n        dispatch(setSortPacksUpdateOrderAC(sortPacksOrder, sortPacksFilter))\r\n    }, [dispatch])\r\n\r\n    const setNewSortPacksCreatedByOrder = useCallback((sortPacksOrder: SortPacksAndCardsOrderType, sortPacksFilter: string) => {\r\n        dispatch(setSortPacksCreatedByOrderAC(sortPacksOrder, sortPacksFilter))\r\n    }, [dispatch])\r\n\r\n    const addNewPack = useCallback((packName: string) => {\r\n        dispatch(addNewPackTC(packName, searchPacksValue, minCardsCount, maxCardsCount, sortPacksUpdateOrder, sortPacksFilter, page, pageCount, user_id))\r\n    }, [dispatch, searchPacksValue, minCardsCount, maxCardsCount, sortPacksUpdateOrder, sortPacksFilter, page, pageCount, user_id])\r\n\r\n    const updatePack = useCallback((newPackName: string, packId: string) => {\r\n        dispatch(updatePackTC(newPackName, packId, searchPacksValue, minCardsCount, maxCardsCount, sortPacksUpdateOrder, sortPacksFilter, page, pageCount, user_id))\r\n    }, [dispatch, searchPacksValue, minCardsCount, maxCardsCount, sortPacksUpdateOrder, sortPacksFilter, page, pageCount, user_id])\r\n\r\n    const deletePack = useCallback((packId: string) => {\r\n        dispatch(deletePackTC(packId, searchPacksValue, minCardsCount, maxCardsCount, sortPacksUpdateOrder, sortPacksFilter, page, pageCount, user_id))\r\n    }, [dispatch, searchPacksValue, minCardsCount, maxCardsCount, sortPacksUpdateOrder, sortPacksFilter, page, pageCount, user_id])\r\n\r\n    const setNewCurrentPage = useCallback((newCurrentPage: number) => {\r\n        dispatch(setNewCurrentPageAC(newCurrentPage))\r\n    }, [dispatch])\r\n\r\n    const setNewPageCount = useCallback((newPageCount: number) => {\r\n        dispatch(setNewPageCountAC(newPageCount))\r\n    }, [dispatch])\r\n\r\n    const onCloseModalHandler = useCallback(() => {\r\n        setOpenModal(false)\r\n    }, [])\r\n\r\n    const onAddNewClickPackHandler = useCallback((newValue: string) => {\r\n        addNewPack(newValue)\r\n        setOpenModal(false)\r\n    }, [addNewPack])\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={\"/login\"}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.packsList}>\r\n            <div className={s.container}>\r\n                <div className={s.inner}>\r\n                    <div className={s.aside}>\r\n                        <ProfileAvatar/>\r\n                        <div className={s.rangeWrap}>\r\n                            <DoubleRange\r\n                                minCardsCount={minCardsCount}\r\n                                maxCardsCount={maxCardsCount}\r\n                                setDoubleRangeValues={setDoubleRangeValues}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.content}>\r\n                        <MainTitle title={\"Packs list\"} textStyle={s.tableTitle}/>\r\n                        <div className={s.topWrap}>\r\n                            <SearchInput onKeyPressEnter={setSearchValue}/>\r\n                            <Button\r\n                                onClick={() => setOpenModal(true)}\r\n                                className={s.button}>\r\n                                Add new pack\r\n                            </Button>\r\n                        </div>\r\n                        <PacksListTableMUI\r\n                            user_id={user_id}\r\n                            packs={packs}\r\n                            setNewSortPacksNameOrder={setNewSortPacksNameOrder}\r\n                            setNewSortPacksCardsCountOrder={setNewSortPacksCardsCountOrder}\r\n                            setNewSortPacksUpdateOrder={setNewSortPacksUpdateOrder}\r\n                            setNewSortPacksCreatedByOrder={setNewSortPacksCreatedByOrder}\r\n                            updatePack={updatePack}\r\n                            deletePack={deletePack}\r\n                        />\r\n                        {openModal\r\n                        && <ModalWindowAdd\r\n                            addNewPack={onAddNewClickPackHandler}\r\n                            closeModal={onCloseModalHandler}\r\n                        />}\r\n                        <PaginationTable\r\n                            currentPage={page}\r\n                            pagesCount={pagesCount}\r\n                            itemsPerPageCount={pageCount}\r\n                            setNewCurrentPage={setNewCurrentPage}\r\n                            setNewPageCount={setNewPageCount}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React from \"react\"\r\nimport {useSelector} from \"react-redux\"\r\nimport {AppRootStateType} from \"../../../redux/store\"\r\nimport defaultAvatar from \"../../../assets/images/defaultUserAvatar.png\"\r\nimport s from \"./ProfileAvatarBtn.module.scss\"\r\n\r\nexport const ProfileAvatarBtn = React.memo(() => {\r\n\r\n    const {avatar} = useSelector((state: AppRootStateType) => state.appReducer.userData)\r\n\r\n    return (\r\n        <div className={s.profileAvatar}>\r\n            {avatar\r\n                ? <div className={s.avatarWrap}>\r\n                    <img className={s.avatar} src={avatar} alt=\"avatar\"/>\r\n                    <button className={s.photoIcon}/>\r\n                </div>\r\n                :\r\n                <div className={s.avatarWrap}>\r\n                    <img className={s.avatar} src={defaultAvatar} alt=\"avatar\"/>\r\n                    <button className={s.photoIcon}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n})","import React from \"react\"\r\nimport {Redirect, useHistory} from \"react-router-dom\"\r\nimport {useFormik} from \"formik\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {AppRootStateType} from \"../../redux/store\"\r\nimport {updateUserDataTC} from \"../../redux/reducers/app-reducer\"\r\nimport {InputTextMUI} from \"../common/inputText/InputTextMUI\"\r\nimport {ProfileAvatarBtn} from \"../common/profileAvatarBtn/ProfileAvatarBtn\"\r\nimport {Button} from \"../common/button/Button\"\r\nimport s from \"./Personal.module.scss\"\r\n\r\ntype FormikErrorType = {\r\n    nickName?: string\r\n    email?: string\r\n}\r\n\r\ntype PersonalInfoPropsType = {}\r\n\r\nexport const PersonalInfo = React.memo((props: PersonalInfoPropsType) => {\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.loginReducer.isLoggedIn)\r\n    const dispatch = useDispatch()\r\n\r\n    const history = useHistory()\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            nickName: \"\",\r\n            email: \"\",\r\n            avatar: \"\"\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n            if (!values.nickName) {\r\n                errors.nickName = \"Required.\"\r\n            } else if (values.nickName.length < 1) {\r\n                errors.nickName = \"Nickname cannot be empty.\"\r\n            }\r\n            if (!values.email) {\r\n                errors.email = \"Required.\"\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = \"Invalid email address.\"\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: (values) => {\r\n            if (!formik.errors.nickName && !formik.errors.email) {\r\n                dispatch(updateUserDataTC(values.nickName, values.email, values.avatar))\r\n                formik.resetForm()\r\n                history.push(\"/profile\")\r\n            }\r\n        }\r\n    })\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={\"/login\"}/>\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit} className={s.personalInfo}>\r\n            <h2 className={s.caption}>Personal Information</h2>\r\n            <ProfileAvatarBtn/>\r\n            <div className={s.inputBox}>\r\n                <div className={s.inputWrap}>\r\n                    <InputTextMUI\r\n                        type={\"text\"}\r\n                        {...formik.getFieldProps(\"nickName\")}\r\n                        label={\"Nickname\"}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                    {formik.touched.nickName && formik.errors.nickName\r\n                        ? <div>{formik.errors.nickName}</div>\r\n                        : <div>&nbsp;</div>\r\n                    }\r\n                </div>\r\n                <div className={s.inputWrap}>\r\n                    <InputTextMUI\r\n                        type={\"text\"}\r\n                        {...formik.getFieldProps(\"email\")}\r\n                        label={\"Email\"}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                    {formik.touched.email && formik.errors.email\r\n                        ? <div>{formik.errors.email}</div>\r\n                        : <div>&nbsp;</div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className={s.btns}>\r\n                <Button\r\n                    onClick={() => history.push(\"/profile\")}\r\n                    className={s.button}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    type={\"submit\"}\r\n                    className={s.button}>\r\n                    Save\r\n                </Button>\r\n            </div>\r\n        </form>\r\n    )\r\n})","import {makeStyles} from \"@material-ui/core\"\r\n\r\nexport const useStyles = makeStyles({\r\n    root: {\r\n        '&:hover': {\r\n            backgroundColor: \"transparent\"\r\n        },\r\n        '& .MuiTypography-body1': {\r\n            fontFamily: \"SFUIDisplay, sans-serif\",\r\n            fontWeight: 400,\r\n            fontSize: \"14px\",\r\n            lineHeight: \"1.2\",\r\n            color: \"#2D2E46\"\r\n        },\r\n        '& .MuiIconButton-label': {\r\n            color: \"#2D2E46\"\r\n        }\r\n    }\r\n})","import React, {useCallback, useState} from \"react\"\r\nimport {NavLink, Redirect} from \"react-router-dom\"\r\nimport {useFormik} from \"formik\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {AppRootStateType} from \"../../redux/store\"\r\nimport {loginTC} from \"../../redux/reducers/login-reducer\"\r\nimport {RequestStatusType} from \"../../redux/reducers/app-reducer\"\r\nimport {InputTextMUI} from \"../common/inputText/InputTextMUI\"\r\nimport {MainTitle} from \"../common/mainTitle/MainTitle\"\r\nimport {Button} from \"../common/button/Button\"\r\nimport {Checkbox, FormControlLabel, IconButton} from \"@material-ui/core\"\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\"\r\nimport {Visibility, VisibilityOff} from \"@material-ui/icons\"\r\nimport {useStyles} from \"./LoginStyles\"\r\nimport s from \"./Login.module.scss\"\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n\r\nexport const Login = React.memo(() => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.appReducer.status)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.loginReducer.isLoggedIn)\r\n    const dispatch = useDispatch()\r\n\r\n    const [showPassword, setShowPassword] = useState<boolean>(false)\r\n\r\n    const handleMouseDownPassword = useCallback((event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event.preventDefault()\r\n    }, [])\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: \"poiumazaya@gmail.com\",\r\n            password: \"newPiatnicaTest\",\r\n            rememberMe: false\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n            if (!values.email) {\r\n                errors.email = \"Required.\"\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = \"Invalid email address.\"\r\n            }\r\n            if (!values.password) {\r\n                errors.password = \"Required.\"\r\n            } else if (values.password.length < 6) {\r\n                errors.password = \"Password must be more than six characters.\"\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: (values) => {\r\n            dispatch(loginTC(values.email, values.password, values.rememberMe))\r\n            formik.resetForm()\r\n        }\r\n    })\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={\"/\"}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.login}>\r\n            <MainTitle title={\"It-Incubator\"}/>\r\n            <h2 className={s.caption}>Sign In</h2>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <div className={s.inputBox}>\r\n                    <div className={s.inputWrap}>\r\n                        <InputTextMUI\r\n                            type={\"email\"}\r\n                            {...formik.getFieldProps(\"email\")}\r\n                            label={\"Email\"}\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        {formik.touched.email && formik.errors.email\r\n                            ? <div>{formik.errors.email}</div>\r\n                            : <div>&nbsp;</div>\r\n                        }\r\n                    </div>\r\n                    <div className={s.inputWrap}>\r\n                        <InputTextMUI\r\n                            type={showPassword ? \"text\" : \"password\"}\r\n                            {...formik.getFieldProps(\"password\")}\r\n                            label={\"Password\"}\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={() => setShowPassword(!showPassword)}\r\n                                            onMouseDown={handleMouseDownPassword}>\r\n                                            {showPassword ? <Visibility/> : <VisibilityOff/>}\r\n                                        </IconButton>\r\n                                    </InputAdornment>)\r\n                            }}\r\n                        />\r\n                        {formik.touched.password && formik.errors.password\r\n                            ? <div>{formik.errors.password}</div>\r\n                            : <div>&nbsp;</div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className={s.infoWrap}>\r\n                    <FormControlLabel\r\n                        label=\"Remember Me\"\r\n                        control={\r\n                            <Checkbox\r\n                                {...formik.getFieldProps(\"rememberMe\")}\r\n                                name=\"rememberMe\"\r\n                                color=\"default\"\r\n                                size={\"small\"}\r\n                            />\r\n                        }\r\n                        className={classes.root}\r\n                    />\r\n                    <NavLink to={\"/restorePassword\"} className={s.forgotLink}>Forgot Password</NavLink>\r\n                </div>\r\n                <Button\r\n                    type={\"submit\"}\r\n                    disabled={status === \"loading\"}\r\n                    className={s.button}>\r\n                    Login\r\n                </Button>\r\n                <span className={s.account}>Don’t have an account?</span>\r\n                <NavLink to={\"/registration\"} className={s.singUp}>Sign Up</NavLink>\r\n            </form>\r\n        </div>\r\n    )\r\n})","import React, {useCallback, useState} from \"react\"\r\nimport {NavLink, Redirect, useHistory} from \"react-router-dom\"\r\nimport {useFormik} from \"formik\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {AppRootStateType} from \"../../redux/store\"\r\nimport {signUpTC} from \"../../redux/reducers/registration-reducer\"\r\nimport {RequestStatusType} from \"../../redux/reducers/app-reducer\"\r\nimport {MainTitle} from \"../common/mainTitle/MainTitle\"\r\nimport {InputTextMUI} from \"../common/inputText/InputTextMUI\"\r\nimport {Button} from \"../common/button/Button\"\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\"\r\nimport {IconButton} from \"@material-ui/core\"\r\nimport {Visibility, VisibilityOff} from \"@material-ui/icons\"\r\nimport s from \"./Registration.module.scss\"\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    repeatPassword?: string\r\n}\r\n\r\nexport const Registration = React.memo(() => {\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.loginReducer.isLoggedIn)\r\n    const isSignUp = useSelector<AppRootStateType, boolean>(state => state.registrationReducer.isSignUp)\r\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.appReducer.status)\r\n    const dispatch = useDispatch()\r\n\r\n    const history = useHistory()\r\n\r\n    const [showPassword, setShowPassword] = useState<boolean>(false)\r\n    const [showConfirmPassword, setShowConfirmPassword] = useState<boolean>(false)\r\n\r\n    const onMouseDownPasswordHandler = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event.preventDefault()\r\n    }\r\n\r\n    const redirectToLoginClickHandler = useCallback(() => {\r\n        history.push(\"/login\")\r\n    }, [history])\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: \"\",\r\n            password: \"\",\r\n            repeatPassword: \"\"\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n            if (!values.email) {\r\n                errors.email = \"Required.\"\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = \"Invalid email address.\"\r\n            }\r\n            if (!values.password) {\r\n                errors.password = \"Required.\"\r\n            } else if (values.password.length < 6) {\r\n                errors.password = \"Password must be more than six characters.\"\r\n            }\r\n            if (!values.repeatPassword) {\r\n                errors.repeatPassword = \"Required.\"\r\n            } else if (values.password !== values.repeatPassword) {\r\n                errors.repeatPassword = \"Passwords are not equal.\"\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: (values) => {\r\n            dispatch(signUpTC(values.email, values.password))\r\n            formik.resetForm()\r\n        }\r\n    })\r\n\r\n    if (isSignUp) {\r\n        return <Redirect to={\"/login\"}/>\r\n    }\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={\"/\"}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.registration}>\r\n            <MainTitle title={\"It-Incubator\"}/>\r\n            <h2 className={s.caption}>Sign Up</h2>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <div className={s.inputBox}>\r\n                    <div className={s.inputWrap}>\r\n                        <InputTextMUI\r\n                            type={\"email\"}\r\n                            {...formik.getFieldProps(\"email\")}\r\n                            label={\"Email\"}\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        {formik.touched.email && formik.errors.email\r\n                            ? <div>{formik.errors.email}</div>\r\n                            : <div>&nbsp;</div>\r\n                        }\r\n                    </div>\r\n                    <div className={s.inputWrap}>\r\n                        <InputTextMUI\r\n                            type={showPassword ? \"text\" : \"password\"}\r\n                            {...formik.getFieldProps(\"password\")}\r\n                            label={\"Password\"}\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={() => setShowPassword(!showPassword)}\r\n                                            onMouseDown={onMouseDownPasswordHandler}\r\n                                        >\r\n                                            {showPassword ? <Visibility/> : <VisibilityOff/>}\r\n                                        </IconButton>\r\n                                    </InputAdornment>)\r\n                            }}\r\n                        />\r\n                        {formik.touched.password && formik.errors.password\r\n                            ? <div>{formik.errors.password}</div>\r\n                            : <div>&nbsp;</div>\r\n                        }\r\n                    </div>\r\n                    <div className={s.inputWrap}>\r\n                        <InputTextMUI\r\n                            type={showConfirmPassword ? \"text\" : \"password\"}\r\n                            {...formik.getFieldProps(\"repeatPassword\")}\r\n                            label={\"Confirm password\"}\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n                                            onMouseDown={onMouseDownPasswordHandler}\r\n                                        >\r\n                                            {showConfirmPassword ? <Visibility/> : <VisibilityOff/>}\r\n                                        </IconButton>\r\n                                    </InputAdornment>)\r\n                            }}\r\n                        />\r\n                        {formik.touched.repeatPassword && formik.errors.repeatPassword\r\n                            ? <div>{formik.errors.repeatPassword}</div>\r\n                            : <div>&nbsp;</div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className={s.btns}>\r\n                    <Button\r\n                        onClick={redirectToLoginClickHandler}\r\n                        className={s.button}>\r\n                        <NavLink to={\"/login\"}>Cancel</NavLink>\r\n                    </Button>\r\n                    <Button\r\n                        type={\"submit\"}\r\n                        disabled={status === \"loading\"}\r\n                        className={s.button}>\r\n                        Register\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n})","import React from \"react\"\r\nimport {NavLink, Redirect} from \"react-router-dom\"\r\nimport {useFormik} from \"formik\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {AppRootStateType} from \"../../redux/store\"\r\nimport {restorePasswordTC} from \"../../redux/reducers/restorePassword-reducer\"\r\nimport {RequestStatusType} from \"../../redux/reducers/app-reducer\"\r\nimport {MainTitle} from \"../common/mainTitle/MainTitle\"\r\nimport {Button} from \"../common/button/Button\"\r\nimport {InputTextMUI} from \"../common/inputText/InputTextMUI\"\r\nimport s from \"./RestorePassword.module.scss\"\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n}\r\n\r\nexport const RestorePassword = React.memo(() => {\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.loginReducer.isLoggedIn)\r\n    const errorMessage = useSelector<AppRootStateType, string | null>(message => message.restorePasswordReducer.errorMessage)\r\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.appReducer.status)\r\n    const dispatch = useDispatch()\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: \"\",\r\n        },\r\n        validate: (values) => {\r\n            const error: FormikErrorType = {}\r\n            if (!values.email) {\r\n                error.email = \"Required\"\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                error.email = \"Invalid email address\"\r\n            }\r\n            return error\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(restorePasswordTC(values.email))\r\n            formik.resetForm()\r\n        }\r\n    })\r\n\r\n    if (errorMessage?.slice(0, 8) === \"Recovery\") {\r\n        return <Redirect to={\"/checkEmail\"}/>\r\n    }\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={\"/\"}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.forgot}>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <MainTitle title={\"It-Incubator\"}/>\r\n                <h2 className={s.caption}>Forgot your password?</h2>\r\n                <div className={s.inputWrap}>\r\n                    <InputTextMUI\r\n                        type={\"email\"}\r\n                        {...formik.getFieldProps(\"email\")}\r\n                        label={\"Email\"}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                    {formik.touched.email && formik.errors.email\r\n                        ? <div>{formik.errors.email}</div>\r\n                        : <div>&nbsp;</div>\r\n                    }\r\n                </div>\r\n                <p className={s.text}>\r\n                    Enter your email address and we will send you further instructions\r\n                </p>\r\n                <Button\r\n                    type={\"submit\"}\r\n                    disabled={status === \"loading\"}\r\n                    className={s.button}>\r\n                    Send Instructions\r\n                </Button>\r\n                <p className={s.password}>Did you remember your password?</p>\r\n                <NavLink to={\"/login\"} className={s.try}>Try logging in</NavLink>\r\n            </form>\r\n        </div>\r\n    )\r\n})","import React, {useState} from \"react\"\r\nimport {Redirect, useParams} from \"react-router-dom\"\r\nimport {useFormik} from \"formik\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {AppRootStateType} from \"../../redux/store\"\r\nimport {updatePasswordTC} from \"../../redux/reducers/updatePassword-reducer\"\r\nimport {MainTitle} from \"../common/mainTitle/MainTitle\"\r\nimport {Button} from \"../common/button/Button\"\r\nimport {InputTextMUI} from \"../common/inputText/InputTextMUI\"\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\"\r\nimport {IconButton} from \"@material-ui/core\"\r\nimport {Visibility, VisibilityOff} from \"@material-ui/icons\"\r\nimport s from \"./UpdatePassword.module.scss\"\r\n\r\ntype FormikErrorType = {\r\n    newPassword?: string\r\n}\r\n\r\nexport const UpdatePassword = React.memo(() => {\r\n\r\n    const isSuccess = useSelector<AppRootStateType, boolean>(state => state.updatePasswordReducer.isSuccess)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.loginReducer.isLoggedIn)\r\n    const dispatch = useDispatch()\r\n\r\n    const [showPassword, setShowPassword] = useState<boolean>(false)\r\n    const {token} = useParams<{token: string}>()\r\n\r\n    const mouseDownPasswordHandler = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event.preventDefault()\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            newPassword: \"\",\r\n        },\r\n        validate: (values) => {\r\n            const error: FormikErrorType = {}\r\n            if (!values.newPassword) {\r\n                error.newPassword = \"Required.\"\r\n            } else if (values.newPassword.length < 8) {\r\n                error.newPassword = \"Must be at least 8 characters.\"\r\n            }\r\n            return error\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(updatePasswordTC(values.newPassword, token))\r\n            formik.resetForm()\r\n        }\r\n    })\r\n\r\n    if (isSuccess) {\r\n        return <Redirect to={\"/login\"}/>\r\n    }\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={\"/\"}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.create}>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <MainTitle title={\"It-Incubator\"}/>\r\n                <h2 className={s.caption}>Create new password</h2>\r\n                <div className={s.inputWrap}>\r\n                    <InputTextMUI\r\n                        type={showPassword ? \"text\" : \"password\"}\r\n                        {...formik.getFieldProps(\"newPassword\")}\r\n                        label={\"Password\"}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        aria-label=\"toggle password visibility\"\r\n                                        onClick={() => setShowPassword(!showPassword)}\r\n                                        onMouseDown={mouseDownPasswordHandler}\r\n                                    >\r\n                                        {showPassword ? <Visibility/> : <VisibilityOff/>}\r\n                                    </IconButton>\r\n                                </InputAdornment>)\r\n                        }}\r\n                    />\r\n                    {formik.touched.newPassword && formik.errors.newPassword\r\n                        ? <div>{formik.errors.newPassword}</div>\r\n                        : <div>&nbsp;</div>\r\n                    }\r\n                </div>\r\n                <p className={s.text}>Create new password and we will send you further instructions to email</p>\r\n                <Button\r\n                    type={\"submit\"}\r\n                    className={s.button}>\r\n                    Create new password\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    )\r\n})","export default __webpack_public_path__ + \"static/media/search.26dbc43d.svg\";","import React from \"react\"\r\nimport {NavLink} from \"react-router-dom\"\r\nimport search from \"../../assets/images/search.svg\"\r\nimport s from \"./PageNotFound.module.scss\"\r\n\r\nexport const PageNotFound = React.memo(() => {\r\n    return (\r\n        <div className={s.pageNotFoundBlock}>\r\n            <h1 className={s.number}> 404</h1>\r\n            <h2 className={s.error}>Page Not Found!</h2>\r\n            <div className={s.wrapIcon}>\r\n                <img className={s.search} src={search} alt=\"icon\"/>\r\n            </div>\r\n            <p className={s.text}>MOST LIKELY THE PAGE <br/>YOU ARE LOOKING FOR THERE</p>\r\n            <NavLink to=\"/\" className={s.linkHome}>Back to home</NavLink>\r\n        </div>\r\n    )\r\n})\r\n\r\n","export default __webpack_public_path__ + \"static/media/email.7b2dee87.svg\";","import React from \"react\"\r\nimport {Redirect} from \"react-router-dom\"\r\nimport {useSelector} from \"react-redux\"\r\nimport {AppRootStateType} from \"../../redux/store\"\r\nimport {MainTitle} from \"../common/mainTitle/MainTitle\"\r\nimport icon from \"../../assets/images/email.svg\"\r\nimport s from \"./CheckEmail.module.scss\"\r\n\r\nexport const CheckEmail = React.memo(() => {\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.loginReducer.isLoggedIn)\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={\"/\"}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.checkEmailBlock}>\r\n            <div className={s.checkEmail}>\r\n                <MainTitle title={\"It-Incubator\"}/>\r\n                <div className={s.iconBg}>\r\n                    <img src={icon} alt=\"icon\" className={s.icon}/>\r\n                </div>\r\n                <h2 className={s.caption}>Check Email</h2>\r\n                <p className={s.text}>We’ve sent an Email with instructions to example@mail.com</p>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React, {useCallback} from \"react\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {AppRootStateType} from \"../../../redux/store\"\r\nimport {setAppErrorAC} from \"../../../redux/reducers/app-reducer\"\r\nimport Snackbar from \"@material-ui/core/Snackbar\"\r\nimport MuiAlert, {AlertProps} from \"@material-ui/lab/Alert\"\r\n\r\nconst Alert = React.memo((props: AlertProps) => {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props}/>\r\n})\r\n\r\nexport const ErrorSnackbar = React.memo(() => {\r\n\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.appReducer.error)\r\n    const dispatch = useDispatch()\r\n\r\n    const [open, setOpen] = React.useState(true)\r\n\r\n    const onClickCloseHandler = useCallback((event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === \"clickaway\") {\r\n            return\r\n        }\r\n        setOpen(false)\r\n        dispatch(setAppErrorAC(null))\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Snackbar open={error !== null} autoHideDuration={6000} onClose={onClickCloseHandler}>\r\n            <Alert onClose={onClickCloseHandler} severity=\"error\">\r\n                {error}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n})","import React, {useEffect} from \"react\"\r\nimport {Redirect, Route, Switch, useLocation} from \"react-router-dom\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {AppRootStateType} from \"./redux/store\"\r\nimport {initializeAppTC, RequestStatusType} from \"./redux/reducers/app-reducer\"\r\nimport {HeaderMenu} from \"./components/common/headerMenu/HeaderMenu\"\r\nimport {PacksList} from \"./components/packsList/PacksList\"\r\nimport {CardsList} from \"./components/cardsList/CardsList\"\r\nimport {LearnElement} from \"./components/learnElement/LearnElement\"\r\nimport {Profile} from \"./components/profile/Profile\"\r\nimport {PersonalInfo} from \"./components/personalInfo/PersonalInfo\"\r\nimport {Login} from \"./components/login/Login\"\r\nimport {Registration} from \"./components/registration/Registration\"\r\nimport {RestorePassword} from \"./components/restorePassword/RestorePassword\"\r\nimport {UpdatePassword} from \"./components/updatePassword/UpdatePassword\"\r\nimport {PageNotFound} from \"./components/pageNotFound/PageNotFound\"\r\nimport {CheckEmail} from \"./components/checkEmail/CheckEmail\"\r\nimport {ErrorSnackbar} from \"./components/common/ErrorSnackbar/ErrorSnackbar\"\r\nimport {CircularProgress} from \"@material-ui/core\"\r\nimport s from \"./App.module.scss\"\r\n\r\nfunction App() {\r\n\r\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.appReducer.status)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.loginReducer.isLoggedIn)\r\n    const dispatch = useDispatch()\r\n\r\n    const {pathname} = useLocation()\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeAppTC())\r\n    }, [dispatch])\r\n\r\n    if (status === \"loading\") {\r\n        return <div style={{position: \"fixed\", top: \"40%\", textAlign: \"center\", width: \"100%\"}}>\r\n            <CircularProgress\r\n                size={70}\r\n            />\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isLoggedIn && pathname !== \"/404\" && <HeaderMenu/>}\r\n            <section className={s.pagesContainer}>\r\n                <Switch>\r\n                    <Route exact path={\"/\"} render={() => <PacksList/>}/>\r\n                    <Route exact path={\"/cardslist/:packId\"} render={() => <CardsList/>}/>\r\n                    <Route exact path={\"/learnCard/:questionId\"} render={() => <LearnElement/>}/>\r\n                    <Route path={\"/profile\"} render={() => <Profile/>}/>\r\n                    <Route path={\"/editProfile\"} render={() => <PersonalInfo/>}/>\r\n                    <Route path={\"/login\"} render={() => <Login/>}/>\r\n                    <Route path={\"/registration\"} render={() => <Registration/>}/>\r\n                    <Route path={\"/restorePassword\"} render={() => <RestorePassword/>}/>\r\n                    <Route path={\"/updatePassword/:token\"} render={() => <UpdatePassword/>}/>\r\n                    <Route exact path={\"/checkEmail\"} render={() => <CheckEmail/>}/>\r\n                    <Route path={\"/404\"} render={() => <PageNotFound/>}/>\r\n                    <Redirect from={\"*\"} to={\"/404\"}/>\r\n                </Switch>\r\n            </section>\r\n            <ErrorSnackbar/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport {HashRouter} from \"react-router-dom\"\r\nimport {Provider} from \"react-redux\"\r\nimport {store} from \"./redux/store\"\r\nimport App from \"./App\"\r\nimport reportWebVitals from \"./reportWebVitals\"\r\nimport \"./index.css\"\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <HashRouter>\r\n            <App/>\r\n        </HashRouter>\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"action\":\"LearnAnswer_action__3fj0r\",\"text\":\"LearnAnswer_text__2pMLV\",\"caption\":\"LearnAnswer_caption__2lggQ\",\"learnAnswer\":\"LearnAnswer_learnAnswer__2rYdS\",\"button\":\"LearnAnswer_button__1jp2S\",\"block\":\"LearnAnswer_block__3bT1m\",\"radioWrap\":\"LearnAnswer_radioWrap__3BAvz\",\"radio\":\"LearnAnswer_radio__3VaoV\",\"radioLabel\":\"LearnAnswer_radioLabel__3zXpa\",\"radioInput\":\"LearnAnswer_radioInput__2yS4t\",\"btns\":\"LearnAnswer_btns__1XnwK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"HeaderMenu_container__3_aNi\",\"logoutButton\":\"HeaderMenu_logoutButton__2mKf0\",\"headerMenu\":\"HeaderMenu_headerMenu__elZ7P\",\"inner\":\"HeaderMenu_inner__3qm4Z\",\"titleWrap\":\"HeaderMenu_titleWrap__3a8Vt\",\"tabsWrap\":\"HeaderMenu_tabsWrap__3qTJr\",\"tabPack\":\"HeaderMenu_tabPack__3sEyD\",\"tabProfile\":\"HeaderMenu_tabProfile__3P-kS\",\"activeHeaderMenuItem\":\"HeaderMenu_activeHeaderMenuItem__hTT39\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"TabsShowPacks_title__3G1vy\",\"tabsShowPacks\":\"TabsShowPacks_tabsShowPacks__3ElEv\",\"tabItemsContainer\":\"TabsShowPacks_tabItemsContainer__z-rW8\",\"tabItem\":\"TabsShowPacks_tabItem__1sXKq\",\"activeTabItem\":\"TabsShowPacks_activeTabItem__2rrDz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"accent\":\"ModalDelete_accent__2aTnX\",\"text\":\"ModalDelete_text__3BEHo\",\"caption\":\"ModalDelete_caption__1p9bT\",\"button\":\"ModalDelete_button__1Mmy5\",\"modalDelete\":\"ModalDelete_modalDelete__1l0NJ\",\"btnCross\":\"ModalDelete_btnCross__2FYEg\",\"modalTop\":\"ModalDelete_modalTop__2WLeW\",\"inputWrap\":\"ModalDelete_inputWrap__4gEC9\",\"btns\":\"ModalDelete_btns__2gQQT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PacksList_container__6Tf1G\",\"empty\":\"PacksList_empty__1xKSE\",\"tableTitle\":\"PacksList_tableTitle__291MI\",\"packsList\":\"PacksList_packsList__2EHMt\",\"inner\":\"PacksList_inner__2cTbX\",\"aside\":\"PacksList_aside__mNFuQ\",\"rangeWrap\":\"PacksList_rangeWrap__2rDjd\",\"content\":\"PacksList_content__3a8BQ\",\"topWrap\":\"PacksList_topWrap__2zNL7\",\"button\":\"PacksList_button__11N79\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"singUp\":\"Login_singUp__w0XOi\",\"account\":\"Login_account__3I_Rk\",\"caption\":\"Login_caption__X8KwO\",\"login\":\"Login_login__KtlP5\",\"inputBox\":\"Login_inputBox__1m1kY\",\"inputWrap\":\"Login_inputWrap__3Yguo\",\"infoWrap\":\"Login_infoWrap__3wWob\",\"forgotLink\":\"Login_forgotLink__2uYfO\",\"button\":\"Login_button__HDo3-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CardsList_container__n5YzU\",\"empty\":\"CardsList_empty__TYXcU\",\"tableTitle\":\"CardsList_tableTitle__OXDXG\",\"cardsList\":\"CardsList_cardsList__3H6fn\",\"inner\":\"CardsList_inner__3q-5Y\",\"topWrap\":\"CardsList_topWrap__3AUtC\",\"btn\":\"CardsList_btn__HcWu1\",\"searchWrap\":\"CardsList_searchWrap__dFgb2\",\"button\":\"CardsList_button__19SPM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileAvatarButton\":\"ProfileAvatar_profileAvatarButton__1Y16L\",\"career\":\"ProfileAvatar_career__1RxKf\",\"name\":\"ProfileAvatar_name__2TP_i\",\"profileAvatar\":\"ProfileAvatar_profileAvatar__POFo8\",\"avatarWrap\":\"ProfileAvatar_avatarWrap__vxrGk\",\"avatar\":\"ProfileAvatar_avatar__1rhjg\",\"profileAvatarButtonContainer\":\"ProfileAvatar_profileAvatarButtonContainer__7p3D8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profile_container__lL8iT\",\"tableTitle\":\"Profile_tableTitle__3VLWq\",\"packsList\":\"Profile_packsList__2eazw\",\"inner\":\"Profile_inner__2Y8px\",\"aside\":\"Profile_aside__ETQBw\",\"rangeWrap\":\"Profile_rangeWrap__39c4S\",\"content\":\"Profile_content__1Fq0c\",\"topWrap\":\"Profile_topWrap__XKvEF\",\"button\":\"Profile_button__2zGS0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"caption\":\"Registration_caption__ve2Ze\",\"registration\":\"Registration_registration__3ZSyy\",\"button\":\"Registration_button__1HVFr\",\"inputBox\":\"Registration_inputBox__QYnER\",\"inputWrap\":\"Registration_inputWrap__1_gTw\",\"btns\":\"Registration_btns__1PQgL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"ModalEdit_text__A5Ydy\",\"caption\":\"ModalEdit_caption__14-jQ\",\"button\":\"ModalEdit_button__1zdQ5\",\"modalAdd\":\"ModalEdit_modalAdd__2UI5H\",\"btnCross\":\"ModalEdit_btnCross__9w89y\",\"modalTop\":\"ModalEdit_modalTop__2dRhr\",\"inputWrap\":\"ModalEdit_inputWrap__2HAdA\",\"btns\":\"ModalEdit_btns__iKiux\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"ModalAdd_text__3mD5b\",\"caption\":\"ModalAdd_caption__20y1L\",\"button\":\"ModalAdd_button__1FvKR\",\"modalAdd\":\"ModalAdd_modalAdd__3pYI6\",\"btnCross\":\"ModalAdd_btnCross__2CnMP\",\"modalTop\":\"ModalAdd_modalTop__2WhQH\",\"inputWrap\":\"ModalAdd_inputWrap__3YBba\",\"btns\":\"ModalAdd_btns__1O-Yp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"caption\":\"CardInfo_caption__13l0a\",\"cardInfo\":\"CardInfo_cardInfo__3CUxl\",\"button\":\"CardInfo_button__12Gxs\",\"inputBox\":\"CardInfo_inputBox__1YZ7Y\",\"inputWrap\":\"CardInfo_inputWrap__36vJx\",\"file\":\"CardInfo_file__3jDo3\",\"label\":\"CardInfo_label__Hay8c\",\"btns\":\"CardInfo_btns__2Nqk2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"action\":\"LearnQuestion_action__1FYA-\",\"text\":\"LearnQuestion_text__3CcRs\",\"caption\":\"LearnQuestion_caption__10neb\",\"learnQuestion\":\"LearnQuestion_learnQuestion___WGQ5\",\"button\":\"LearnQuestion_button__3-RDW\",\"block\":\"LearnQuestion_block__2wFi4\",\"btns\":\"LearnQuestion_btns__G4aEA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"caption\":\"Personal_caption__1-tLP\",\"personalInfo\":\"Personal_personalInfo__3GiQ4\",\"button\":\"Personal_button__pdNJb\",\"inputBox\":\"Personal_inputBox__33zjU\",\"inputWrap\":\"Personal_inputWrap__155TB\",\"btns\":\"Personal_btns__RJsW3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalWindow\":\"ModalWindow_modalWindow__3xSh_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileAvatar\":\"ProfileAvatarBtn_profileAvatar__19duZ\",\"avatarWrap\":\"ProfileAvatarBtn_avatarWrap__eC048\",\"avatar\":\"ProfileAvatarBtn_avatar__5doZn\",\"photoIcon\":\"ProfileAvatarBtn_photoIcon__2XI2B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"try\":\"RestorePassword_try__1y9kc\",\"password\":\"RestorePassword_password__3GAyk\",\"caption\":\"RestorePassword_caption__t8saE\",\"forgot\":\"RestorePassword_forgot__VT2Lz\",\"inputWrap\":\"RestorePassword_inputWrap__1Gv_R\",\"text\":\"RestorePassword_text__2EV2T\",\"button\":\"RestorePassword_button__1oj_C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"linkHome\":\"PageNotFound_linkHome__-L2LA\",\"error\":\"PageNotFound_error__1GKVx\",\"number\":\"PageNotFound_number__1L_ip\",\"pageNotFoundBlock\":\"PageNotFound_pageNotFoundBlock__WMarY\",\"wrapIcon\":\"PageNotFound_wrapIcon__3IUUr\",\"search\":\"PageNotFound_search__siOgT\",\"text\":\"PageNotFound_text__2vwvu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"caption\":\"CheckEmail_caption__1RbB7\",\"checkEmail\":\"CheckEmail_checkEmail__2jPGg\",\"checkEmailBlock\":\"CheckEmail_checkEmailBlock__22wlV\",\"iconBg\":\"CheckEmail_iconBg__Tftx0\",\"text\":\"CheckEmail_text__2wHHp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"caption\":\"UpdatePassword_caption__1IbCw\",\"create\":\"UpdatePassword_create__3q1A3\",\"inputWrap\":\"UpdatePassword_inputWrap___hfQ0\",\"text\":\"UpdatePassword_text__vpj6Q\",\"button\":\"UpdatePassword_button__13B-W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"PaginationTable_pagination__2tzwd\",\"paginationMUI\":\"PaginationTable_paginationMUI__ti4va\",\"show\":\"PaginationTable_show__3ZRUV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Button_default__1nTqQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"DoubleRange_title__12mci\",\"numberCards\":\"DoubleRange_numberCards__2WXfX\",\"none\":\"DoubleRange_none__2OUQn\"};"],"sourceRoot":""}